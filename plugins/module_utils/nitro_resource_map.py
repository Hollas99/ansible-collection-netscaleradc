NITRO_RESOURCE_MAP = {
    "aaaglobal_aaapreauthenticationpolicy_binding": {
        "add_payload_keys": ["policy", "priority"],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "policy": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "aaaglobal_authenticationnegotiateaction_binding": {
        "add_payload_keys": ["windowsprofile"],
        "bindprimary_key": "windowsprofile",
        "delete_arg_keys": ["windowsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["windowsprofile"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {"windowsprofile": {"type": "str"}},
        "update_payload_keys": [],
    },
    "aaagroup": {
        "add_payload_keys": ["groupname", "weight"],
        "bindings": [
            "aaagroup_intranetip6_binding",
            "aaagroup_authorizationpolicy_binding",
            "aaagroup_auditnslogpolicy_binding",
            "aaagroup_vpnurl_binding",
            "aaagroup_vpnsessionpolicy_binding",
            "aaagroup_intranetip_binding",
            "aaagroup_vpnurlpolicy_binding",
            "aaagroup_vpntrafficpolicy_binding",
            "aaagroup_vpnintranetapplication_binding",
            "aaagroup_aaauser_binding",
            "aaagroup_auditsyslogpolicy_binding",
            "aaagroup_tmsessionpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["loggedin"],
        "immutable_keys": ["weight", "groupname"],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "aaagroup_aaauser_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_intranetip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_intranetip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_tmsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_vpnintranetapplication_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_vpnsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_vpntrafficpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_vpnurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaagroup_vpnurlpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "groupname": {"type": "str"},
            "loggedin": {"type": "bool"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_aaauser_binding": {
        "add_payload_keys": ["groupname", "username", "gotopriorityexpression"],
        "bindprimary_key": "username",
        "delete_arg_keys": ["username"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["username"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_authorizationpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_intranetip6_binding": {
        "add_payload_keys": [
            "groupname",
            "gotopriorityexpression",
            "intranetip6",
            "numaddr",
        ],
        "bindprimary_key": "intranetip6",
        "delete_arg_keys": ["intranetip6", "numaddr"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip6", "numaddr"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "intranetip6": {"type": "str"},
            "numaddr": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_intranetip_binding": {
        "add_payload_keys": [
            "groupname",
            "intranetip",
            "gotopriorityexpression",
            "netmask",
        ],
        "bindprimary_key": "intranetip",
        "delete_arg_keys": ["intranetip", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip", "netmask"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "intranetip": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_tmsessionpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_vpnintranetapplication_binding": {
        "add_payload_keys": [
            "groupname",
            "intranetapplication",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "intranetapplication",
        "delete_arg_keys": ["intranetapplication"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetapplication"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "intranetapplication": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_vpnsessionpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_vpntrafficpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaagroup_vpnurl_binding": {
        "add_payload_keys": ["groupname", "urlname", "gotopriorityexpression"],
        "bindprimary_key": "urlname",
        "delete_arg_keys": ["urlname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["urlname"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "urlname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaagroup_vpnurlpolicy_binding": {
        "add_payload_keys": [
            "groupname",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupname": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "aaakcdaccount": {
        "add_payload_keys": [
            "kcdaccount",
            "keytab",
            "realmstr",
            "delegateduser",
            "kcdpassword",
            "usercert",
            "cacert",
            "userrealm",
            "enterpriserealm",
            "servicespn",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "kcdaccount",
        "readwrite_arguments": {
            "cacert": {"type": "str"},
            "delegateduser": {"type": "str"},
            "enterpriserealm": {"type": "str"},
            "kcdaccount": {"type": "str"},
            "kcdpassword": {"type": "str"},
            "keytab": {"type": "str"},
            "realmstr": {"type": "str"},
            "servicespn": {"type": "str"},
            "usercert": {"type": "str"},
            "userrealm": {"type": "str"},
        },
        "update_payload_keys": [
            "kcdaccount",
            "keytab",
            "realmstr",
            "delegateduser",
            "kcdpassword",
            "usercert",
            "cacert",
            "userrealm",
            "enterpriserealm",
            "servicespn",
        ],
    },
    "aaaotpparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "encryption": {"choices": [True, False], "type": "str"},
            "maxotpdevices": {"type": "int"},
        },
        "update_payload_keys": ["encryption", "maxotpdevices"],
    },
    "aaaparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "aaadloglevel": {
                "choices": [
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                ],
                "type": "str",
            },
            "aaadnatip": {"type": "str"},
            "aaasessionloglevel": {
                "choices": [
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                ],
                "type": "str",
            },
            "apitokencache": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "defaultauthtype": {
                "choices": ["LOCAL", "LDAP", "RADIUS", "TACACS", "CERT"],
                "type": "str",
            },
            "defaultcspheader": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dynaddr": {"choices": [True, False], "type": "str"},
            "enableenhancedauthfeedback": {"choices": [True, False], "type": "str"},
            "enablesessionstickiness": {"choices": [True, False], "type": "str"},
            "enablestaticpagecaching": {"choices": [True, False], "type": "str"},
            "failedlogintimeout": {"type": "int"},
            "ftmode": {"choices": [True, "HA", False], "type": "str"},
            "loginencryption": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxaaausers": {"type": "int"},
            "maxkbquestions": {"type": "int"},
            "maxloginattempts": {"type": "int"},
            "maxsamldeflatesize": {"type": "int"},
            "persistentloginattempts": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "pwdexpirynotificationdays": {"type": "int"},
            "samesite": {"choices": ["None", "LAX", "STRICT"], "type": "str"},
            "tokenintrospectioninterval": {"type": "int"},
        },
        "update_payload_keys": [
            "enablestaticpagecaching",
            "enableenhancedauthfeedback",
            "defaultauthtype",
            "maxaaausers",
            "maxloginattempts",
            "aaadnatip",
            "enablesessionstickiness",
            "aaasessionloglevel",
            "aaadloglevel",
            "dynaddr",
            "ftmode",
            "maxsamldeflatesize",
            "persistentloginattempts",
            "pwdexpirynotificationdays",
            "maxkbquestions",
            "loginencryption",
            "samesite",
            "apitokencache",
            "tokenintrospectioninterval",
            "defaultcspheader",
            "httponlycookie",
            "failedlogintimeout",
        ],
    },
    "aaapreauthenticationaction": {
        "add_payload_keys": [
            "name",
            "preauthenticationaction",
            "killprocess",
            "deletefiles",
            "defaultepagroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultepagroup": {"type": "str"},
            "deletefiles": {"type": "str"},
            "killprocess": {"type": "str"},
            "name": {"type": "str"},
            "preauthenticationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "preauthenticationaction",
            "killprocess",
            "deletefiles",
            "defaultepagroup",
        ],
    },
    "aaapreauthenticationparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "deletefiles": {"type": "str"},
            "killprocess": {"type": "str"},
            "preauthenticationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": [
            "preauthenticationaction",
            "rule",
            "killprocess",
            "deletefiles",
        ],
    },
    "aaapreauthenticationpolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "aaassoprofile": {
        "add_payload_keys": ["name", "username", "password"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "password": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": ["name", "username", "password"],
    },
    "aaauser": {
        "add_payload_keys": ["username", "password"],
        "bindings": [
            "aaauser_intranetip_binding",
            "aaauser_vpnurlpolicy_binding",
            "aaauser_vpntrafficpolicy_binding",
            "aaauser_intranetip6_binding",
            "aaauser_vpnintranetapplication_binding",
            "aaauser_authorizationpolicy_binding",
            "aaauser_auditnslogpolicy_binding",
            "aaauser_vpnurl_binding",
            "aaauser_auditsyslogpolicy_binding",
            "aaauser_vpnsessionpolicy_binding",
            "aaauser_tmsessionpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["loggedin"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "aaauser_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_intranetip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_intranetip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_tmsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_vpnintranetapplication_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_vpnsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_vpntrafficpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_vpnurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "aaauser_vpnurlpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "loggedin": {"type": "bool"},
            "password": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": ["username", "password"],
    },
    "aaauser_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_authorizationpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_intranetip6_binding": {
        "add_payload_keys": [
            "username",
            "gotopriorityexpression",
            "intranetip6",
            "numaddr",
        ],
        "bindprimary_key": "intranetip6",
        "delete_arg_keys": ["intranetip6", "numaddr"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip6", "numaddr"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetip6": {"type": "str"},
            "numaddr": {"type": "int"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_intranetip_binding": {
        "add_payload_keys": [
            "username",
            "intranetip",
            "gotopriorityexpression",
            "netmask",
        ],
        "bindprimary_key": "intranetip",
        "delete_arg_keys": ["intranetip", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip", "netmask"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetip": {"type": "str"},
            "netmask": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_tmsessionpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_vpnintranetapplication_binding": {
        "add_payload_keys": [
            "username",
            "intranetapplication",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "intranetapplication",
        "delete_arg_keys": ["intranetapplication"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetapplication"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetapplication": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_vpnsessionpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_vpntrafficpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_vpnurl_binding": {
        "add_payload_keys": ["username", "urlname", "gotopriorityexpression"],
        "bindprimary_key": "urlname",
        "delete_arg_keys": ["urlname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["urlname"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "urlname": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "aaauser_vpnurlpolicy_binding": {
        "add_payload_keys": [
            "username",
            "policy",
            "gotopriorityexpression",
            "priority",
            "type",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "type"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "UDP_REQUEST", "DNS_REQUEST", "ICMP_REQUEST"],
                "type": "str",
            },
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "admparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "admserviceconnect": {"choices": ["ENABLED", "DISABLED"], "type": "str"}
        },
        "update_payload_keys": ["admserviceconnect"],
    },
    "analyticsglobal_analyticsprofile_binding": {
        "add_payload_keys": ["analyticsprofile"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {"analyticsprofile": {"type": "str"}},
        "update_payload_keys": [],
    },
    "analyticsprofile": {
        "add_payload_keys": [
            "name",
            "collectors",
            "type",
            "analyticsauthtoken",
            "analyticsendpointurl",
            "analyticsendpointcontenttype",
            "analyticsendpointmetadata",
            "httpclientsidemeasurements",
            "httppagetracking",
            "httpurl",
            "httphost",
            "httpmethod",
            "httpreferer",
            "httpuseragent",
            "httpcookie",
            "httplocation",
            "urlcategory",
            "allhttpheaders",
            "httpcontenttype",
            "httpauthentication",
            "httpvia",
            "httpxforwardedforheader",
            "httpsetcookie",
            "httpsetcookie2",
            "httpdomainname",
            "httpurlquery",
            "tcpburstreporting",
            "cqareporting",
            "integratedcache",
            "grpcstatus",
            "outputmode",
            "metrics",
            "events",
            "auditlogs",
            "servemode",
            "schemafile",
            "metricsexportfrequency",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "allhttpheaders": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "auditlogs": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "collectors": {"type": "str"},
            "cqareporting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "events": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "grpcstatus": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpauthentication": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpclientsidemeasurements": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "httpcontenttype": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpcookie": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpdomainname": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httphost": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httplocation": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpmethod": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httppagetracking": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpreferer": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpsetcookie": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpsetcookie2": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpurl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpurlquery": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpuseragent": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpvia": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httpxforwardedforheader": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "integratedcache": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "metrics": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "outputmode": {"choices": ["avro", "prometheus", "influx"], "type": "str"},
            "schemafile": {"type": "str"},
            "servemode": {"choices": ["Push", "Pull"], "type": "str"},
            "tcpburstreporting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "type": {
                "choices": [
                    "global",
                    "webinsight",
                    "tcpinsight",
                    "securityinsight",
                    "videoinsight",
                    "hdxinsight",
                    "gatewayinsight",
                    "timeseries",
                    "lsninsight",
                    "botinsight",
                    "CIinsight",
                ],
                "type": "str",
            },
            "urlcategory": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "collectors",
            "type",
            "httpclientsidemeasurements",
            "httppagetracking",
            "httpurl",
            "httphost",
            "httpmethod",
            "httpreferer",
            "httpuseragent",
            "httpcookie",
            "httplocation",
            "urlcategory",
            "allhttpheaders",
            "httpcontenttype",
            "httpauthentication",
            "httpvia",
            "httpxforwardedforheader",
            "httpsetcookie",
            "httpsetcookie2",
            "httpdomainname",
            "httpurlquery",
            "tcpburstreporting",
            "cqareporting",
            "integratedcache",
            "grpcstatus",
            "outputmode",
            "metrics",
            "events",
            "auditlogs",
            "servemode",
            "schemafile",
            "metricsexportfrequency",
            "analyticsauthtoken",
            "analyticsendpointurl",
            "analyticsendpointcontenttype",
            "analyticsendpointmetadata",
        ],
    },
    "appflowaction": {
        "add_payload_keys": [
            "name",
            "collectors",
            "clientsidemeasurements",
            "pagetracking",
            "webinsight",
            "securityinsight",
            "botinsight",
            "ciinsight",
            "videoanalytics",
            "distributionalgorithm",
            "metricslog",
            "transactionlog",
            "comment",
        ],
        "bindings": ["appflowaction_analyticsprofile_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["metricslog", "transactionlog"],
        "primary_key": "name",
        "readwrite_arguments": {
            "appflowaction_analyticsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botinsight": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ciinsight": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientsidemeasurements": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "collectors": {"type": "list"},
            "comment": {"type": "str"},
            "distributionalgorithm": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "metricslog": {"type": "bool"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "pagetracking": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "securityinsight": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "transactionlog": {"choices": ["ALL", "ANOMALOUS"], "type": "str"},
            "videoanalytics": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "webinsight": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "collectors",
            "clientsidemeasurements",
            "comment",
            "pagetracking",
            "webinsight",
            "securityinsight",
            "botinsight",
            "ciinsight",
            "videoanalytics",
            "distributionalgorithm",
        ],
    },
    "appflowaction_analyticsprofile_binding": {
        "add_payload_keys": ["name", "analyticsprofile"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appflowcollector": {
        "add_payload_keys": ["name", "ipaddress", "port", "netprofile", "transport"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["transport"],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "port": {"type": "int"},
            "transport": {"choices": ["ipfix", "logstream", "rest"], "type": "str"},
        },
        "update_payload_keys": ["name", "ipaddress", "port", "netprofile"],
    },
    "appflowglobal_appflowpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "OVERRIDE",
                    "DEFAULT",
                    "OTHERTCP_REQ_OVERRIDE",
                    "OTHERTCP_REQ_DEFAULT",
                    "MSSQL_REQ_OVERRIDE",
                    "MSSQL_REQ_DEFAULT",
                    "MYSQL_REQ_OVERRIDE",
                    "MYSQL_REQ_DEFAULT",
                    "ICA_REQ_OVERRIDE",
                    "ICA_REQ_DEFAULT",
                    "ORACLE_REQ_OVERRIDE",
                    "ORACLE_REQ_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "appflowpolicy": {
        "add_payload_keys": ["name", "rule", "action", "undefaction", "comment"],
        "bindings": ["appflowpolicylabel_appflowpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "appflowpolicylabel_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "undefaction", "comment"],
    },
    "appflowpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype"],
        "bindings": ["appflowpolicylabel_appflowpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "appflowpolicylabel_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {
                "choices": ["HTTP", "OTHERTCP", "HTTP_QUIC"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "appflowpolicylabel_appflowpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "appfwconfidfield": {
        "add_payload_keys": ["fieldname", "url", "isregex", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["url"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["url"],
        "immutable_keys": [],
        "primary_key": "fieldname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "fieldname": {"type": "str"},
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "url": {"type": "str"},
        },
        "update_payload_keys": ["fieldname", "url", "comment", "isregex"],
    },
    "appfwfieldtype": {
        "add_payload_keys": ["name", "regex", "priority", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["nocharmaps"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "nocharmaps": {"type": "bool"},
            "priority": {"type": "int"},
            "regex": {"type": "str"},
        },
        "update_payload_keys": ["name", "regex", "priority", "comment"],
    },
    "appfwglobal_appfwpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "NONE",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "appfwglobal_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "NONE",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "appfwglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "NONE",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "appfwgrpccontenttype": {
        "add_payload_keys": ["grpccontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["isregex", "grpccontenttypevalue"],
        "primary_key": "grpccontenttypevalue",
        "readwrite_arguments": {
            "grpccontenttypevalue": {"type": "str"},
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwgrpcwebjsoncontenttype": {
        "add_payload_keys": ["grpcwebjsoncontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["isregex", "grpcwebjsoncontenttypevalue"],
        "primary_key": "grpcwebjsoncontenttypevalue",
        "readwrite_arguments": {
            "grpcwebjsoncontenttypevalue": {"type": "str"},
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwgrpcwebtextcontenttype": {
        "add_payload_keys": ["grpcwebtextcontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["isregex", "grpcwebtextcontenttypevalue"],
        "primary_key": "grpcwebtextcontenttypevalue",
        "readwrite_arguments": {
            "grpcwebtextcontenttypevalue": {"type": "str"},
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwjsoncontenttype": {
        "add_payload_keys": ["jsoncontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["jsoncontenttypevalue", "isregex"],
        "primary_key": "jsoncontenttypevalue",
        "readwrite_arguments": {
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "jsoncontenttypevalue": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwmultipartformcontenttype": {
        "add_payload_keys": ["multipartformcontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["isregex", "multipartformcontenttypevalue"],
        "primary_key": "multipartformcontenttypevalue",
        "readwrite_arguments": {
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "multipartformcontenttypevalue": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwpolicy": {
        "add_payload_keys": ["name", "rule", "profilename", "comment", "logaction"],
        "bindings": ["appfwpolicylabel_appfwpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "appfwpolicylabel_appfwpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "profilename": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "profilename", "comment", "logaction"],
    },
    "appfwpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype"],
        "bindings": ["appfwpolicylabel_appfwpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "appfwpolicylabel_appfwpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {"choices": ["http_req", "httpquic_req"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwpolicylabel_appfwpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile": {
        "add_payload_keys": [
            "name",
            "defaults",
            "starturlaction",
            "infercontenttypexmlpayloadaction",
            "contenttypeaction",
            "inspectcontenttypes",
            "starturlclosure",
            "denyurlaction",
            "refererheadercheck",
            "cookieconsistencyaction",
            "cookiehijackingaction",
            "cookietransforms",
            "cookieencryption",
            "cookieproxying",
            "addcookieflags",
            "fieldconsistencyaction",
            "csrftagaction",
            "crosssitescriptingaction",
            "crosssitescriptingtransformunsafehtml",
            "crosssitescriptingcheckcompleteurls",
            "sqlinjectionaction",
            "cmdinjectionaction",
            "cmdinjectiontype",
            "sqlinjectiongrammar",
            "cmdinjectiongrammar",
            "sqlinjectiontransformspecialchars",
            "sqlinjectiononlycheckfieldswithsqlchars",
            "sqlinjectiontype",
            "sqlinjectionchecksqlwildchars",
            "fieldformataction",
            "defaultfieldformattype",
            "defaultfieldformatminlength",
            "defaultfieldformatmaxlength",
            "bufferoverflowaction",
            "grpcaction",
            "restaction",
            "bufferoverflowmaxurllength",
            "bufferoverflowmaxheaderlength",
            "bufferoverflowmaxcookielength",
            "bufferoverflowmaxquerylength",
            "bufferoverflowmaxtotalheaderlength",
            "creditcardaction",
            "creditcard",
            "creditcardmaxallowed",
            "creditcardxout",
            "dosecurecreditcardlogging",
            "streaming",
            "trace",
            "requestcontenttype",
            "responsecontenttype",
            "jsonerrorobject",
            "apispec",
            "protofileobject",
            "jsonerrorstatuscode",
            "jsonerrorstatusmessage",
            "jsondosaction",
            "jsonsqlinjectionaction",
            "jsonsqlinjectiontype",
            "jsonsqlinjectiongrammar",
            "jsoncmdinjectionaction",
            "jsoncmdinjectiontype",
            "jsoncmdinjectiongrammar",
            "jsonxssaction",
            "xmldosaction",
            "xmlformataction",
            "xmlsqlinjectionaction",
            "xmlsqlinjectiononlycheckfieldswithsqlchars",
            "xmlsqlinjectiontype",
            "xmlsqlinjectionchecksqlwildchars",
            "xmlsqlinjectionparsecomments",
            "xmlxssaction",
            "xmlwsiaction",
            "xmlattachmentaction",
            "xmlvalidationaction",
            "xmlerrorobject",
            "xmlerrorstatuscode",
            "xmlerrorstatusmessage",
            "signatures",
            "xmlsoapfaultaction",
            "usehtmlerrorobject",
            "errorurl",
            "htmlerrorobject",
            "htmlerrorstatuscode",
            "htmlerrorstatusmessage",
            "logeverypolicyhit",
            "striphtmlcomments",
            "stripxmlcomments",
            "exemptclosureurlsfromsecuritychecks",
            "defaultcharset",
            "clientipexpression",
            "dynamiclearning",
            "postbodylimit",
            "postbodylimitaction",
            "postbodylimitsignature",
            "fileuploadmaxnum",
            "canonicalizehtmlresponse",
            "enableformtagging",
            "sessionlessfieldconsistency",
            "sessionlessurlclosure",
            "semicolonfieldseparator",
            "excludefileuploadfromchecks",
            "sqlinjectionparsecomments",
            "invalidpercenthandling",
            "type",
            "checkrequestheaders",
            "inspectquerycontenttypes",
            "optimizepartialreqs",
            "urldecoderequestcookies",
            "comment",
            "percentdecoderecursively",
            "multipleheaderaction",
            "rfcprofile",
            "fileuploadtypesaction",
            "verboseloglevel",
            "insertcookiesamesiteattribute",
            "cookiesamesiteattribute",
            "sqlinjectionruletype",
            "fakeaccountdetection",
            "geolocationlogging",
            "ceflogging",
            "blockkeywordaction",
            "jsonblockkeywordaction",
            "as_prof_bypass_list_enable",
            "as_prof_deny_list_enable",
            "sessioncookiename",
        ],
        "bindings": [
            "appfwprofile_cookieconsistency_binding",
            "appfwprofile_fileuploadtype_binding",
            "appfwprofile_xmlattachmenturl_binding",
            "appfwprofile_jsonxssurl_binding",
            "appfwprofile_denylist_binding",
            "appfwprofile_xmlvalidationurl_binding",
            "appfwprofile_cmdinjection_binding",
            "appfwprofile_jsonblockkeyword_binding",
            "appfwprofile_xmldosurl_binding",
            "appfwprofile_excluderescontenttype_binding",
            "appfwprofile_jsondosurl_binding",
            "appfwprofile_csrftag_binding",
            "appfwprofile_sqlinjection_binding",
            "appfwprofile_bypasslist_binding",
            "appfwprofile_denyurl_binding",
            "appfwprofile_logexpression_binding",
            "appfwprofile_xmlsqlinjection_binding",
            "appfwprofile_xmlxss_binding",
            "appfwprofile_appfwconfidfield_binding",
            "appfwprofile_contenttype_binding",
            "appfwprofile_trustedlearningclients_binding",
            "appfwprofile_fieldconsistency_binding",
            "appfwprofile_blockkeyword_binding",
            "appfwprofile_xmlwsiurl_binding",
            "appfwprofile_jsoncmdurl_binding",
            "appfwprofile_fakeaccount_binding",
            "appfwprofile_jsonsqlurl_binding",
            "appfwprofile_safeobject_binding",
            "appfwprofile_creditcardnumber_binding",
            "appfwprofile_crosssitescripting_binding",
            "appfwprofile_starturl_binding",
            "appfwprofile_fieldformat_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["defaults"],
        "primary_key": "name",
        "readwrite_arguments": {
            "addcookieflags": {
                "choices": ["none", "httpOnly", "secure", "all"],
                "type": "str",
            },
            "appfwprofile_appfwconfidfield_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_blockkeyword_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_bypasslist_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_cmdinjection_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_contenttype_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_cookieconsistency_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_creditcardnumber_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_crosssitescripting_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_csrftag_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_denylist_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_denyurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_excluderescontenttype_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_fakeaccount_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_fieldconsistency_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_fieldformat_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_fileuploadtype_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_jsonblockkeyword_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_jsoncmdurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_jsondosurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_jsonsqlurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_jsonxssurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_logexpression_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_safeobject_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_sqlinjection_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_starturl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_trustedlearningclients_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmlattachmenturl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmldosurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmlsqlinjection_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmlvalidationurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmlwsiurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "appfwprofile_xmlxss_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "archivename": {"type": "str"},
            "augment": {"type": "bool"},
            "blockkeywordaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "bufferoverflowaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "bufferoverflowmaxcookielength": {"type": "int"},
            "bufferoverflowmaxheaderlength": {"type": "int"},
            "bufferoverflowmaxquerylength": {"type": "int"},
            "bufferoverflowmaxtotalheaderlength": {"type": "int"},
            "bufferoverflowmaxurllength": {"type": "int"},
            "canonicalizehtmlresponse": {"choices": [True, False], "type": "str"},
            "ceflogging": {"choices": [True, False], "type": "str"},
            "checkrequestheaders": {"choices": [True, False], "type": "str"},
            "clientipexpression": {"type": "str"},
            "cmdinjectionaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "cmdinjectiongrammar": {"choices": [True, False], "type": "str"},
            "cmdinjectiontype": {
                "choices": [
                    "CMDSplChar",
                    "CMDKeyword",
                    "CMDSplCharORKeyword",
                    "CMDSplCharANDKeyword",
                    "None",
                ],
                "type": "str",
            },
            "comment": {"type": "str"},
            "contenttypeaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "cookieconsistencyaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "cookieencryption": {
                "choices": ["none", "decryptOnly", "encryptSessionOnly", "encryptAll"],
                "type": "str",
            },
            "cookiehijackingaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "cookieproxying": {"choices": ["none", "sessionOnly"], "type": "str"},
            "cookiesamesiteattribute": {
                "choices": ["None", "LAX", "STRICT"],
                "type": "str",
            },
            "cookietransforms": {"choices": [True, False], "type": "str"},
            "creditcard": {
                "choices": [
                    "none",
                    "visa",
                    "mastercard",
                    "discover",
                    "amex",
                    "jcb",
                    "dinersclub",
                ],
                "type": "list",
            },
            "creditcardaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "creditcardmaxallowed": {"type": "int"},
            "creditcardxout": {"choices": [True, False], "type": "str"},
            "crosssitescriptingaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "crosssitescriptingcheckcompleteurls": {
                "choices": [True, False],
                "type": "str",
            },
            "crosssitescriptingtransformunsafehtml": {
                "choices": [True, False],
                "type": "str",
            },
            "csrftagaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "customsettings": {"type": "str"},
            "defaultcharset": {"type": "str"},
            "defaultfieldformatmaxlength": {"type": "int"},
            "defaultfieldformatminlength": {"type": "int"},
            "defaultfieldformattype": {"type": "str"},
            "defaults": {"choices": ["basic", "advanced", "core"], "type": "str"},
            "denyurlaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "dosecurecreditcardlogging": {"choices": [True, False], "type": "str"},
            "dynamiclearning": {
                "choices": [
                    "none",
                    "SQLInjection",
                    "CrossSiteScripting",
                    "fieldFormat",
                    "startURL",
                    "cookieConsistency",
                    "fieldConsistency",
                    "CSRFtag",
                    "ContentType",
                ],
                "type": "list",
            },
            "enableformtagging": {"choices": [True, False], "type": "str"},
            "errorurl": {"type": "str"},
            "excludefileuploadfromchecks": {"choices": [True, False], "type": "str"},
            "exemptclosureurlsfromsecuritychecks": {
                "choices": [True, False],
                "type": "str",
            },
            "fakeaccountdetection": {"choices": [True, False], "type": "str"},
            "fieldconsistencyaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "fieldformataction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "fileuploadmaxnum": {"type": "int"},
            "fileuploadtypesaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "geolocationlogging": {"choices": [True, False], "type": "str"},
            "grpcaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "htmlerrorobject": {"type": "str"},
            "htmlerrorstatuscode": {"type": "int"},
            "htmlerrorstatusmessage": {"type": "str"},
            "importprofilename": {"type": "str"},
            "infercontenttypexmlpayloadaction": {
                "choices": ["block", "log", "stats", "none"],
                "type": "list",
            },
            "insertcookiesamesiteattribute": {"choices": [True, False], "type": "str"},
            "inspectcontenttypes": {
                "choices": [
                    "none",
                    "application/x-www-form-urlencoded",
                    "multipart/form-data",
                    "text/x-gwt-rpc",
                    "application/grpc",
                    "application/grpc-web-text",
                    "application/grpc-web+json",
                ],
                "type": "list",
            },
            "inspectquerycontenttypes": {
                "choices": ["HTML", "XML", "JSON", "OTHER"],
                "type": "list",
            },
            "invalidpercenthandling": {
                "choices": ["apache_mode", "asp_mode", "secure_mode"],
                "type": "str",
            },
            "jsonblockkeywordaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "jsoncmdinjectionaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "jsoncmdinjectiongrammar": {"choices": [True, False], "type": "str"},
            "jsoncmdinjectiontype": {
                "choices": [
                    "CMDSplChar",
                    "CMDKeyword",
                    "CMDSplCharORKeyword",
                    "CMDSplCharANDKeyword",
                    "None",
                ],
                "type": "str",
            },
            "jsondosaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "jsonerrorobject": {"type": "str"},
            "jsonerrorstatuscode": {"type": "int"},
            "jsonerrorstatusmessage": {"type": "str"},
            "jsonsqlinjectionaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "jsonsqlinjectiongrammar": {"choices": [True, False], "type": "str"},
            "jsonsqlinjectiontype": {
                "choices": [
                    "SQLSplChar",
                    "SQLKeyword",
                    "SQLSplCharORKeyword",
                    "SQLSplCharANDKeyword",
                    "None",
                ],
                "type": "str",
            },
            "jsonxssaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "logeverypolicyhit": {"choices": [True, False], "type": "str"},
            "matchurlstring": {"type": "str"},
            "multipleheaderaction": {
                "choices": ["block", "keepLast", "log", "none"],
                "type": "list",
            },
            "name": {"type": "str"},
            "optimizepartialreqs": {"choices": [True, False], "type": "str"},
            "overwrite": {"type": "bool"},
            "percentdecoderecursively": {"choices": [True, False], "type": "str"},
            "postbodylimit": {"type": "int"},
            "postbodylimitaction": {
                "choices": ["block", "log", "stats"],
                "type": "list",
            },
            "postbodylimitsignature": {"type": "int"},
            "protofileobject": {"type": "str"},
            "refererheadercheck": {
                "choices": [
                    False,
                    "if_present",
                    "AlwaysExceptStartURLs",
                    "AlwaysExceptFirstRequest",
                ],
                "type": "str",
            },
            "relaxationrules": {"type": "bool"},
            "replaceurlstring": {"type": "str"},
            "requestcontenttype": {"type": "str"},
            "responsecontenttype": {"type": "str"},
            "rfcprofile": {"type": "str"},
            "semicolonfieldseparator": {"choices": [True, False], "type": "str"},
            "sessionlessfieldconsistency": {
                "choices": [False, True, "postOnly"],
                "type": "str",
            },
            "sessionlessurlclosure": {"choices": [True, False], "type": "str"},
            "signatures": {"type": "str"},
            "sqlinjectionaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "sqlinjectionchecksqlwildchars": {"choices": [True, False], "type": "str"},
            "sqlinjectiongrammar": {"choices": [True, False], "type": "str"},
            "sqlinjectiononlycheckfieldswithsqlchars": {
                "choices": [True, False],
                "type": "str",
            },
            "sqlinjectionparsecomments": {
                "choices": ["checkall", "ansi", "nested", "ansinested"],
                "type": "str",
            },
            "sqlinjectionruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "sqlinjectiontransformspecialchars": {
                "choices": [True, False],
                "type": "str",
            },
            "sqlinjectiontype": {
                "choices": [
                    "SQLSplChar",
                    "SQLKeyword",
                    "SQLSplCharORKeyword",
                    "SQLSplCharANDKeyword",
                    "None",
                ],
                "type": "str",
            },
            "starturlaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "starturlclosure": {"choices": [True, False], "type": "str"},
            "streaming": {"choices": [True, False], "type": "str"},
            "stripcomments": {"choices": [True, False], "type": "str"},
            "striphtmlcomments": {
                "choices": ["none", "all", "exclude_script_tag"],
                "type": "str",
            },
            "stripxmlcomments": {"choices": ["none", "all"], "type": "str"},
            "trace": {"choices": [True, False], "type": "str"},
            "type": {"choices": ["HTML", "XML", "JSON"], "type": "list"},
            "urldecoderequestcookies": {"choices": [True, False], "type": "str"},
            "usehtmlerrorobject": {"choices": [True, False], "type": "str"},
            "verboseloglevel": {
                "choices": ["pattern", "patternPayload", "patternPayloadHeader"],
                "type": "str",
            },
            "xmlattachmentaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "xmldosaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "xmlerrorobject": {"type": "str"},
            "xmlerrorstatuscode": {"type": "int"},
            "xmlerrorstatusmessage": {"type": "str"},
            "xmlformataction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "xmlsoapfaultaction": {
                "choices": ["none", "block", "log", "remove", "stats"],
                "type": "list",
            },
            "xmlsqlinjectionaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "xmlsqlinjectionchecksqlwildchars": {
                "choices": [True, False],
                "type": "str",
            },
            "xmlsqlinjectiononlycheckfieldswithsqlchars": {
                "choices": [True, False],
                "type": "str",
            },
            "xmlsqlinjectionparsecomments": {
                "choices": ["checkall", "ansi", "nested", "ansinested"],
                "type": "str",
            },
            "xmlsqlinjectiontype": {
                "choices": [
                    "SQLSplChar",
                    "SQLKeyword",
                    "SQLSplCharORKeyword",
                    "SQLSplCharANDKeyword",
                    "None",
                ],
                "type": "str",
            },
            "xmlvalidationaction": {
                "choices": ["none", "block", "log", "stats"],
                "type": "list",
            },
            "xmlwsiaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
            "xmlxssaction": {
                "choices": ["none", "block", "learn", "log", "stats"],
                "type": "list",
            },
        },
        "update_payload_keys": [
            "name",
            "starturlaction",
            "infercontenttypexmlpayloadaction",
            "contenttypeaction",
            "inspectcontenttypes",
            "starturlclosure",
            "denyurlaction",
            "refererheadercheck",
            "cookieconsistencyaction",
            "cookiehijackingaction",
            "cookietransforms",
            "cookieencryption",
            "cookieproxying",
            "addcookieflags",
            "fieldconsistencyaction",
            "csrftagaction",
            "crosssitescriptingaction",
            "crosssitescriptingtransformunsafehtml",
            "crosssitescriptingcheckcompleteurls",
            "sqlinjectionaction",
            "cmdinjectionaction",
            "cmdinjectiontype",
            "sqlinjectiontransformspecialchars",
            "sqlinjectiononlycheckfieldswithsqlchars",
            "sqlinjectiontype",
            "sqlinjectionchecksqlwildchars",
            "sqlinjectiongrammar",
            "cmdinjectiongrammar",
            "fieldformataction",
            "defaultfieldformattype",
            "defaultfieldformatminlength",
            "defaultfieldformatmaxlength",
            "bufferoverflowaction",
            "grpcaction",
            "restaction",
            "bufferoverflowmaxurllength",
            "bufferoverflowmaxheaderlength",
            "bufferoverflowmaxcookielength",
            "bufferoverflowmaxquerylength",
            "bufferoverflowmaxtotalheaderlength",
            "creditcardaction",
            "creditcard",
            "creditcardmaxallowed",
            "creditcardxout",
            "dosecurecreditcardlogging",
            "streaming",
            "trace",
            "requestcontenttype",
            "responsecontenttype",
            "jsonerrorobject",
            "jsonerrorstatuscode",
            "jsonerrorstatusmessage",
            "apispec",
            "protofileobject",
            "jsondosaction",
            "jsonsqlinjectionaction",
            "jsonsqlinjectiontype",
            "jsonsqlinjectiongrammar",
            "jsoncmdinjectionaction",
            "jsoncmdinjectiontype",
            "jsoncmdinjectiongrammar",
            "jsonxssaction",
            "xmldosaction",
            "xmlformataction",
            "xmlsqlinjectionaction",
            "xmlsqlinjectiononlycheckfieldswithsqlchars",
            "xmlsqlinjectiontype",
            "xmlsqlinjectionchecksqlwildchars",
            "xmlsqlinjectionparsecomments",
            "xmlxssaction",
            "xmlwsiaction",
            "xmlattachmentaction",
            "xmlvalidationaction",
            "xmlerrorobject",
            "xmlerrorstatuscode",
            "xmlerrorstatusmessage",
            "signatures",
            "xmlsoapfaultaction",
            "usehtmlerrorobject",
            "errorurl",
            "htmlerrorobject",
            "htmlerrorstatuscode",
            "htmlerrorstatusmessage",
            "logeverypolicyhit",
            "striphtmlcomments",
            "stripxmlcomments",
            "clientipexpression",
            "dynamiclearning",
            "exemptclosureurlsfromsecuritychecks",
            "defaultcharset",
            "postbodylimit",
            "postbodylimitaction",
            "postbodylimitsignature",
            "fileuploadmaxnum",
            "canonicalizehtmlresponse",
            "enableformtagging",
            "sessionlessfieldconsistency",
            "sessionlessurlclosure",
            "semicolonfieldseparator",
            "excludefileuploadfromchecks",
            "sqlinjectionparsecomments",
            "invalidpercenthandling",
            "type",
            "checkrequestheaders",
            "inspectquerycontenttypes",
            "optimizepartialreqs",
            "urldecoderequestcookies",
            "comment",
            "percentdecoderecursively",
            "multipleheaderaction",
            "rfcprofile",
            "fileuploadtypesaction",
            "verboseloglevel",
            "insertcookiesamesiteattribute",
            "cookiesamesiteattribute",
            "sqlinjectionruletype",
            "fakeaccountdetection",
            "geolocationlogging",
            "ceflogging",
            "blockkeywordaction",
            "jsonblockkeywordaction",
            "as_prof_bypass_list_enable",
            "as_prof_deny_list_enable",
            "sessioncookiename",
        ],
    },
    "appfwprofile_appfwconfidfield_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "isautodeployed",
            "resourceid",
            "confidfield",
            "ruletype",
            "cffield_url",
            "isregex_cffield",
        ],
        "bindprimary_key": "confidfield",
        "delete_arg_keys": ["confidfield", "ruletype", "cffield_url"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["confidfield", "ruletype", "cffield_url"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "cffield_url": {"type": "str"},
            "comment": {"type": "str"},
            "confidfield": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_cffield": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_blockkeyword_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "isautodeployed",
            "resourceid",
            "blockkeyword",
            "ruletype",
            "fieldname",
            "as_blockkeyword_formurl",
            "as_fieldname_isregex_blockkeyword",
            "blockkeywordtype",
        ],
        "bindprimary_key": "blockkeyword",
        "delete_arg_keys": [
            "blockkeyword",
            "ruletype",
            "fieldname",
            "as_blockkeyword_formurl",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "blockkeyword",
            "ruletype",
            "fieldname",
            "as_blockkeyword_formurl",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_blockkeyword_formurl": {"type": "str"},
            "as_fieldname_isregex_blockkeyword": {
                "choices": ["REGEX", "NOTREGEX"],
                "type": "str",
            },
            "blockkeyword": {"type": "str"},
            "blockkeywordtype": {"choices": ["literal", "PCRE"], "type": "str"},
            "comment": {"type": "str"},
            "fieldname": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_cmdinjection_binding": {
        "add_payload_keys": [
            "name",
            "cmdinjection",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "formactionurl_cmd",
            "isregex_cmd",
            "as_scan_location_cmd",
            "as_value_type_cmd",
            "as_value_expr_cmd",
            "isvalueregex_cmd",
        ],
        "bindprimary_key": "cmdinjection",
        "delete_arg_keys": [
            "cmdinjection",
            "ruletype",
            "formactionurl_cmd",
            "as_scan_location_cmd",
            "as_value_type_cmd",
            "as_value_expr_cmd",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "cmdinjection",
            "ruletype",
            "formactionurl_cmd",
            "as_scan_location_cmd",
            "as_value_type_cmd",
            "as_value_expr_cmd",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_scan_location_cmd": {
                "choices": ["FORMFIELD", "HEADER", "COOKIE"],
                "type": "str",
            },
            "as_value_expr_cmd": {"type": "str"},
            "as_value_type_cmd": {
                "choices": ["Keyword", "SpecialString"],
                "type": "str",
            },
            "cmdinjection": {"type": "str"},
            "comment": {"type": "str"},
            "formactionurl_cmd": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_cmd": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_cmd": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_contenttype_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "contenttype",
            "isautodeployed",
            "resourceid",
            "ruletype",
        ],
        "bindprimary_key": "contenttype",
        "delete_arg_keys": ["contenttype", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["contenttype", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "contenttype": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_cookieconsistency_binding": {
        "add_payload_keys": [
            "name",
            "cookieconsistency",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "isregex",
        ],
        "bindprimary_key": "cookieconsistency",
        "delete_arg_keys": ["cookieconsistency", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["cookieconsistency", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "cookieconsistency": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_creditcardnumber_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "creditcardnumber",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "creditcardnumberurl",
        ],
        "bindprimary_key": "creditcardnumber",
        "delete_arg_keys": ["creditcardnumber", "ruletype", "creditcardnumberurl"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["creditcardnumber", "ruletype", "creditcardnumberurl"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "creditcardnumber": {"type": "str"},
            "creditcardnumberurl": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_crosssitescripting_binding": {
        "add_payload_keys": [
            "name",
            "crosssitescripting",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "formactionurl_xss",
            "isregex_xss",
            "as_scan_location_xss",
            "as_value_type_xss",
            "as_value_expr_xss",
            "isvalueregex_xss",
        ],
        "bindprimary_key": "crosssitescripting",
        "delete_arg_keys": [
            "crosssitescripting",
            "ruletype",
            "formactionurl_xss",
            "as_scan_location_xss",
            "as_value_type_xss",
            "as_value_expr_xss",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "crosssitescripting",
            "ruletype",
            "formactionurl_xss",
            "as_scan_location_xss",
            "as_value_type_xss",
            "as_value_expr_xss",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_scan_location_xss": {
                "choices": ["FORMFIELD", "HEADER", "COOKIE", "URL"],
                "type": "str",
            },
            "as_value_expr_xss": {"type": "str"},
            "as_value_type_xss": {
                "choices": ["Tag", "Attribute", "Pattern"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "crosssitescripting": {"type": "str"},
            "formactionurl_xss": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_xss": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_xss": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_csrftag_binding": {
        "add_payload_keys": [
            "name",
            "csrftag",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "csrfformactionurl",
        ],
        "bindprimary_key": "csrftag",
        "delete_arg_keys": ["csrftag", "ruletype", "csrfformactionurl"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["csrftag", "ruletype", "csrfformactionurl"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "csrfformactionurl": {"type": "str"},
            "csrftag": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_denyurl_binding": {
        "add_payload_keys": [
            "name",
            "denyurl",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
        ],
        "bindprimary_key": "denyurl",
        "delete_arg_keys": ["denyurl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["denyurl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "denyurl": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_excluderescontenttype_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "excluderescontenttype",
            "isautodeployed",
            "resourceid",
            "ruletype",
        ],
        "bindprimary_key": "excluderescontenttype",
        "delete_arg_keys": ["excluderescontenttype", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["excluderescontenttype", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "excluderescontenttype": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_fakeaccount_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "isautodeployed",
            "resourceid",
            "fakeaccount",
            "ruletype",
            "tag",
            "isfieldnameregex",
            "formexpression",
            "formurl_fad",
        ],
        "bindprimary_key": "fakeaccount",
        "delete_arg_keys": [
            "fakeaccount",
            "ruletype",
            "tag",
            "formexpression",
            "formurl_fad",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "fakeaccount",
            "ruletype",
            "tag",
            "formexpression",
            "formurl_fad",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "fakeaccount": {"type": "str"},
            "formexpression": {"type": "str"},
            "formurl_fad": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isfieldnameregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "tag": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_fieldconsistency_binding": {
        "add_payload_keys": [
            "name",
            "fieldconsistency",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "formactionurl_ffc",
            "isregex_ffc",
        ],
        "bindprimary_key": "fieldconsistency",
        "delete_arg_keys": ["fieldconsistency", "ruletype", "formactionurl_ffc"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["fieldconsistency", "ruletype", "formactionurl_ffc"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "fieldconsistency": {"type": "str"},
            "formactionurl_ffc": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_ffc": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_fieldformat_binding": {
        "add_payload_keys": [
            "name",
            "fieldformat",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "formactionurl_ff",
            "fieldtype",
            "fieldformatminlength",
            "fieldformatmaxlength",
            "isregex_ff",
        ],
        "bindprimary_key": "fieldformat",
        "delete_arg_keys": ["fieldformat", "ruletype", "formactionurl_ff"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["fieldformat", "ruletype", "formactionurl_ff"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "fieldformat": {"type": "str"},
            "fieldformatmaxlength": {"type": "int"},
            "fieldformatminlength": {"type": "int"},
            "fieldtype": {"type": "str"},
            "formactionurl_ff": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_ff": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_fileuploadtype_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "fileuploadtype",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "as_fileuploadtypes_url",
            "isnameregex",
            "isregex_fileuploadtypes_url",
            "filetype",
        ],
        "bindprimary_key": "fileuploadtype",
        "delete_arg_keys": [
            "fileuploadtype",
            "ruletype",
            "as_fileuploadtypes_url",
            "filetype",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "fileuploadtype",
            "ruletype",
            "as_fileuploadtypes_url",
            "filetype",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_fileuploadtypes_url": {"type": "str"},
            "comment": {"type": "str"},
            "filetype": {
                "choices": ["pdf", "msdoc", "text", "image", "any"],
                "type": "list",
            },
            "fileuploadtype": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isnameregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isregex_fileuploadtypes_url": {
                "choices": ["REGEX", "NOTREGEX"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_jsonblockkeyword_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "isautodeployed",
            "resourceid",
            "jsonblockkeyword",
            "ruletype",
            "keyname_json_blockkeyword",
            "jsonblockkeywordurl",
            "iskeyregex_json_blockkeyword",
            "jsonblockkeywordtype",
        ],
        "bindprimary_key": "jsonblockkeyword",
        "delete_arg_keys": [
            "jsonblockkeyword",
            "ruletype",
            "keyname_json_blockkeyword",
            "jsonblockkeywordurl",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "jsonblockkeyword",
            "ruletype",
            "keyname_json_blockkeyword",
            "jsonblockkeywordurl",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "iskeyregex_json_blockkeyword": {
                "choices": ["REGEX", "NOTREGEX"],
                "type": "str",
            },
            "jsonblockkeyword": {"type": "str"},
            "jsonblockkeywordtype": {"choices": ["literal", "PCRE"], "type": "str"},
            "jsonblockkeywordurl": {"type": "str"},
            "keyname_json_blockkeyword": {"type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_jsoncmdurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "jsoncmdurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "keyname_json_cmd",
            "iskeyregex_json_cmd",
            "as_value_type_json_cmd",
            "as_value_expr_json_cmd",
            "isvalueregex_json_cmd",
        ],
        "bindprimary_key": "jsoncmdurl",
        "delete_arg_keys": [
            "jsoncmdurl",
            "ruletype",
            "keyname_json_cmd",
            "as_value_type_json_cmd",
            "as_value_expr_json_cmd",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "jsoncmdurl",
            "ruletype",
            "keyname_json_cmd",
            "as_value_type_json_cmd",
            "as_value_expr_json_cmd",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_value_expr_json_cmd": {"type": "str"},
            "as_value_type_json_cmd": {
                "choices": ["Keyword", "SpecialString"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "iskeyregex_json_cmd": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_json_cmd": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "jsoncmdurl": {"type": "str"},
            "keyname_json_cmd": {"type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_jsondosurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "jsondosurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "jsonmaxcontainerdepthcheck",
            "jsonmaxcontainerdepth",
            "jsonmaxdocumentlengthcheck",
            "jsonmaxdocumentlength",
            "jsonmaxobjectkeycountcheck",
            "jsonmaxobjectkeycount",
            "jsonmaxobjectkeylengthcheck",
            "jsonmaxobjectkeylength",
            "jsonmaxarraylengthcheck",
            "jsonmaxarraylength",
            "jsonmaxstringlengthcheck",
            "jsonmaxstringlength",
        ],
        "bindprimary_key": "jsondosurl",
        "delete_arg_keys": ["jsondosurl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["jsondosurl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "jsondosurl": {"type": "str"},
            "jsonmaxarraylength": {"type": "int"},
            "jsonmaxarraylengthcheck": {"choices": [True, False], "type": "str"},
            "jsonmaxcontainerdepth": {"type": "int"},
            "jsonmaxcontainerdepthcheck": {"choices": [True, False], "type": "str"},
            "jsonmaxdocumentlength": {"type": "int"},
            "jsonmaxdocumentlengthcheck": {"choices": [True, False], "type": "str"},
            "jsonmaxobjectkeycount": {"type": "int"},
            "jsonmaxobjectkeycountcheck": {"choices": [True, False], "type": "str"},
            "jsonmaxobjectkeylength": {"type": "int"},
            "jsonmaxobjectkeylengthcheck": {"choices": [True, False], "type": "str"},
            "jsonmaxstringlength": {"type": "int"},
            "jsonmaxstringlengthcheck": {"choices": [True, False], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_jsonsqlurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "jsonsqlurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "keyname_json_sql",
            "iskeyregex_json_sql",
            "as_value_type_json_sql",
            "as_value_expr_json_sql",
            "isvalueregex_json_sql",
        ],
        "bindprimary_key": "jsonsqlurl",
        "delete_arg_keys": [
            "jsonsqlurl",
            "ruletype",
            "keyname_json_sql",
            "as_value_type_json_sql",
            "as_value_expr_json_sql",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "jsonsqlurl",
            "ruletype",
            "keyname_json_sql",
            "as_value_type_json_sql",
            "as_value_expr_json_sql",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_value_expr_json_sql": {"type": "str"},
            "as_value_type_json_sql": {
                "choices": ["Keyword", "SpecialString", "Wildchar"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "iskeyregex_json_sql": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_json_sql": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "jsonsqlurl": {"type": "str"},
            "keyname_json_sql": {"type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_jsonxssurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "jsonxssurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "keyname_json_xss",
            "iskeyregex_json_xss",
            "as_value_type_json_xss",
            "as_value_expr_json_xss",
            "isvalueregex_json_xss",
        ],
        "bindprimary_key": "jsonxssurl",
        "delete_arg_keys": [
            "jsonxssurl",
            "ruletype",
            "keyname_json_xss",
            "as_value_type_json_xss",
            "as_value_expr_json_xss",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "jsonxssurl",
            "ruletype",
            "keyname_json_xss",
            "as_value_type_json_xss",
            "as_value_expr_json_xss",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_value_expr_json_xss": {"type": "str"},
            "as_value_type_json_xss": {
                "choices": ["Tag", "Attribute", "Pattern"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "iskeyregex_json_xss": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_json_xss": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "jsonxssurl": {"type": "str"},
            "keyname_json_xss": {"type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_logexpression_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "logexpression",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "as_logexpression",
        ],
        "bindprimary_key": "logexpression",
        "delete_arg_keys": ["logexpression", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["logexpression", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_logexpression": {"type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "logexpression": {"type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_safeobject_binding": {
        "add_payload_keys": [
            "name",
            "safeobject",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "as_expression",
            "maxmatchlength",
            "action",
        ],
        "bindprimary_key": "safeobject",
        "delete_arg_keys": ["safeobject", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["safeobject", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {
                "choices": ["none", "block", "log", "remove", "stats", "xout"],
                "type": "list",
            },
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_expression": {"type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "maxmatchlength": {"type": "int"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "safeobject": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_sqlinjection_binding": {
        "add_payload_keys": [
            "name",
            "sqlinjection",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "formactionurl_sql",
            "isregex_sql",
            "as_scan_location_sql",
            "as_value_type_sql",
            "as_value_expr_sql",
            "isvalueregex_sql",
        ],
        "bindprimary_key": "sqlinjection",
        "delete_arg_keys": [
            "sqlinjection",
            "ruletype",
            "formactionurl_sql",
            "as_scan_location_sql",
            "as_value_type_sql",
            "as_value_expr_sql",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "sqlinjection",
            "ruletype",
            "formactionurl_sql",
            "as_scan_location_sql",
            "as_value_type_sql",
            "as_value_expr_sql",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_scan_location_sql": {
                "choices": ["FORMFIELD", "HEADER", "COOKIE"],
                "type": "str",
            },
            "as_value_expr_sql": {"type": "str"},
            "as_value_type_sql": {
                "choices": ["Keyword", "SpecialString", "Wildchar"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "formactionurl_sql": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_sql": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "isvalueregex_sql": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "sqlinjection": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_starturl_binding": {
        "add_payload_keys": [
            "name",
            "starturl",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
        ],
        "bindprimary_key": "starturl",
        "delete_arg_keys": ["starturl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["starturl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "starturl": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_trustedlearningclients_binding": {
        "add_payload_keys": [
            "name",
            "trustedlearningclients",
            "comment",
            "isautodeployed",
            "resourceid",
            "ruletype",
        ],
        "bindprimary_key": "trustedlearningclients",
        "delete_arg_keys": ["trustedlearningclients", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trustedlearningclients", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "trustedlearningclients": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmlattachmenturl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmlattachmenturl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "xmlmaxattachmentsizecheck",
            "xmlmaxattachmentsize",
            "xmlattachmentcontenttypecheck",
            "xmlattachmentcontenttype",
        ],
        "bindprimary_key": "xmlattachmenturl",
        "delete_arg_keys": ["xmlattachmenturl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmlattachmenturl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmlattachmentcontenttype": {"type": "str"},
            "xmlattachmentcontenttypecheck": {"choices": [True, False], "type": "str"},
            "xmlattachmenturl": {"type": "str"},
            "xmlmaxattachmentsize": {"type": "int"},
            "xmlmaxattachmentsizecheck": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmldosurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmldosurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "xmlmaxelementdepthcheck",
            "xmlmaxelementdepth",
            "xmlmaxelementnamelengthcheck",
            "xmlmaxelementnamelength",
            "xmlmaxelementscheck",
            "xmlmaxelements",
            "xmlmaxelementchildrencheck",
            "xmlmaxelementchildren",
            "xmlmaxnodescheck",
            "xmlmaxnodes",
            "xmlmaxattributescheck",
            "xmlmaxattributes",
            "xmlmaxattributenamelengthcheck",
            "xmlmaxattributenamelength",
            "xmlmaxattributevaluelengthcheck",
            "xmlmaxattributevaluelength",
            "xmlmaxchardatalengthcheck",
            "xmlmaxchardatalength",
            "xmlmaxfilesizecheck",
            "xmlmaxfilesize",
            "xmlminfilesizecheck",
            "xmlminfilesize",
            "xmlblockpi",
            "xmlblockdtd",
            "xmlblockexternalentities",
            "xmlmaxentityexpansionscheck",
            "xmlmaxentityexpansions",
            "xmlmaxentityexpansiondepthcheck",
            "xmlmaxentityexpansiondepth",
            "xmlmaxnamespacescheck",
            "xmlmaxnamespaces",
            "xmlmaxnamespaceurilengthcheck",
            "xmlmaxnamespaceurilength",
            "xmlsoaparraycheck",
            "xmlmaxsoaparraysize",
            "xmlmaxsoaparrayrank",
        ],
        "bindprimary_key": "xmldosurl",
        "delete_arg_keys": ["xmldosurl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmldosurl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmlblockdtd": {"choices": [True, False], "type": "str"},
            "xmlblockexternalentities": {"choices": [True, False], "type": "str"},
            "xmlblockpi": {"choices": [True, False], "type": "str"},
            "xmldosurl": {"type": "str"},
            "xmlmaxattributenamelength": {"type": "int"},
            "xmlmaxattributenamelengthcheck": {"choices": [True, False], "type": "str"},
            "xmlmaxattributes": {"type": "int"},
            "xmlmaxattributescheck": {"choices": [True, False], "type": "str"},
            "xmlmaxattributevaluelength": {"type": "int"},
            "xmlmaxattributevaluelengthcheck": {
                "choices": [True, False],
                "type": "str",
            },
            "xmlmaxchardatalength": {"type": "int"},
            "xmlmaxchardatalengthcheck": {"choices": [True, False], "type": "str"},
            "xmlmaxelementchildren": {"type": "int"},
            "xmlmaxelementchildrencheck": {"choices": [True, False], "type": "str"},
            "xmlmaxelementdepth": {"type": "int"},
            "xmlmaxelementdepthcheck": {"choices": [True, False], "type": "str"},
            "xmlmaxelementnamelength": {"type": "int"},
            "xmlmaxelementnamelengthcheck": {"choices": [True, False], "type": "str"},
            "xmlmaxelements": {"type": "int"},
            "xmlmaxelementscheck": {"choices": [True, False], "type": "str"},
            "xmlmaxentityexpansiondepth": {"type": "int"},
            "xmlmaxentityexpansiondepthcheck": {
                "choices": [True, False],
                "type": "str",
            },
            "xmlmaxentityexpansions": {"type": "int"},
            "xmlmaxentityexpansionscheck": {"choices": [True, False], "type": "str"},
            "xmlmaxfilesize": {"type": "int"},
            "xmlmaxfilesizecheck": {"choices": [True, False], "type": "str"},
            "xmlmaxnamespaces": {"type": "int"},
            "xmlmaxnamespacescheck": {"choices": [True, False], "type": "str"},
            "xmlmaxnamespaceurilength": {"type": "int"},
            "xmlmaxnamespaceurilengthcheck": {"choices": [True, False], "type": "str"},
            "xmlmaxnodes": {"type": "int"},
            "xmlmaxnodescheck": {"choices": [True, False], "type": "str"},
            "xmlmaxsoaparrayrank": {"type": "int"},
            "xmlmaxsoaparraysize": {"type": "int"},
            "xmlminfilesize": {"type": "int"},
            "xmlminfilesizecheck": {"choices": [True, False], "type": "str"},
            "xmlsoaparraycheck": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmlsqlinjection_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmlsqlinjection",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "isregex_xmlsql",
            "as_scan_location_xmlsql",
        ],
        "bindprimary_key": "xmlsqlinjection",
        "delete_arg_keys": ["xmlsqlinjection", "ruletype", "as_scan_location_xmlsql"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmlsqlinjection", "ruletype", "as_scan_location_xmlsql"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_scan_location_xmlsql": {
                "choices": ["ELEMENT", "ATTRIBUTE"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_xmlsql": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmlsqlinjection": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmlvalidationurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmlvalidationurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "xmlrequestschema",
            "xmlresponseschema",
            "xmlwsdl",
            "xmladditionalsoapheaders",
            "xmlendpointcheck",
            "xmlvalidatesoapenvelope",
            "xmlvalidateresponse",
        ],
        "bindprimary_key": "xmlvalidationurl",
        "delete_arg_keys": ["xmlvalidationurl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmlvalidationurl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmladditionalsoapheaders": {"choices": [True, False], "type": "str"},
            "xmlendpointcheck": {"choices": ["ABSOLUTE", "RELATIVE"], "type": "str"},
            "xmlrequestschema": {"type": "str"},
            "xmlresponseschema": {"type": "str"},
            "xmlvalidateresponse": {"choices": [True, False], "type": "str"},
            "xmlvalidatesoapenvelope": {"choices": [True, False], "type": "str"},
            "xmlvalidationurl": {"type": "str"},
            "xmlwsdl": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmlwsiurl_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmlwsiurl",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "xmlwsichecks",
        ],
        "bindprimary_key": "xmlwsiurl",
        "delete_arg_keys": ["xmlwsiurl", "ruletype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmlwsiurl", "ruletype"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmlwsichecks": {"type": "str"},
            "xmlwsiurl": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwprofile_xmlxss_binding": {
        "add_payload_keys": [
            "name",
            "comment",
            "xmlxss",
            "isautodeployed",
            "resourceid",
            "ruletype",
            "isregex_xmlxss",
            "as_scan_location_xmlxss",
        ],
        "bindprimary_key": "xmlxss",
        "delete_arg_keys": ["xmlxss", "ruletype", "as_scan_location_xmlxss"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["xmlxss", "ruletype", "as_scan_location_xmlxss"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alertonly": {"choices": [True, False], "type": "str"},
            "as_scan_location_xmlxss": {
                "choices": ["ELEMENT", "ATTRIBUTE"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "isautodeployed": {
                "choices": ["AUTODEPLOYED", "NOTAUTODEPLOYED"],
                "type": "str",
            },
            "isregex_xmlxss": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "name": {"type": "str"},
            "resourceid": {"type": "str"},
            "ruletype": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "xmlxss": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwurlencodedformcontenttype": {
        "add_payload_keys": ["urlencodedformcontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["urlencodedformcontenttypevalue", "isregex"],
        "primary_key": "urlencodedformcontenttypevalue",
        "readwrite_arguments": {
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "urlencodedformcontenttypevalue": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appfwxmlcontenttype": {
        "add_payload_keys": ["xmlcontenttypevalue", "isregex"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["isregex", "xmlcontenttypevalue"],
        "primary_key": "xmlcontenttypevalue",
        "readwrite_arguments": {
            "isregex": {"choices": ["REGEX", "NOTREGEX"], "type": "str"},
            "xmlcontenttypevalue": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "appqoeaction": {
        "add_payload_keys": [
            "name",
            "priority",
            "respondwith",
            "customfile",
            "altcontentsvcname",
            "altcontentpath",
            "polqdepth",
            "priqdepth",
            "maxconn",
            "delay",
            "dostrigexpression",
            "dosaction",
            "tcpprofile",
            "retryonreset",
            "retryontimeout",
            "numretries",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["customfile", "respondwith"],
        "primary_key": "name",
        "readwrite_arguments": {
            "altcontentpath": {"type": "str"},
            "altcontentsvcname": {"type": "str"},
            "customfile": {"type": "str"},
            "delay": {"type": "int"},
            "dosaction": {"choices": ["SimpleResponse", "HICResponse"], "type": "str"},
            "dostrigexpression": {"type": "str"},
            "maxconn": {"type": "int"},
            "name": {"type": "str"},
            "numretries": {"type": "int"},
            "polqdepth": {"type": "int"},
            "priority": {"choices": ["HIGH", "MEDIUM", "LOW", "LOWEST"], "type": "str"},
            "priqdepth": {"type": "int"},
            "respondwith": {"choices": ["ACS", "NS"], "type": "str"},
            "retryonreset": {"choices": [True, False], "type": "str"},
            "retryontimeout": {"type": "int"},
            "tcpprofile": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "priority",
            "altcontentsvcname",
            "altcontentpath",
            "polqdepth",
            "priqdepth",
            "maxconn",
            "delay",
            "dostrigexpression",
            "dosaction",
            "tcpprofile",
            "retryonreset",
            "retryontimeout",
            "numretries",
        ],
    },
    "appqoeparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "avgwaitingclient": {"type": "int"},
            "dosattackthresh": {"type": "int"},
            "maxaltrespbandwidth": {"type": "int"},
            "sessionlife": {"type": "int"},
        },
        "update_payload_keys": [
            "sessionlife",
            "avgwaitingclient",
            "maxaltrespbandwidth",
            "dosattackthresh",
        ],
    },
    "appqoepolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "arp": {
        "add_payload_keys": [
            "ipaddress",
            "td",
            "mac",
            "ifnum",
            "vxlan",
            "vlan",
            "ownernode",
            "vtep",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["td", "all", "ownernode"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ownernode", "td"],
        "immutable_keys": [
            "vxlan",
            "ownernode",
            "ifnum",
            "td",
            "ipaddress",
            "vlan",
            "mac",
            "vtep",
        ],
        "primary_key": "ipaddress",
        "readwrite_arguments": {
            "all": {"type": "bool"},
            "ifnum": {"type": "str"},
            "ipaddress": {"type": "str"},
            "mac": {"type": "str"},
            "nodeid": {"type": "int"},
            "ownernode": {"type": "int"},
            "td": {"type": "int"},
            "vlan": {"type": "int"},
            "vtep": {"type": "str"},
            "vxlan": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "auditmessageaction": {
        "add_payload_keys": [
            "name",
            "loglevel",
            "stringbuilderexpr",
            "logtonewnslog",
            "bypasssafetycheck",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bypasssafetycheck": {"choices": [True, False], "type": "str"},
            "loglevel": {
                "choices": [
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                ],
                "type": "str",
            },
            "logtonewnslog": {"choices": [True, False], "type": "str"},
            "name": {"type": "str"},
            "stringbuilderexpr": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "loglevel",
            "stringbuilderexpr",
            "logtonewnslog",
            "bypasssafetycheck",
        ],
    },
    "auditnslogaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "serverdomainname",
            "serverport",
            "loglevel",
            "dateformat",
            "logfacility",
            "tcp",
            "acl",
            "timezone",
            "userdefinedauditlog",
            "appflowexport",
            "lsn",
            "alg",
            "subscriberlog",
            "sslinterception",
            "urlfiltering",
            "contentinspectionlog",
            "domainresolveretry",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "acl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "alg": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "appflowexport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "contentinspectionlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dateformat": {
                "choices": ["MMDDYYYY", "DDMMYYYY", "YYYYMMDD"],
                "type": "str",
            },
            "domainresolvenow": {"type": "bool"},
            "domainresolveretry": {"type": "int"},
            "logfacility": {
                "choices": [
                    "LOCAL0",
                    "LOCAL1",
                    "LOCAL2",
                    "LOCAL3",
                    "LOCAL4",
                    "LOCAL5",
                    "LOCAL6",
                    "LOCAL7",
                ],
                "type": "str",
            },
            "loglevel": {
                "choices": [
                    "ALL",
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                    "NONE",
                ],
                "type": "list",
            },
            "lsn": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "serverdomainname": {"type": "str"},
            "serverip": {"type": "str"},
            "serverport": {"type": "int"},
            "sslinterception": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "subscriberlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tcp": {"choices": ["NONE", "ALL"], "type": "str"},
            "timezone": {"choices": ["GMT_TIME", "LOCAL_TIME"], "type": "str"},
            "urlfiltering": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "userdefinedauditlog": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "serverdomainname",
            "domainresolveretry",
            "domainresolvenow",
            "serverport",
            "loglevel",
            "dateformat",
            "logfacility",
            "tcp",
            "acl",
            "timezone",
            "userdefinedauditlog",
            "appflowexport",
            "lsn",
            "alg",
            "subscriberlog",
            "sslinterception",
            "urlfiltering",
            "contentinspectionlog",
        ],
    },
    "auditnslogglobal_auditnslogpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "globalbindtype"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "globalbindtype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "globalbindtype"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "auditnslogpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "auditsyslogaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "serverdomainname",
            "lbvservername",
            "serverport",
            "loglevel",
            "dateformat",
            "logfacility",
            "tcp",
            "acl",
            "timezone",
            "userdefinedauditlog",
            "appflowexport",
            "lsn",
            "alg",
            "subscriberlog",
            "transport",
            "tcpprofilename",
            "maxlogdatasizetohold",
            "dns",
            "contentinspectionlog",
            "netprofile",
            "sslinterception",
            "urlfiltering",
            "domainresolveretry",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["transport"],
        "primary_key": "name",
        "readwrite_arguments": {
            "acl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "alg": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "appflowexport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "contentinspectionlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dateformat": {
                "choices": ["MMDDYYYY", "DDMMYYYY", "YYYYMMDD"],
                "type": "str",
            },
            "dns": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "domainresolvenow": {"type": "bool"},
            "domainresolveretry": {"type": "int"},
            "lbvservername": {"type": "str"},
            "logfacility": {
                "choices": [
                    "LOCAL0",
                    "LOCAL1",
                    "LOCAL2",
                    "LOCAL3",
                    "LOCAL4",
                    "LOCAL5",
                    "LOCAL6",
                    "LOCAL7",
                ],
                "type": "str",
            },
            "loglevel": {
                "choices": [
                    "ALL",
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                    "NONE",
                ],
                "type": "list",
            },
            "lsn": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxlogdatasizetohold": {"type": "int"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "serverdomainname": {"type": "str"},
            "serverip": {"type": "str"},
            "serverport": {"type": "int"},
            "sslinterception": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "subscriberlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tcp": {"choices": ["NONE", "ALL"], "type": "str"},
            "tcpprofilename": {"type": "str"},
            "timezone": {"choices": ["GMT_TIME", "LOCAL_TIME"], "type": "str"},
            "transport": {"choices": ["TCP", "UDP"], "type": "str"},
            "urlfiltering": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "userdefinedauditlog": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "serverdomainname",
            "lbvservername",
            "domainresolveretry",
            "domainresolvenow",
            "serverport",
            "loglevel",
            "dateformat",
            "logfacility",
            "tcp",
            "acl",
            "timezone",
            "userdefinedauditlog",
            "appflowexport",
            "lsn",
            "alg",
            "subscriberlog",
            "tcpprofilename",
            "maxlogdatasizetohold",
            "dns",
            "contentinspectionlog",
            "netprofile",
            "sslinterception",
            "urlfiltering",
        ],
    },
    "auditsyslogglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "globalbindtype"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "globalbindtype"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "globalbindtype"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "auditsyslogpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "authenticationadfsproxyprofile": {
        "add_payload_keys": [
            "name",
            "username",
            "password",
            "serverurl",
            "certkeyname",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "certkeyname": {"type": "str"},
            "name": {"type": "str"},
            "password": {"type": "str"},
            "serverurl": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "username",
            "password",
            "serverurl",
            "certkeyname",
        ],
    },
    "authenticationauthnprofile": {
        "add_payload_keys": [
            "name",
            "authnvsname",
            "authenticationhost",
            "authenticationdomain",
            "authenticationlevel",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "authenticationdomain": {"type": "str"},
            "authenticationhost": {"type": "str"},
            "authenticationlevel": {"type": "int"},
            "authnvsname": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "authnvsname",
            "authenticationhost",
            "authenticationdomain",
            "authenticationlevel",
        ],
    },
    "authenticationazurekeyvault": {
        "add_payload_keys": [
            "name",
            "vaultname",
            "clientid",
            "clientsecret",
            "servicekeyname",
            "signaturealg",
            "tokenendpoint",
            "pushservice",
            "defaultauthenticationgroup",
            "refreshinterval",
            "tenantid",
            "authentication",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "authentication": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientid": {"type": "str"},
            "clientsecret": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "name": {"type": "str"},
            "pushservice": {"type": "str"},
            "refreshinterval": {"type": "int"},
            "servicekeyname": {"type": "str"},
            "signaturealg": {"choices": ["RS256"], "type": "str"},
            "tenantid": {"type": "str"},
            "tokenendpoint": {"type": "str"},
            "vaultname": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "vaultname",
            "clientid",
            "clientsecret",
            "servicekeyname",
            "signaturealg",
            "tokenendpoint",
            "pushservice",
            "defaultauthenticationgroup",
            "refreshinterval",
            "tenantid",
            "authentication",
        ],
    },
    "authenticationcaptchaaction": {
        "add_payload_keys": [
            "name",
            "serverurl",
            "secretkey",
            "sitekey",
            "defaultauthenticationgroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthenticationgroup": {"type": "str"},
            "name": {"type": "str"},
            "secretkey": {"type": "str"},
            "serverurl": {"type": "str"},
            "sitekey": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverurl",
            "secretkey",
            "sitekey",
            "defaultauthenticationgroup",
        ],
    },
    "authenticationcertaction": {
        "add_payload_keys": [
            "name",
            "twofactor",
            "usernamefield",
            "groupnamefield",
            "defaultauthenticationgroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthenticationgroup": {"type": "str"},
            "groupnamefield": {"type": "str"},
            "name": {"type": "str"},
            "twofactor": {"choices": [True, False], "type": "str"},
            "usernamefield": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "twofactor",
            "usernamefield",
            "groupnamefield",
            "defaultauthenticationgroup",
        ],
    },
    "authenticationcertpolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationcitrixauthaction": {
        "add_payload_keys": ["name", "authenticationtype", "authentication"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "authentication": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authenticationtype": {
                "choices": ["CITRIXCONNECTOR", "ATHENA"],
                "type": "str",
            },
            "name": {"type": "str"},
        },
        "update_payload_keys": ["name", "authenticationtype", "authentication"],
    },
    "authenticationdfaaction": {
        "add_payload_keys": [
            "name",
            "clientid",
            "serverurl",
            "passphrase",
            "defaultauthenticationgroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientid": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "name": {"type": "str"},
            "passphrase": {"type": "str"},
            "serverurl": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "clientid",
            "serverurl",
            "passphrase",
            "defaultauthenticationgroup",
        ],
    },
    "authenticationdfapolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "authenticationemailaction": {
        "add_payload_keys": [
            "name",
            "username",
            "password",
            "serverurl",
            "content",
            "defaultauthenticationgroup",
            "timeout",
            "type",
            "emailaddress",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "content": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "emailaddress": {"type": "str"},
            "name": {"type": "str"},
            "password": {"type": "str"},
            "serverurl": {"type": "str"},
            "timeout": {"type": "int"},
            "type": {"choices": ["SMTP", "ATHENA"], "type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "username",
            "password",
            "serverurl",
            "content",
            "defaultauthenticationgroup",
            "timeout",
            "type",
            "emailaddress",
        ],
    },
    "authenticationepaaction": {
        "add_payload_keys": [
            "name",
            "csecexpr",
            "killprocess",
            "deletefiles",
            "defaultepagroup",
            "quarantinegroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "csecexpr": {"type": "str"},
            "defaultepagroup": {"type": "str"},
            "deletefiles": {"type": "str"},
            "killprocess": {"type": "str"},
            "name": {"type": "str"},
            "quarantinegroup": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "csecexpr",
            "killprocess",
            "deletefiles",
            "defaultepagroup",
            "quarantinegroup",
        ],
    },
    "authenticationldapaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "servername",
            "serverport",
            "authtimeout",
            "ldapbase",
            "ldapbinddn",
            "ldapbinddnpassword",
            "ldaploginname",
            "searchfilter",
            "groupattrname",
            "subattributename",
            "sectype",
            "svrtype",
            "ssonameattribute",
            "authentication",
            "requireuser",
            "passwdchange",
            "nestedgroupextraction",
            "maxnestinglevel",
            "followreferrals",
            "maxldapreferrals",
            "referraldnslookup",
            "mssrvrecordlocation",
            "validateservercert",
            "ldaphostname",
            "groupnameidentifier",
            "groupsearchattribute",
            "groupsearchsubattribute",
            "groupsearchfilter",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "sshpublickey",
            "pushservice",
            "email",
            "kbattribute",
            "alternateemailattr",
            "cloudattributes",
            "otpsecret",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "alternateemailattr": {"type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute9": {"type": "str"},
            "attributes": {"type": "str"},
            "authentication": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authtimeout": {"type": "int"},
            "cloudattributes": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "email": {"type": "str"},
            "followreferrals": {"choices": [True, False], "type": "str"},
            "groupattrname": {"type": "str"},
            "groupnameidentifier": {"type": "str"},
            "groupsearchattribute": {"type": "str"},
            "groupsearchfilter": {"type": "str"},
            "groupsearchsubattribute": {"type": "str"},
            "kbattribute": {"type": "str"},
            "ldapbase": {"type": "str"},
            "ldapbinddn": {"type": "str"},
            "ldapbinddnpassword": {"type": "str"},
            "ldaphostname": {"type": "str"},
            "ldaploginname": {"type": "str"},
            "maxldapreferrals": {"type": "int"},
            "maxnestinglevel": {"type": "int"},
            "mssrvrecordlocation": {"type": "str"},
            "name": {"type": "str"},
            "nestedgroupextraction": {"choices": [True, False], "type": "str"},
            "otpsecret": {"type": "str"},
            "passwdchange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "pushservice": {"type": "str"},
            "referraldnslookup": {
                "choices": ["A-REC", "SRV-REC", "MSSRV-REC"],
                "type": "str",
            },
            "requireuser": {"choices": [True, False], "type": "str"},
            "searchfilter": {"type": "str"},
            "sectype": {"choices": ["PLAINTEXT", "TLS", "SSL"], "type": "str"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
            "serverport": {"type": "int"},
            "sshpublickey": {"type": "str"},
            "ssonameattribute": {"type": "str"},
            "subattributename": {"type": "str"},
            "svrtype": {"choices": ["AD", "NDS"], "type": "str"},
            "validateservercert": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "servername",
            "serverport",
            "authtimeout",
            "ldapbase",
            "ldapbinddn",
            "ldapbinddnpassword",
            "ldaploginname",
            "searchfilter",
            "groupattrname",
            "subattributename",
            "sectype",
            "svrtype",
            "ssonameattribute",
            "authentication",
            "requireuser",
            "passwdchange",
            "validateservercert",
            "ldaphostname",
            "nestedgroupextraction",
            "followreferrals",
            "referraldnslookup",
            "mssrvrecordlocation",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "otpsecret",
            "sshpublickey",
            "pushservice",
            "email",
            "kbattribute",
            "alternateemailattr",
            "cloudattributes",
            "maxnestinglevel",
            "groupnameidentifier",
            "groupsearchattribute",
            "groupsearchsubattribute",
            "groupsearchfilter",
            "maxldapreferrals",
        ],
    },
    "authenticationldappolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationlocalpolicy": {
        "add_payload_keys": ["name", "rule"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "rule": {"type": "str"}},
        "update_payload_keys": ["name", "rule"],
    },
    "authenticationloginschema": {
        "add_payload_keys": [
            "name",
            "authenticationschema",
            "userexpression",
            "passwdexpression",
            "usercredentialindex",
            "passwordcredentialindex",
            "authenticationstrength",
            "ssocredentials",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "authenticationschema": {"type": "str"},
            "authenticationstrength": {"type": "int"},
            "name": {"type": "str"},
            "passwdexpression": {"type": "str"},
            "passwordcredentialindex": {"type": "int"},
            "ssocredentials": {"choices": [True, False], "type": "str"},
            "usercredentialindex": {"type": "int"},
            "userexpression": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "authenticationschema",
            "userexpression",
            "passwdexpression",
            "usercredentialindex",
            "passwordcredentialindex",
            "authenticationstrength",
            "ssocredentials",
        ],
    },
    "authenticationloginschemapolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "authenticationnegotiateaction": {
        "add_payload_keys": [
            "name",
            "domain",
            "domainuser",
            "domainuserpasswd",
            "ou",
            "defaultauthenticationgroup",
            "keytab",
            "ntlmpath",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthenticationgroup": {"type": "str"},
            "domain": {"type": "str"},
            "domainuser": {"type": "str"},
            "domainuserpasswd": {"type": "str"},
            "keytab": {"type": "str"},
            "name": {"type": "str"},
            "ntlmpath": {"type": "str"},
            "ou": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "domain",
            "domainuser",
            "domainuserpasswd",
            "ou",
            "defaultauthenticationgroup",
            "keytab",
            "ntlmpath",
        ],
    },
    "authenticationnegotiatepolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationnoauthaction": {
        "add_payload_keys": ["name", "defaultauthenticationgroup"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthenticationgroup": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": ["name", "defaultauthenticationgroup"],
    },
    "authenticationoauthaction": {
        "add_payload_keys": [
            "name",
            "oauthtype",
            "authorizationendpoint",
            "tokenendpoint",
            "idtokendecryptendpoint",
            "clientid",
            "clientsecret",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "tenantid",
            "graphendpoint",
            "refreshinterval",
            "certendpoint",
            "audience",
            "usernamefield",
            "skewtime",
            "issuer",
            "userinfourl",
            "certfilepath",
            "granttype",
            "authentication",
            "introspecturl",
            "allowedalgorithms",
            "pkce",
            "tokenendpointauthmethod",
            "metadataurl",
            "resourceuri",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "allowedalgorithms": {
                "choices": ["HS256", "RS256", "RS512"],
                "type": "list",
            },
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute9": {"type": "str"},
            "attributes": {"type": "str"},
            "audience": {"type": "str"},
            "authentication": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authorizationendpoint": {"type": "str"},
            "certendpoint": {"type": "str"},
            "certfilepath": {"type": "str"},
            "clientid": {"type": "str"},
            "clientsecret": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "granttype": {"choices": ["CODE", "PASSWORD"], "type": "str"},
            "graphendpoint": {"type": "str"},
            "idtokendecryptendpoint": {"type": "str"},
            "introspecturl": {"type": "str"},
            "issuer": {"type": "str"},
            "metadataurl": {"type": "str"},
            "name": {"type": "str"},
            "oauthtype": {"choices": ["GENERIC", "INTUNE", "ATHENA"], "type": "str"},
            "pkce": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "refreshinterval": {"type": "int"},
            "resourceuri": {"type": "str"},
            "skewtime": {"type": "int"},
            "tenantid": {"type": "str"},
            "tokenendpoint": {"type": "str"},
            "tokenendpointauthmethod": {
                "choices": [
                    "client_secret_post",
                    "client_secret_jwt",
                    "private_key_jwt",
                    "client_secret_basic",
                ],
                "type": "str",
            },
            "userinfourl": {"type": "str"},
            "usernamefield": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "oauthtype",
            "authorizationendpoint",
            "tokenendpoint",
            "idtokendecryptendpoint",
            "clientid",
            "clientsecret",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "tenantid",
            "graphendpoint",
            "refreshinterval",
            "certendpoint",
            "audience",
            "usernamefield",
            "skewtime",
            "issuer",
            "userinfourl",
            "certfilepath",
            "granttype",
            "authentication",
            "introspecturl",
            "allowedalgorithms",
            "pkce",
            "tokenendpointauthmethod",
            "metadataurl",
            "resourceuri",
        ],
    },
    "authenticationoauthidppolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "authenticationoauthidpprofile": {
        "add_payload_keys": [
            "name",
            "clientid",
            "clientsecret",
            "redirecturl",
            "issuer",
            "configservice",
            "audience",
            "skewtime",
            "defaultauthenticationgroup",
            "relyingpartymetadataurl",
            "refreshinterval",
            "encrypttoken",
            "signatureservice",
            "signaturealg",
            "attributes",
            "sendpassword",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "attributes": {"type": "str"},
            "audience": {"type": "str"},
            "clientid": {"type": "str"},
            "clientsecret": {"type": "str"},
            "configservice": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "encrypttoken": {"choices": [True, False], "type": "str"},
            "issuer": {"type": "str"},
            "name": {"type": "str"},
            "redirecturl": {"type": "str"},
            "refreshinterval": {"type": "int"},
            "relyingpartymetadataurl": {"type": "str"},
            "sendpassword": {"choices": [True, False], "type": "str"},
            "signaturealg": {"choices": ["RS256", "RS512"], "type": "str"},
            "signatureservice": {"type": "str"},
            "skewtime": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "clientid",
            "clientsecret",
            "redirecturl",
            "issuer",
            "configservice",
            "audience",
            "skewtime",
            "defaultauthenticationgroup",
            "relyingpartymetadataurl",
            "refreshinterval",
            "encrypttoken",
            "signatureservice",
            "signaturealg",
            "attributes",
            "sendpassword",
        ],
    },
    "authenticationpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": ["authenticationpolicylabel_authenticationpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "authenticationpolicylabel_authenticationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "authenticationpolicylabel": {
        "add_payload_keys": ["labelname", "type", "comment", "loginschema"],
        "bindings": ["authenticationpolicylabel_authenticationpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["comment", "labelname", "type", "loginschema"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "authenticationpolicylabel_authenticationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "loginschema": {"type": "str"},
            "newname": {"type": "str"},
            "type": {"choices": ["AAATM_REQ", "RBA_REQ"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "authenticationpolicylabel_authenticationpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "nextfactor",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "labelname": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "authenticationpushservice": {
        "add_payload_keys": [
            "name",
            "clientid",
            "clientsecret",
            "customerid",
            "refreshinterval",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientid": {"type": "str"},
            "clientsecret": {"type": "str"},
            "customerid": {"type": "str"},
            "name": {"type": "str"},
            "refreshinterval": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "clientid",
            "clientsecret",
            "customerid",
            "refreshinterval",
        ],
    },
    "authenticationradiusaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "servername",
            "serverport",
            "authtimeout",
            "radkey",
            "radnasip",
            "radnasid",
            "radvendorid",
            "radattributetype",
            "radgroupsprefix",
            "radgroupseparator",
            "passencoding",
            "ipvendorid",
            "ipattributetype",
            "accounting",
            "pwdvendorid",
            "pwdattributetype",
            "defaultauthenticationgroup",
            "callingstationid",
            "authservretry",
            "authentication",
            "tunnelendpointclientip",
            "transport",
            "targetlbvserver",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "accounting": {"choices": [True, False], "type": "str"},
            "authentication": {"choices": [True, False], "type": "str"},
            "authservretry": {"type": "int"},
            "authtimeout": {"type": "int"},
            "callingstationid": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "ipattributetype": {"type": "int"},
            "ipvendorid": {"type": "int"},
            "name": {"type": "str"},
            "passencoding": {
                "choices": ["pap", "chap", "mschapv1", "mschapv2"],
                "type": "str",
            },
            "pwdattributetype": {"type": "int"},
            "pwdvendorid": {"type": "int"},
            "radattributetype": {"type": "int"},
            "radgroupseparator": {"type": "str"},
            "radgroupsprefix": {"type": "str"},
            "radkey": {"type": "str"},
            "radnasid": {"type": "str"},
            "radnasip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "radvendorid": {"type": "int"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
            "serverport": {"type": "int"},
            "targetlbvserver": {"type": "str"},
            "transport": {"choices": ["UDP", "TCP", "TLS"], "type": "str"},
            "tunnelendpointclientip": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "servername",
            "serverport",
            "authtimeout",
            "radkey",
            "radnasip",
            "radnasid",
            "radvendorid",
            "radattributetype",
            "radgroupsprefix",
            "radgroupseparator",
            "passencoding",
            "ipvendorid",
            "ipattributetype",
            "accounting",
            "pwdvendorid",
            "defaultauthenticationgroup",
            "callingstationid",
            "authservretry",
            "authentication",
            "tunnelendpointclientip",
            "transport",
            "targetlbvserver",
            "pwdattributetype",
        ],
    },
    "authenticationradiuspolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationsamlaction": {
        "add_payload_keys": [
            "name",
            "metadataurl",
            "samlidpcertname",
            "samlsigningcertname",
            "samlredirecturl",
            "samlacsindex",
            "samluserfield",
            "samlrejectunsignedassertion",
            "samlissuername",
            "samltwofactor",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "relaystaterule",
            "signaturealg",
            "digestmethod",
            "requestedauthncontext",
            "authnctxclassref",
            "customauthnctxclassref",
            "samlbinding",
            "attributeconsumingserviceindex",
            "sendthumbprint",
            "enforceusername",
            "logouturl",
            "artifactresolutionserviceurl",
            "skewtime",
            "logoutbinding",
            "forceauthn",
            "groupnamefield",
            "audience",
            "metadatarefreshinterval",
            "storesamlresponse",
            "statechecks",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "artifactresolutionserviceurl": {"type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute9": {"type": "str"},
            "attributeconsumingserviceindex": {"type": "int"},
            "attributes": {"type": "str"},
            "audience": {"type": "str"},
            "authnctxclassref": {
                "choices": [
                    "InternetProtocol",
                    "InternetProtocolPassword",
                    "Kerberos",
                    "MobileOneFactorUnregistered",
                    "MobileTwoFactorUnregistered",
                    "MobileOneFactorContract",
                    "MobileTwoFactorContract",
                    "Password",
                    "PasswordProtectedTransport",
                    "PreviousSession",
                    "X509",
                    "PGP",
                    "SPKI",
                    "XMLDSig",
                    "Smartcard",
                    "SmartcardPKI",
                    "SoftwarePKI",
                    "Telephony",
                    "NomadTelephony",
                    "PersonalTelephony",
                    "AuthenticatedTelephony",
                    "SecureRemotePassword",
                    "TLSClient",
                    "TimeSyncToken",
                    "Unspecified",
                    "Windows",
                ],
                "type": "list",
            },
            "customauthnctxclassref": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "digestmethod": {"choices": ["SHA1", "SHA256"], "type": "str"},
            "enforceusername": {"choices": [True, False], "type": "str"},
            "forceauthn": {"choices": [True, False], "type": "str"},
            "groupnamefield": {"type": "str"},
            "logoutbinding": {"choices": ["REDIRECT", "POST"], "type": "str"},
            "logouturl": {"type": "str"},
            "metadatarefreshinterval": {"type": "int"},
            "metadataurl": {"type": "str"},
            "name": {"type": "str"},
            "relaystaterule": {"type": "str"},
            "requestedauthncontext": {
                "choices": ["exact", "minimum", "maximum", "better"],
                "type": "str",
            },
            "samlacsindex": {"type": "int"},
            "samlbinding": {"choices": ["REDIRECT", "POST", "ARTIFACT"], "type": "str"},
            "samlidpcertname": {"type": "str"},
            "samlissuername": {"type": "str"},
            "samlredirecturl": {"type": "str"},
            "samlrejectunsignedassertion": {
                "choices": [True, False, "STRICT"],
                "type": "str",
            },
            "samlsigningcertname": {"type": "str"},
            "samltwofactor": {"choices": [True, False], "type": "str"},
            "samluserfield": {"type": "str"},
            "sendthumbprint": {"choices": [True, False], "type": "str"},
            "signaturealg": {"choices": ["RSA-SHA1", "RSA-SHA256"], "type": "str"},
            "skewtime": {"type": "int"},
            "statechecks": {"type": "str"},
            "storesamlresponse": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "metadataurl",
            "samlidpcertname",
            "samlsigningcertname",
            "samlredirecturl",
            "samlacsindex",
            "samluserfield",
            "samlrejectunsignedassertion",
            "samlissuername",
            "samltwofactor",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
            "relaystaterule",
            "signaturealg",
            "digestmethod",
            "requestedauthncontext",
            "authnctxclassref",
            "customauthnctxclassref",
            "samlbinding",
            "attributeconsumingserviceindex",
            "sendthumbprint",
            "enforceusername",
            "logouturl",
            "artifactresolutionserviceurl",
            "skewtime",
            "logoutbinding",
            "forceauthn",
            "groupnamefield",
            "audience",
            "metadatarefreshinterval",
            "storesamlresponse",
            "statechecks",
        ],
    },
    "authenticationsamlidppolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "authenticationsamlidpprofile": {
        "add_payload_keys": [
            "name",
            "samlspcertname",
            "samlidpcertname",
            "assertionconsumerserviceurl",
            "sendpassword",
            "samlissuername",
            "rejectunsignedrequests",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "encryptionalgorithm",
            "samlbinding",
            "skewtime",
            "serviceproviderid",
            "signassertion",
            "keytransportalg",
            "splogouturl",
            "logoutbinding",
            "defaultauthenticationgroup",
            "metadataurl",
            "metadatarefreshinterval",
            "signatureservice",
            "samlsigningcertversion",
            "samlspcertversion",
            "acsurlrule",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "acsurlrule": {"type": "str"},
            "assertionconsumerserviceurl": {"type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute10expr": {"type": "str"},
            "attribute10format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute10friendlyname": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute11expr": {"type": "str"},
            "attribute11format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute11friendlyname": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute12expr": {"type": "str"},
            "attribute12format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute12friendlyname": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute13expr": {"type": "str"},
            "attribute13format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute13friendlyname": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute14expr": {"type": "str"},
            "attribute14format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute14friendlyname": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute15expr": {"type": "str"},
            "attribute15format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute15friendlyname": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute16expr": {"type": "str"},
            "attribute16format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute16friendlyname": {"type": "str"},
            "attribute1expr": {"type": "str"},
            "attribute1format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute1friendlyname": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute2expr": {"type": "str"},
            "attribute2format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute2friendlyname": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute3expr": {"type": "str"},
            "attribute3format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute3friendlyname": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute4expr": {"type": "str"},
            "attribute4format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute4friendlyname": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute5expr": {"type": "str"},
            "attribute5format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute5friendlyname": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute6expr": {"type": "str"},
            "attribute6format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute6friendlyname": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute7expr": {"type": "str"},
            "attribute7format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute7friendlyname": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute8expr": {"type": "str"},
            "attribute8format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute8friendlyname": {"type": "str"},
            "attribute9": {"type": "str"},
            "attribute9expr": {"type": "str"},
            "attribute9format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute9friendlyname": {"type": "str"},
            "audience": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "digestmethod": {"choices": ["SHA1", "SHA256"], "type": "str"},
            "encryptassertion": {"choices": [True, False], "type": "str"},
            "encryptionalgorithm": {
                "choices": ["DES3", "AES128", "AES192", "AES256"],
                "type": "str",
            },
            "keytransportalg": {"choices": ["RSA-V1_5", "RSA_OAEP"], "type": "str"},
            "logoutbinding": {"choices": ["REDIRECT", "POST"], "type": "str"},
            "metadatarefreshinterval": {"type": "int"},
            "metadataurl": {"type": "str"},
            "name": {"type": "str"},
            "nameidexpr": {"type": "str"},
            "nameidformat": {
                "choices": [
                    "Unspecified",
                    "emailAddress",
                    "X509SubjectName",
                    "WindowsDomainQualifiedName",
                    "kerberos",
                    "entity",
                    "persistent",
                    "transient",
                ],
                "type": "str",
            },
            "rejectunsignedrequests": {"choices": [True, False], "type": "str"},
            "samlbinding": {"choices": ["REDIRECT", "POST", "ARTIFACT"], "type": "str"},
            "samlidpcertname": {"type": "str"},
            "samlissuername": {"type": "str"},
            "samlsigningcertversion": {"type": "str"},
            "samlspcertname": {"type": "str"},
            "samlspcertversion": {"type": "str"},
            "sendpassword": {"choices": [True, False], "type": "str"},
            "serviceproviderid": {"type": "str"},
            "signassertion": {
                "choices": ["NONE", "ASSERTION", "RESPONSE", "BOTH"],
                "type": "str",
            },
            "signaturealg": {"choices": ["RSA-SHA1", "RSA-SHA256"], "type": "str"},
            "signatureservice": {"type": "str"},
            "skewtime": {"type": "int"},
            "splogouturl": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "samlspcertname",
            "samlidpcertname",
            "assertionconsumerserviceurl",
            "sendpassword",
            "samlissuername",
            "rejectunsignedrequests",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "encryptionalgorithm",
            "samlbinding",
            "skewtime",
            "serviceproviderid",
            "signassertion",
            "keytransportalg",
            "splogouturl",
            "logoutbinding",
            "defaultauthenticationgroup",
            "metadataurl",
            "metadatarefreshinterval",
            "signatureservice",
            "samlsigningcertversion",
            "samlspcertversion",
            "acsurlrule",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
    },
    "authenticationsamlpolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationsmartaccesspolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment"],
    },
    "authenticationsmartaccessprofile": {
        "add_payload_keys": ["name", "tags", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "tags": {"type": "str"},
        },
        "update_payload_keys": ["name", "tags", "comment"],
    },
    "authenticationstorefrontauthaction": {
        "add_payload_keys": [
            "name",
            "serverurl",
            "domain",
            "defaultauthenticationgroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthenticationgroup": {"type": "str"},
            "domain": {"type": "str"},
            "name": {"type": "str"},
            "serverurl": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverurl",
            "domain",
            "defaultauthenticationgroup",
        ],
    },
    "authenticationtacacsaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "serverport",
            "authtimeout",
            "tacacssecret",
            "authorization",
            "accounting",
            "auditfailedcmds",
            "groupattrname",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "accounting": {"choices": [True, False], "type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute9": {"type": "str"},
            "attributes": {"type": "str"},
            "auditfailedcmds": {"choices": [True, False], "type": "str"},
            "authorization": {"choices": [True, False], "type": "str"},
            "authtimeout": {"type": "int"},
            "defaultauthenticationgroup": {"type": "str"},
            "groupattrname": {"type": "str"},
            "name": {"type": "str"},
            "serverip": {"type": "str"},
            "serverport": {"type": "int"},
            "tacacssecret": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "serverport",
            "authtimeout",
            "tacacssecret",
            "authorization",
            "accounting",
            "auditfailedcmds",
            "groupattrname",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "attributes",
        ],
    },
    "authenticationtacacspolicy": {
        "add_payload_keys": ["name", "rule", "reqaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "reqaction"],
    },
    "authenticationvserver": {
        "add_payload_keys": [
            "name",
            "servicetype",
            "ipv46",
            "port",
            "authentication",
            "authenticationdomain",
            "comment",
            "td",
            "appflowlog",
            "maxloginattempts",
            "nodefaultbindings",
            "certkeynames",
            "samesite",
            "range",
            "failedlogintimeout",
        ],
        "bindings": [
            "authenticationvserver_authenticationsmartaccesspolicy_binding",
            "authenticationvserver_authenticationsamlidppolicy_binding",
            "authenticationvserver_authenticationcertpolicy_binding",
            "authenticationvserver_authenticationtacacspolicy_binding",
            "authenticationvserver_rewritepolicy_binding",
            "authenticationvserver_cspolicy_binding",
            "authenticationvserver_auditnslogpolicy_binding",
            "authenticationvserver_authenticationldappolicy_binding",
            "authenticationvserver_authenticationwebauthpolicy_binding",
            "authenticationvserver_authenticationoauthidppolicy_binding",
            "authenticationvserver_authenticationnegotiatepolicy_binding",
            "authenticationvserver_authenticationradiuspolicy_binding",
            "authenticationvserver_authenticationsamlpolicy_binding",
            "authenticationvserver_authenticationlocalpolicy_binding",
            "authenticationvserver_cachepolicy_binding",
            "authenticationvserver_authenticationpolicy_binding",
            "authenticationvserver_vpnportaltheme_binding",
            "authenticationvserver_auditsyslogpolicy_binding",
            "authenticationvserver_responderpolicy_binding",
            "authenticationvserver_authenticationloginschemapolicy_binding",
            "authenticationvserver_tmsessionpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": ["servicetype", "td", "range", "nodefaultbindings", "port"],
        "primary_key": "name",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authentication": {"choices": [True, False], "type": "str"},
            "authenticationdomain": {"type": "str"},
            "authenticationvserver_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationcertpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationldappolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationlocalpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationloginschemapolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationnegotiatepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationoauthidppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationradiuspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationsamlidppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationsamlpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationsmartaccesspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationtacacspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_authenticationwebauthpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_tmsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "authenticationvserver_vpnportaltheme_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "certkeynames": {"type": "str"},
            "comment": {"type": "str"},
            "failedlogintimeout": {"type": "int"},
            "ipv46": {"type": "str"},
            "maxloginattempts": {"type": "int"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "port": {"type": "int"},
            "range": {"type": "int"},
            "samesite": {"choices": ["None", "LAX", "STRICT"], "type": "str"},
            "servicetype": {"choices": ["SSL"], "type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "ipv46",
            "authentication",
            "authenticationdomain",
            "comment",
            "appflowlog",
            "maxloginattempts",
            "failedlogintimeout",
            "certkeynames",
            "samesite",
        ],
    },
    "authenticationvserver_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationcertpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationldappolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationlocalpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationloginschemapolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationnegotiatepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationoauthidppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationradiuspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationsamlidppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationsamlpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationsmartaccesspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationtacacspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_authenticationwebauthpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_cachepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_cspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_responderpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_rewritepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_tmsessionpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "nextfactor",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "authenticationvserver_vpnportaltheme_binding": {
        "add_payload_keys": ["name", "portaltheme"],
        "bindprimary_key": "portaltheme",
        "delete_arg_keys": ["portaltheme"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["portaltheme"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "portaltheme": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "authenticationwebauthaction": {
        "add_payload_keys": [
            "name",
            "serverip",
            "serverport",
            "fullreqexpr",
            "scheme",
            "successrule",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute9": {"type": "str"},
            "defaultauthenticationgroup": {"type": "str"},
            "fullreqexpr": {"type": "str"},
            "name": {"type": "str"},
            "scheme": {"choices": ["http", "https"], "type": "str"},
            "serverip": {"type": "str"},
            "serverport": {"type": "int"},
            "successrule": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "serverip",
            "serverport",
            "fullreqexpr",
            "scheme",
            "successrule",
            "defaultauthenticationgroup",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
        ],
    },
    "authenticationwebauthpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "authorizationpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": ["authorizationpolicylabel_authorizationpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "authorizationpolicylabel_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "authorizationpolicylabel": {
        "add_payload_keys": ["labelname"],
        "bindings": ["authorizationpolicylabel_authorizationpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "authorizationpolicylabel_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "authorizationpolicylabel_authorizationpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "autoscaleaction": {
        "add_payload_keys": [
            "name",
            "type",
            "profilename",
            "parameters",
            "vmdestroygraceperiod",
            "quiettime",
            "vserver",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "parameters": {"type": "str"},
            "profilename": {"type": "str"},
            "quiettime": {"type": "int"},
            "type": {"choices": ["SCALE_UP", "SCALE_DOWN"], "type": "str"},
            "vmdestroygraceperiod": {"type": "int"},
            "vserver": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "profilename",
            "parameters",
            "vmdestroygraceperiod",
            "quiettime",
            "vserver",
        ],
    },
    "autoscalepolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment", "logaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment", "logaction"],
    },
    "autoscaleprofile": {
        "add_payload_keys": ["name", "type", "url", "apikey", "sharedsecret"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "apikey": {"type": "str"},
            "name": {"type": "str"},
            "sharedsecret": {"type": "str"},
            "type": {"choices": ["CLOUDSTACK"], "type": "str"},
            "url": {"type": "str"},
        },
        "update_payload_keys": ["name", "url", "apikey", "sharedsecret"],
    },
    "azureapplication": {
        "add_payload_keys": [
            "name",
            "clientid",
            "clientsecret",
            "tenantid",
            "vaultresource",
            "tokenendpoint",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "name",
            "tenantid",
            "vaultresource",
            "tokenendpoint",
            "clientsecret",
            "clientid",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientid": {"type": "str"},
            "clientsecret": {"type": "str"},
            "name": {"type": "str"},
            "tenantid": {"type": "str"},
            "tokenendpoint": {"type": "str"},
            "vaultresource": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "azurekeyvault": {
        "add_payload_keys": ["name", "azurevaultname", "azureapplication"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["azurevaultname", "azureapplication", "name"],
        "primary_key": "name",
        "readwrite_arguments": {
            "azureapplication": {"type": "str"},
            "azurevaultname": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botglobal_botpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {"choices": ["REQ_OVERRIDE", "REQ_DEFAULT"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "botpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "profilename",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": ["botpolicylabel_botpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "botpolicylabel_botpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "profilename": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "profilename",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "botpolicylabel": {
        "add_payload_keys": ["labelname", "comment"],
        "bindings": ["botpolicylabel_botpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "botpolicylabel_botpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botpolicylabel_botpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "botprofile": {
        "add_payload_keys": [
            "name",
            "signature",
            "errorurl",
            "trapurl",
            "comment",
            "bot_enable_white_list",
            "bot_enable_black_list",
            "bot_enable_rate_limit",
            "devicefingerprint",
            "devicefingerprintaction",
            "bot_enable_ip_reputation",
            "trap",
            "trapaction",
            "signaturenouseragentheaderaction",
            "signaturemultipleuseragentheaderaction",
            "bot_enable_tps",
            "devicefingerprintmobile",
            "headlessbrowserdetection",
            "clientipexpression",
            "kmjavascriptname",
            "kmdetection",
            "kmeventspostbodylimit",
            "verboseloglevel",
            "spoofedreqaction",
            "dfprequestlimit",
            "sessioncookiename",
            "sessiontimeout",
        ],
        "bindings": [
            "botprofile_blacklist_binding",
            "botprofile_ipreputation_binding",
            "botprofile_kmdetectionexpr_binding",
            "botprofile_captcha_binding",
            "botprofile_trapinsertionurl_binding",
            "botprofile_logexpression_binding",
            "botprofile_whitelist_binding",
            "botprofile_ratelimit_binding",
            "botprofile_tps_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_enable_black_list": {"choices": [True, False], "type": "str"},
            "bot_enable_ip_reputation": {"choices": [True, False], "type": "str"},
            "bot_enable_rate_limit": {"choices": [True, False], "type": "str"},
            "bot_enable_tps": {"choices": [True, False], "type": "str"},
            "bot_enable_white_list": {"choices": [True, False], "type": "str"},
            "botprofile_blacklist_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_captcha_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_ipreputation_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_kmdetectionexpr_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_logexpression_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_ratelimit_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_tps_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_trapinsertionurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "botprofile_whitelist_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clientipexpression": {"type": "str"},
            "comment": {"type": "str"},
            "devicefingerprint": {"choices": [True, False], "type": "str"},
            "devicefingerprintaction": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET", "MITIGATION"],
                "type": "list",
            },
            "devicefingerprintmobile": {
                "choices": ["NONE", "Android", "iOS"],
                "type": "list",
            },
            "errorurl": {"type": "str"},
            "headlessbrowserdetection": {"choices": [True, False], "type": "str"},
            "kmdetection": {"choices": [True, False], "type": "str"},
            "kmeventspostbodylimit": {"type": "int"},
            "kmjavascriptname": {"type": "str"},
            "name": {"type": "str"},
            "signature": {"type": "str"},
            "signaturemultipleuseragentheaderaction": {
                "choices": ["CHECKLAST", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "signaturenouseragentheaderaction": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "spoofedreqaction": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "trap": {"choices": [True, False], "type": "str"},
            "trapaction": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "trapurl": {"type": "str"},
            "verboseloglevel": {"choices": ["NONE", "HTTP_FULL_HEADER"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "signature",
            "errorurl",
            "trapurl",
            "comment",
            "bot_enable_white_list",
            "bot_enable_black_list",
            "bot_enable_rate_limit",
            "devicefingerprint",
            "devicefingerprintaction",
            "bot_enable_ip_reputation",
            "trap",
            "signaturenouseragentheaderaction",
            "signaturemultipleuseragentheaderaction",
            "trapaction",
            "bot_enable_tps",
            "devicefingerprintmobile",
            "headlessbrowserdetection",
            "clientipexpression",
            "kmjavascriptname",
            "kmdetection",
            "kmeventspostbodylimit",
            "verboseloglevel",
            "spoofedreqaction",
            "dfprequestlimit",
            "sessioncookiename",
            "sessiontimeout",
        ],
    },
    "botprofile_blacklist_binding": {
        "add_payload_keys": [
            "name",
            "bot_blacklist",
            "logmessage",
            "bot_bind_comment",
            "bot_blacklist_type",
            "bot_blacklist_value",
            "bot_blacklist_action",
            "bot_blacklist_enabled",
        ],
        "bindprimary_key": "bot_blacklist",
        "delete_arg_keys": ["bot_blacklist", "bot_blacklist_value"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bot_blacklist", "bot_blacklist_value"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_blacklist": {"type": "bool"},
            "bot_blacklist_action": {
                "choices": ["NONE", "LOG", "DROP", "RESET", "REDIRECT"],
                "type": "list",
            },
            "bot_blacklist_enabled": {"choices": [True, False], "type": "str"},
            "bot_blacklist_type": {
                "choices": ["IPv4", "SUBNET", "IPv6", "IPv6_SUBNET", "EXPRESSION"],
                "type": "str",
            },
            "bot_blacklist_value": {"type": "str"},
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botprofile_captcha_binding": {
        "add_payload_keys": [
            "name",
            "captcharesource",
            "logmessage",
            "bot_bind_comment",
            "bot_captcha_url",
            "waittime",
            "graceperiod",
            "muteperiod",
            "requestsizelimit",
            "retryattempts",
            "bot_captcha_action",
            "bot_captcha_enabled",
        ],
        "bindprimary_key": "captcharesource",
        "delete_arg_keys": ["captcharesource", "bot_captcha_url"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["captcharesource", "bot_captcha_url"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_captcha_action": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "bot_captcha_enabled": {"choices": [True, False], "type": "str"},
            "bot_captcha_url": {"type": "str"},
            "captcharesource": {"type": "bool"},
            "graceperiod": {"type": "int"},
            "logmessage": {"type": "str"},
            "muteperiod": {"type": "int"},
            "name": {"type": "str"},
            "requestsizelimit": {"type": "int"},
            "retryattempts": {"type": "int"},
            "waittime": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "botprofile_ipreputation_binding": {
        "add_payload_keys": [
            "name",
            "bot_ipreputation",
            "logmessage",
            "bot_bind_comment",
            "category",
            "bot_iprep_enabled",
            "bot_iprep_action",
        ],
        "bindprimary_key": "bot_ipreputation",
        "delete_arg_keys": ["bot_ipreputation", "category"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bot_ipreputation", "category"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_iprep_action": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET", "MITIGATION"],
                "type": "list",
            },
            "bot_iprep_enabled": {"choices": [True, False], "type": "str"},
            "bot_ipreputation": {"type": "bool"},
            "category": {
                "choices": [
                    "IP",
                    "BOTNETS",
                    "SPAM_SOURCES",
                    "SCANNERS",
                    "DOS",
                    "REPUTATION",
                    "PHISHING",
                    "PROXY",
                    "NETWORK",
                    "MOBILE_THREATS",
                    "WINDOWS_EXPLOITS",
                    "WEB_ATTACKS",
                    "TOR_PROXY",
                    "CLOUD",
                    "CLOUD_AWS",
                    "CLOUD_GCP",
                    "CLOUD_AZURE",
                    "CLOUD_ORACLE",
                    "CLOUD_IBM",
                    "CLOUD_SALESFORCE",
                ],
                "type": "str",
            },
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botprofile_kmdetectionexpr_binding": {
        "add_payload_keys": [
            "name",
            "kmdetectionexpr",
            "logmessage",
            "bot_bind_comment",
            "bot_km_expression_name",
            "bot_km_expression_value",
            "bot_km_detection_enabled",
        ],
        "bindprimary_key": "kmdetectionexpr",
        "delete_arg_keys": ["kmdetectionexpr", "bot_km_expression_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["kmdetectionexpr", "bot_km_expression_name"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_km_detection_enabled": {"choices": [True, False], "type": "str"},
            "bot_km_expression_name": {"type": "str"},
            "bot_km_expression_value": {"type": "str"},
            "kmdetectionexpr": {"type": "bool"},
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botprofile_logexpression_binding": {
        "add_payload_keys": [
            "name",
            "logexpression",
            "logmessage",
            "bot_bind_comment",
            "bot_log_expression_name",
            "bot_log_expression_value",
            "bot_log_expression_enabled",
        ],
        "bindprimary_key": "logexpression",
        "delete_arg_keys": ["logexpression", "bot_log_expression_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["logexpression", "bot_log_expression_name"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_log_expression_enabled": {"choices": [True, False], "type": "str"},
            "bot_log_expression_name": {"type": "str"},
            "bot_log_expression_value": {"type": "str"},
            "logexpression": {"type": "bool"},
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "botprofile_ratelimit_binding": {
        "add_payload_keys": [
            "name",
            "bot_ratelimit",
            "logmessage",
            "bot_bind_comment",
            "bot_rate_limit_type",
            "bot_rate_limit_url",
            "cookiename",
            "countrycode",
            "rate",
            "timeslice",
            "bot_rate_limit_action",
            "bot_rate_limit_enabled",
        ],
        "bindprimary_key": "bot_ratelimit",
        "delete_arg_keys": [
            "bot_ratelimit",
            "bot_rate_limit_type",
            "bot_rate_limit_url",
            "cookiename",
            "countrycode",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [
            "bot_ratelimit",
            "bot_rate_limit_type",
            "bot_rate_limit_url",
            "cookiename",
            "countrycode",
        ],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_rate_limit_action": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET"],
                "type": "list",
            },
            "bot_rate_limit_enabled": {"choices": [True, False], "type": "str"},
            "bot_rate_limit_type": {
                "choices": ["SESSION", "SOURCE_IP", "URL", "GEOLOCATION"],
                "type": "str",
            },
            "bot_rate_limit_url": {"type": "str"},
            "bot_ratelimit": {"type": "bool"},
            "cookiename": {"type": "str"},
            "countrycode": {
                "choices": [
                    "AF",
                    "AX",
                    "AL",
                    "DZ",
                    "AS",
                    "AD",
                    "AO",
                    "AI",
                    "AQ",
                    "AG",
                    "AR",
                    "AM",
                    "AW",
                    "AU",
                    "AT",
                    "AZ",
                    "BS",
                    "BH",
                    "BD",
                    "BB",
                    "BY",
                    "BE",
                    "BZ",
                    "BJ",
                    "BM",
                    "BT",
                    "BO",
                    "BQ",
                    "BA",
                    "BW",
                    "BR",
                    "IO",
                    "BN",
                    "BG",
                    "BF",
                    "BI",
                    "KH",
                    "CM",
                    "CA",
                    "CV",
                    "KY",
                    "CF",
                    "TD",
                    "CL",
                    "CN",
                    "CX",
                    "CC",
                    "CO",
                    "KM",
                    "CG",
                    "CD",
                    "CK",
                    "CR",
                    "CI",
                    "HR",
                    "CU",
                    "CW",
                    "CY",
                    "CZ",
                    "DK",
                    "DJ",
                    "DM",
                    "DO",
                    "EC",
                    "EG",
                    "SV",
                    "GQ",
                    "ER",
                    "EE",
                    "ET",
                    "FK",
                    "FO",
                    "FJ",
                    "FI",
                    "FR",
                    "GF",
                    "PF",
                    "TF",
                    "GA",
                    "GM",
                    "GE",
                    "DE",
                    "GH",
                    "GI",
                    "GR",
                    "GL",
                    "GD",
                    "GP",
                    "GU",
                    "GT",
                    "GG",
                    "GN",
                    "GW",
                    "GY",
                    "HT",
                    "HM",
                    "VA",
                    "HN",
                    "HK",
                    "HU",
                    "IS",
                    "IN",
                    "ID",
                    "IR",
                    "IQ",
                    "IE",
                    "IM",
                    "IL",
                    "IT",
                    "JM",
                    "JP",
                    "JE",
                    "JO",
                    "KZ",
                    "KE",
                    "KI",
                    "XK",
                    "KW",
                    "KG",
                    "LA",
                    "LV",
                    "LB",
                    "LS",
                    "LR",
                    "LY",
                    "LI",
                    "LT",
                    "LU",
                    "MO",
                    "MK",
                    "MG",
                    "MW",
                    "MY",
                    "MV",
                    "ML",
                    "MT",
                    "MH",
                    "MQ",
                    "MR",
                    "MU",
                    "YT",
                    "MX",
                    "FM",
                    "MD",
                    "MC",
                    "MN",
                    "ME",
                    "MS",
                    "MA",
                    "MZ",
                    "MM",
                    "NA",
                    "NR",
                    "NP",
                    "NL",
                    "NC",
                    "NZ",
                    "NI",
                    "NE",
                    "NG",
                    "NU",
                    "NF",
                    "KP",
                    "MP",
                    False,
                    "OM",
                    "PK",
                    "PW",
                    "PS",
                    "PA",
                    "PG",
                    "PY",
                    "PE",
                    "PH",
                    "PN",
                    "PL",
                    "PT",
                    "PR",
                    "QA",
                    "RE",
                    "RO",
                    "RU",
                    "RW",
                    "BL",
                    "SH",
                    "KN",
                    "LC",
                    "MF",
                    "PM",
                    "VC",
                    "WS",
                    "SM",
                    "ST",
                    "SA",
                    "SN",
                    "RS",
                    "SC",
                    "SL",
                    "SG",
                    "SX",
                    "SK",
                    "SI",
                    "SB",
                    "SO",
                    "SZA",
                    "GS",
                    "KR",
                    "SS",
                    "ES",
                    "LK",
                    "SD",
                    "SR",
                    "SJ",
                    "SZ",
                    "SE",
                    "CH",
                    "SY",
                    "TW",
                    "TJ",
                    "TZ",
                    "TH",
                    "TL",
                    "TG",
                    "TK",
                    "TO",
                    "TT",
                    "TN",
                    "TR",
                    "TM",
                    "TC",
                    "TV",
                    "UG",
                    "UA",
                    "AE",
                    "GB",
                    "US",
                    "UM",
                    "UY",
                    "UZ",
                    "VU",
                    "VE",
                    "VN",
                    "VG",
                    "VI",
                    "WF",
                    "EH",
                    "YE",
                    "ZM",
                    "ZW",
                ],
                "type": "str",
            },
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
            "rate": {"type": "int"},
            "timeslice": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "botprofile_tps_binding": {
        "add_payload_keys": [
            "name",
            "bot_tps",
            "logmessage",
            "bot_bind_comment",
            "bot_tps_type",
            "threshold",
            "percentage",
            "bot_tps_action",
            "bot_tps_enabled",
        ],
        "bindprimary_key": "bot_tps",
        "delete_arg_keys": ["bot_tps", "bot_tps_type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bot_tps", "bot_tps_type"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_tps": {"type": "bool"},
            "bot_tps_action": {
                "choices": ["NONE", "LOG", "DROP", "REDIRECT", "RESET", "MITIGATION"],
                "type": "list",
            },
            "bot_tps_enabled": {"choices": [True, False], "type": "str"},
            "bot_tps_type": {
                "choices": ["SOURCE_IP", "GEOLOCATION", "REQUEST_URL", "Host"],
                "type": "str",
            },
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
            "percentage": {"type": "int"},
            "threshold": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "botprofile_trapinsertionurl_binding": {
        "add_payload_keys": [
            "name",
            "trapinsertionurl",
            "logmessage",
            "bot_bind_comment",
            "bot_trap_url",
            "bot_trap_url_insertion_enabled",
        ],
        "bindprimary_key": "trapinsertionurl",
        "delete_arg_keys": ["trapinsertionurl", "bot_trap_url"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trapinsertionurl", "bot_trap_url"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_trap_url": {"type": "str"},
            "bot_trap_url_insertion_enabled": {"choices": [True, False], "type": "str"},
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
            "trapinsertionurl": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "botprofile_whitelist_binding": {
        "add_payload_keys": [
            "name",
            "bot_whitelist",
            "logmessage",
            "bot_bind_comment",
            "bot_whitelist_type",
            "bot_whitelist_value",
            "log",
            "bot_whitelist_enabled",
        ],
        "bindprimary_key": "bot_whitelist",
        "delete_arg_keys": ["bot_whitelist", "bot_whitelist_value"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bot_whitelist", "bot_whitelist_value"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bot_bind_comment": {"type": "str"},
            "bot_whitelist": {"type": "bool"},
            "bot_whitelist_enabled": {"choices": [True, False], "type": "str"},
            "bot_whitelist_type": {
                "choices": ["IPv4", "SUBNET", "IPv6", "IPv6_SUBNET", "EXPRESSION"],
                "type": "str",
            },
            "bot_whitelist_value": {"type": "str"},
            "log": {"choices": [True, False], "type": "str"},
            "logmessage": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "bridgegroup": {
        "add_payload_keys": ["id", "dynamicrouting", "ipv6dynamicrouting"],
        "bindings": [
            "bridgegroup_vlan_binding",
            "bridgegroup_nsip6_binding",
            "bridgegroup_nsip_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "bridgegroup_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "bridgegroup_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "bridgegroup_vlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "id": {"type": "int"},
            "ipv6dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": ["id", "dynamicrouting", "ipv6dynamicrouting"],
    },
    "bridgegroup_nsip6_binding": {
        "add_payload_keys": ["id", "ipaddress", "netmask", "td", "ownergroup"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask", "td", "ownergroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask", "td", "ownergroup"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
            "ownergroup": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "bridgegroup_nsip_binding": {
        "add_payload_keys": ["id", "ipaddress", "netmask", "td", "ownergroup"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask", "td", "ownergroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask", "td", "ownergroup"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
            "ownergroup": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "bridgegroup_vlan_binding": {
        "add_payload_keys": ["id", "vlan"],
        "bindprimary_key": "vlan",
        "delete_arg_keys": ["vlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vlan"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "vlan": {"type": "int"}},
        "update_payload_keys": [],
    },
    "cachecontentgroup": {
        "add_payload_keys": [
            "name",
            "weakposrelexpiry",
            "heurexpiryparam",
            "relexpiry",
            "relexpirymillisec",
            "absexpiry",
            "absexpirygmt",
            "weaknegrelexpiry",
            "hitparams",
            "invalparams",
            "ignoreparamvaluecase",
            "matchcookies",
            "invalrestrictedtohost",
            "polleverytime",
            "ignorereloadreq",
            "removecookies",
            "prefetch",
            "prefetchperiod",
            "prefetchperiodmillisec",
            "prefetchmaxpending",
            "flashcache",
            "expireatlastbyte",
            "insertvia",
            "insertage",
            "insertetag",
            "cachecontrol",
            "quickabortsize",
            "minressize",
            "maxressize",
            "memlimit",
            "ignorereqcachinghdrs",
            "minhits",
            "alwaysevalpolicies",
            "persistha",
            "pinned",
            "lazydnsresolve",
            "hitselector",
            "invalselector",
            "type",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "absexpiry": {"type": "list"},
            "absexpirygmt": {"type": "list"},
            "alwaysevalpolicies": {"choices": [True, False], "type": "str"},
            "cachecontrol": {"type": "str"},
            "expireatlastbyte": {"choices": [True, False], "type": "str"},
            "flashcache": {"choices": [True, False], "type": "str"},
            "heurexpiryparam": {"type": "int"},
            "hitparams": {"type": "list"},
            "hitselector": {"type": "str"},
            "host": {"type": "str"},
            "ignoreparamvaluecase": {"choices": [True, False], "type": "str"},
            "ignorereloadreq": {"choices": [True, False], "type": "str"},
            "ignorereqcachinghdrs": {"choices": [True, False], "type": "str"},
            "insertage": {"choices": [True, False], "type": "str"},
            "insertetag": {"choices": [True, False], "type": "str"},
            "insertvia": {"choices": [True, False], "type": "str"},
            "invalparams": {"type": "list"},
            "invalrestrictedtohost": {"choices": [True, False], "type": "str"},
            "invalselector": {"type": "str"},
            "lazydnsresolve": {"choices": [True, False], "type": "str"},
            "matchcookies": {"choices": [True, False], "type": "str"},
            "maxressize": {"type": "int"},
            "memlimit": {"type": "int"},
            "minhits": {"type": "int"},
            "minressize": {"type": "int"},
            "name": {"type": "str"},
            "persistha": {"choices": [True, False], "type": "str"},
            "pinned": {"choices": [True, False], "type": "str"},
            "polleverytime": {"choices": [True, False], "type": "str"},
            "prefetch": {"choices": [True, False], "type": "str"},
            "prefetchmaxpending": {"type": "int"},
            "prefetchperiod": {"type": "int"},
            "prefetchperiodmillisec": {"type": "int"},
            "query": {"type": "str"},
            "quickabortsize": {"type": "int"},
            "relexpiry": {"type": "int"},
            "relexpirymillisec": {"type": "int"},
            "removecookies": {"choices": [True, False], "type": "str"},
            "selectorvalue": {"type": "str"},
            "tosecondary": {"choices": [True, False], "type": "str"},
            "type": {"choices": ["HTTP", "MYSQL", "MSSQL"], "type": "str"},
            "weaknegrelexpiry": {"type": "int"},
            "weakposrelexpiry": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "weakposrelexpiry",
            "heurexpiryparam",
            "relexpiry",
            "relexpirymillisec",
            "absexpiry",
            "absexpirygmt",
            "weaknegrelexpiry",
            "hitparams",
            "invalparams",
            "ignoreparamvaluecase",
            "matchcookies",
            "invalrestrictedtohost",
            "polleverytime",
            "ignorereloadreq",
            "removecookies",
            "prefetch",
            "prefetchperiod",
            "prefetchperiodmillisec",
            "prefetchmaxpending",
            "flashcache",
            "expireatlastbyte",
            "insertvia",
            "insertage",
            "insertetag",
            "cachecontrol",
            "quickabortsize",
            "minressize",
            "maxressize",
            "memlimit",
            "ignorereqcachinghdrs",
            "minhits",
            "alwaysevalpolicies",
            "persistha",
            "pinned",
            "lazydnsresolve",
            "hitselector",
            "invalselector",
        ],
    },
    "cacheforwardproxy": {
        "add_payload_keys": ["ipaddress", "port"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["port"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["port", "ipaddress"],
        "primary_key": "ipaddress",
        "readwrite_arguments": {"ipaddress": {"type": "str"}, "port": {"type": "int"}},
        "update_payload_keys": [],
    },
    "cacheglobal_cachepolicy_binding": {
        "add_payload_keys": [
            "policy",
            "priority",
            "precededefrules",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policy": {"type": "str"},
            "precededefrules": {"choices": [True, False], "type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "HTTPQUIC_RES_OVERRIDE",
                    "HTTPQUIC_RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "cacheparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "enablebypass": {"choices": [True, False], "type": "str"},
            "enablehaobjpersist": {"choices": [True, False], "type": "str"},
            "maxpostlen": {"type": "int"},
            "memlimit": {"type": "int"},
            "prefetchmaxpending": {"type": "int"},
            "undefaction": {"choices": ["NOCACHE", "RESET"], "type": "str"},
            "verifyusing": {
                "choices": ["HOSTNAME", "HOSTNAME_AND_IP", "DNS"],
                "type": "str",
            },
            "via": {"type": "str"},
        },
        "update_payload_keys": [
            "memlimit",
            "via",
            "verifyusing",
            "maxpostlen",
            "prefetchmaxpending",
            "enablebypass",
            "undefaction",
            "enablehaobjpersist",
        ],
    },
    "cachepolicy": {
        "add_payload_keys": [
            "policyname",
            "rule",
            "action",
            "storeingroup",
            "invalgroups",
            "invalobjects",
            "undefaction",
        ],
        "bindings": ["cachepolicylabel_cachepolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "policyname",
        "readwrite_arguments": {
            "action": {
                "choices": ["CACHE", "NOCACHE", "MAY_CACHE", "MAY_NOCACHE", "INVAL"],
                "type": "str",
            },
            "cachepolicylabel_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "invalgroups": {"type": "list"},
            "invalobjects": {"type": "list"},
            "newname": {"type": "str"},
            "policyname": {"type": "str"},
            "rule": {"type": "str"},
            "storeingroup": {"type": "str"},
            "undefaction": {"choices": ["NOCACHE", "RESET"], "type": "str"},
        },
        "update_payload_keys": [
            "policyname",
            "rule",
            "action",
            "storeingroup",
            "invalgroups",
            "invalobjects",
            "undefaction",
        ],
    },
    "cachepolicylabel": {
        "add_payload_keys": ["labelname", "evaluates"],
        "bindings": ["cachepolicylabel_cachepolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["evaluates", "labelname"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "cachepolicylabel_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "evaluates": {
                "choices": [
                    "REQ",
                    "RES",
                    "MSSQL_REQ",
                    "MSSQL_RES",
                    "MYSQL_REQ",
                    "MYSQL_RES",
                    "HTTPQUIC_REQ",
                    "HTTPQUIC_RES",
                ],
                "type": "str",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "cachepolicylabel_cachepolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "cacheselector": {
        "add_payload_keys": ["selectorname", "rule"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "selectorname",
        "readwrite_arguments": {
            "rule": {"type": "list"},
            "selectorname": {"type": "str"},
        },
        "update_payload_keys": ["selectorname", "rule"],
    },
    "channel": {
        "add_payload_keys": [
            "id",
            "ifnum",
            "lamac",
            "speed",
            "flowctl",
            "hamonitor",
            "haheartbeat",
            "tagall",
            "ifalias",
            "throughput",
            "bandwidthhigh",
            "bandwidthnormal",
        ],
        "bindings": ["channel_interface_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["ifnum"],
        "primary_key": "id",
        "readwrite_arguments": {
            "bandwidthhigh": {"type": "int"},
            "bandwidthnormal": {"type": "int"},
            "channel_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "conndistr": {"choices": ["DISABLED", "ENABLED"], "type": "str"},
            "flowctl": {"choices": [False, "RX", "TX", "RXTX", True], "type": "str"},
            "haheartbeat": {"choices": [False, True], "type": "str"},
            "hamonitor": {"choices": [True, False], "type": "str"},
            "id": {"type": "str"},
            "ifalias": {"type": "str"},
            "ifnum": {"type": "list"},
            "lamac": {"type": "str"},
            "linkredundancy": {"choices": [True, False], "type": "str"},
            "lrminthroughput": {"type": "int"},
            "macdistr": {"choices": ["SOURCE", "DESTINATION", "BOTH"], "type": "str"},
            "mode": {"choices": ["MANUAL", "AUTO"], "type": "str"},
            "mtu": {"type": "int"},
            "speed": {
                "choices": ["AUTO", 10, 100, 1000, 10000, 25000, 40000, 50000, 100000],
                "type": "str",
            },
            "tagall": {"choices": [True, False], "type": "str"},
            "throughput": {"type": "int"},
            "trunk": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "id",
            "lamac",
            "speed",
            "mtu",
            "flowctl",
            "hamonitor",
            "haheartbeat",
            "tagall",
            "ifalias",
            "throughput",
            "lrminthroughput",
            "linkredundancy",
            "bandwidthhigh",
            "bandwidthnormal",
        ],
    },
    "channel_interface_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "str"},
            "ifnum": {"type": "list"},
            "svmcmd": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "cloudallowedngsticketprofile": {
        "add_payload_keys": ["name", "creator"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"creator": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": ["name", "creator"],
    },
    "cloudngsparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "allowdtls12": {"choices": [True, False], "type": "str"},
            "allowedudtversion": {"choices": ["V4", "V5", "V6", "V7"], "type": "str"},
            "blockonallowedngstktprof": {"choices": [True, False], "type": "str"},
            "csvserverticketingdecouple": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "blockonallowedngstktprof",
            "allowedudtversion",
            "csvserverticketingdecouple",
            "allowdtls12",
        ],
    },
    "cloudparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "activationcode": {"type": "str"},
            "connectorresidence": {
                "choices": ["None", "Onprem", "Aws", "Azure", "Cpx"],
                "type": "str",
            },
            "controllerfqdn": {"type": "str"},
            "controllerport": {"type": "int"},
            "customerid": {"type": "str"},
            "deployment": {"choices": ["Production", "Staging", "Dev"], "type": "str"},
            "instanceid": {"type": "str"},
            "resourcelocation": {"type": "str"},
        },
        "update_payload_keys": [
            "controllerfqdn",
            "controllerport",
            "instanceid",
            "customerid",
            "resourcelocation",
            "activationcode",
            "deployment",
            "connectorresidence",
        ],
    },
    "cloudprofile": {
        "add_payload_keys": [
            "name",
            "type",
            "vservername",
            "servicetype",
            "ipaddress",
            "port",
            "servicegroupname",
            "boundservicegroupsvctype",
            "vsvrbindsvcport",
            "graceful",
            "delay",
            "azuretagname",
            "azuretagvalue",
            "azurepollperiod",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "servicetype",
            "name",
            "azuretagname",
            "delay",
            "ipaddress",
            "servicegroupname",
            "vservername",
            "boundservicegroupsvctype",
            "type",
            "vsvrbindsvcport",
            "azuretagvalue",
            "azurepollperiod",
            "graceful",
            "port",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "azurepollperiod": {"type": "int"},
            "azuretagname": {"type": "str"},
            "azuretagvalue": {"type": "str"},
            "boundservicegroupsvctype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "DTLS",
                    "NNTP",
                    "RPCSVR",
                    "DNS",
                    "ADNS",
                    "SNMP",
                    "RTSP",
                    "DHCPRA",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "DNS_TCP",
                    "ADNS_TCP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                    "MONGO",
                    "MONGO_TLS",
                    "RADIUS",
                    "RADIUSListener",
                    "RDP",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "TFTP",
                    "SMPP",
                    "PPTP",
                    "GRE",
                    "SYSLOGTCP",
                    "SYSLOGUDP",
                    "FIX",
                    "SSL_FIX",
                    "USER_TCP",
                    "USER_SSL_TCP",
                    "QUIC",
                    "IPFIX",
                    "LOGSTREAM",
                    "LOGSTREAM_SSL",
                    "MQTT",
                    "MQTT_TLS",
                    "QUIC_BRIDGE",
                ],
                "type": "str",
            },
            "delay": {"type": "int"},
            "graceful": {"choices": [True, False], "type": "str"},
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "port": {"type": "int"},
            "servicegroupname": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "DTLS",
                    "NNTP",
                    "DNS",
                    "DHCPRA",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "DNS_TCP",
                    "RTSP",
                    "PUSH",
                    "SSL_PUSH",
                    "RADIUS",
                    "RDP",
                    "MYSQL",
                    "MSSQL",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "TFTP",
                    "ORACLE",
                    "SMPP",
                    "SYSLOGTCP",
                    "SYSLOGUDP",
                    "FIX",
                    "SSL_FIX",
                    "PROXY",
                    "USER_TCP",
                    "USER_SSL_TCP",
                    "QUIC",
                    "IPFIX",
                    "LOGSTREAM",
                    "MONGO",
                    "MONGO_TLS",
                    "MQTT",
                    "MQTT_TLS",
                    "QUIC_BRIDGE",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
            "type": {"choices": ["autoscale", "azuretags"], "type": "str"},
            "vservername": {"type": "str"},
            "vsvrbindsvcport": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "cloudtunnelparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "controllerfqdn": {"type": "str"},
            "fqdn": {"type": "str"},
            "resourcelocation": {"type": "str"},
            "subnetresourcelocationmappings": {"type": "str"},
        },
        "update_payload_keys": [
            "controllerfqdn",
            "fqdn",
            "resourcelocation",
            "subnetresourcelocationmappings",
        ],
    },
    "cloudtunnelvserver": {
        "add_payload_keys": ["name", "servicetype", "listenpolicy", "listenpriority"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["servicetype"],
        "primary_key": "name",
        "readwrite_arguments": {
            "listenpolicy": {"type": "str"},
            "listenpriority": {"type": "int"},
            "name": {"type": "str"},
            "servicetype": {"choices": ["TCP", "UDP"], "type": "str"},
        },
        "update_payload_keys": ["name", "listenpolicy", "listenpriority"],
    },
    "clusterinstance": {
        "add_payload_keys": [
            "clid",
            "deadinterval",
            "hellointerval",
            "preemption",
            "quorumtype",
            "inc",
            "processlocal",
            "retainconnectionsoncluster",
            "backplanebasedview",
            "syncstatusstrictmode",
            "dfdretainl2params",
            "clusterproxyarp",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["clid"],
        "enable_payload_keys": ["clid"],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "clid",
        "readwrite_arguments": {
            "backplanebasedview": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clid": {"type": "int"},
            "clusterproxyarp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "deadinterval": {"type": "int"},
            "dfdretainl2params": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hellointerval": {"type": "int"},
            "inc": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "nodegroup": {"type": "str"},
            "preemption": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "processlocal": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "quorumtype": {"choices": ["MAJORITY", "NONE"], "type": "str"},
            "retainconnectionsoncluster": {"choices": [True, False], "type": "str"},
            "syncstatusstrictmode": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "clid",
            "deadinterval",
            "hellointerval",
            "preemption",
            "quorumtype",
            "inc",
            "processlocal",
            "nodegroup",
            "retainconnectionsoncluster",
            "backplanebasedview",
            "syncstatusstrictmode",
            "dfdretainl2params",
            "clusterproxyarp",
        ],
    },
    "clusternode": {
        "add_payload_keys": [
            "nodeid",
            "ipaddress",
            "backplane",
            "priority",
            "nodegroup",
            "delay",
            "tunnelmode",
        ],
        "bindings": [
            "clusternodegroup_service_binding",
            "clusternodegroup_authenticationvserver_binding",
            "clusternodegroup_clusternode_binding",
            "clusternodegroup_streamidentifier_binding",
            "clusternodegroup_csvserver_binding",
            "clusternodegroup_nslimitidentifier_binding",
            "clusternodegroup_vpnvserver_binding",
            "clusternodegroup_gslbvserver_binding",
            "clusternodegroup_gslbsite_binding",
            "clusternodegroup_lbvserver_binding",
            "clusternodegroup_crvserver_binding",
            "clusternode_routemonitor_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": ["clearnodegroupconfig"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["ipaddress", "nodegroup"],
        "primary_key": "nodeid",
        "readwrite_arguments": {
            "backplane": {"type": "str"},
            "clearnodegroupconfig": {"choices": [True, False], "type": "str"},
            "clusternode_routemonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_authenticationvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_clusternode_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_crvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_csvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_gslbsite_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_gslbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_nslimitidentifier_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_service_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_streamidentifier_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_vpnvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "delay": {"type": "int"},
            "ipaddress": {"type": "str"},
            "nodegroup": {"type": "str"},
            "nodeid": {"type": "int"},
            "priority": {"type": "int"},
            "tunnelmode": {"choices": ["NONE", "GRE", "UDP"], "type": "str"},
        },
        "update_payload_keys": [
            "nodeid",
            "backplane",
            "priority",
            "delay",
            "tunnelmode",
        ],
    },
    "clusternode_routemonitor_binding": {
        "add_payload_keys": ["nodeid", "routemonitor", "netmask"],
        "bindprimary_key": "routemonitor",
        "delete_arg_keys": ["routemonitor", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["routemonitor", "netmask"],
        "immutable_keys": [],
        "primary_key": "nodeid",
        "readwrite_arguments": {
            "netmask": {"type": "str"},
            "nodeid": {"type": "int"},
            "routemonitor": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "clusternodegroup": {
        "add_payload_keys": ["name", "strict", "sticky", "priority"],
        "bindings": [
            "clusternodegroup_service_binding",
            "clusternodegroup_authenticationvserver_binding",
            "clusternodegroup_clusternode_binding",
            "clusternodegroup_streamidentifier_binding",
            "clusternodegroup_csvserver_binding",
            "clusternodegroup_nslimitidentifier_binding",
            "clusternodegroup_vpnvserver_binding",
            "clusternodegroup_gslbvserver_binding",
            "clusternodegroup_gslbsite_binding",
            "clusternodegroup_lbvserver_binding",
            "clusternodegroup_crvserver_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["sticky"],
        "primary_key": "name",
        "readwrite_arguments": {
            "clusternodegroup_authenticationvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_clusternode_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_crvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_csvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_gslbsite_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_gslbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_nslimitidentifier_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_service_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_streamidentifier_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "clusternodegroup_vpnvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "priority": {"type": "int"},
            "sticky": {"choices": [True, False], "type": "str"},
            "strict": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": ["name", "strict", "priority"],
    },
    "clusternodegroup_authenticationvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_clusternode_binding": {
        "add_payload_keys": ["name", "node"],
        "bindprimary_key": "node",
        "delete_arg_keys": ["node"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["node"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "node": {"type": "int"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_crvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_csvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_gslbsite_binding": {
        "add_payload_keys": ["name", "gslbsite"],
        "bindprimary_key": "gslbsite",
        "delete_arg_keys": ["gslbsite"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["gslbsite"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"gslbsite": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_gslbvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_lbvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_nslimitidentifier_binding": {
        "add_payload_keys": ["name", "identifiername"],
        "bindprimary_key": "identifiername",
        "delete_arg_keys": ["identifiername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["identifiername"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "identifiername": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "clusternodegroup_service_binding": {
        "add_payload_keys": ["name", "service"],
        "bindprimary_key": "service",
        "delete_arg_keys": ["service"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["service"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "service": {"type": "str"}},
        "update_payload_keys": [],
    },
    "clusternodegroup_streamidentifier_binding": {
        "add_payload_keys": ["name", "identifiername"],
        "bindprimary_key": "identifiername",
        "delete_arg_keys": ["identifiername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["identifiername"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "identifiername": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "clusternodegroup_vpnvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "cmpaction": {
        "add_payload_keys": ["name", "cmptype", "addvaryheader", "varyheadervalue"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "addvaryheader": {
                "choices": ["GLOBAL", "DISABLED", "ENABLED"],
                "type": "str",
            },
            "cmptype": {
                "choices": ["compress", "gzip", "deflate", "nocompress"],
                "type": "str",
            },
            "deltatype": {"choices": ["PERURL", "PERPOLICY"], "type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "varyheadervalue": {"type": "str"},
        },
        "update_payload_keys": ["name", "cmptype", "addvaryheader", "varyheadervalue"],
    },
    "cmpglobal_cmppolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "HTTPQUIC_RES_OVERRIDE",
                    "HTTPQUIC_RES_DEFAULT",
                    "NONE",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "cmpparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "addvaryheader": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cmpbypasspct": {"type": "int"},
            "cmplevel": {
                "choices": ["optimal", "bestspeed", "bestcompression"],
                "type": "str",
            },
            "cmponpush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "externalcache": {"choices": [True, False], "type": "str"},
            "heurexpiry": {"choices": [True, False], "type": "str"},
            "heurexpiryhistwt": {"type": "int"},
            "heurexpirythres": {"type": "int"},
            "minressize": {"type": "int"},
            "policytype": {"choices": ["ADVANCED"], "type": "str"},
            "quantumsize": {"type": "int"},
            "servercmp": {"choices": [True, False], "type": "str"},
            "varyheadervalue": {"type": "str"},
        },
        "update_payload_keys": [
            "cmplevel",
            "quantumsize",
            "servercmp",
            "minressize",
            "cmpbypasspct",
            "cmponpush",
            "policytype",
            "addvaryheader",
            "externalcache",
            "varyheadervalue",
        ],
    },
    "cmppolicy": {
        "add_payload_keys": ["name", "rule", "resaction"],
        "bindings": ["cmppolicylabel_cmppolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "cmppolicylabel_cmppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "resaction": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "resaction"],
    },
    "cmppolicylabel": {
        "add_payload_keys": ["labelname", "type"],
        "bindings": ["cmppolicylabel_cmppolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "type"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "cmppolicylabel_cmppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "type": {
                "choices": ["REQ", "RES", "HTTPQUIC_REQ", "HTTPQUIC_RES"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "cmppolicylabel_cmppolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "contentinspectionaction": {
        "add_payload_keys": [
            "name",
            "type",
            "servername",
            "serverip",
            "serverport",
            "icapprofilename",
            "ifserverdown",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "icapprofilename": {"type": "str"},
            "ifserverdown": {"choices": ["CONTINUE", "DROP", "RESET"], "type": "str"},
            "name": {"type": "str"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
            "serverport": {"type": "int"},
            "type": {
                "choices": ["ICAP", "INLINEINSPECTION", "MIRROR", "NOINSPECTION"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "servername",
            "serverip",
            "serverport",
            "icapprofilename",
            "ifserverdown",
        ],
    },
    "contentinspectioncallout": {
        "add_payload_keys": [
            "name",
            "type",
            "comment",
            "profilename",
            "servername",
            "serverip",
            "serverport",
            "returntype",
            "resultexpr",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "profilename": {"type": "str"},
            "resultexpr": {"type": "str"},
            "returntype": {"choices": ["BOOL", "NUM", "TEXT"], "type": "str"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
            "serverport": {"type": "int"},
            "type": {"choices": ["ICAP"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "servername",
            "serverip",
            "serverport",
            "profilename",
            "returntype",
            "resultexpr",
            "comment",
        ],
    },
    "contentinspectionglobal_contentinspectionpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "contentinspectionparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {"undefaction": {"type": "str"}},
        "update_payload_keys": ["undefaction"],
    },
    "contentinspectionpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": ["contentinspectionpolicylabel_contentinspectionpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "contentinspectionpolicylabel_contentinspectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "contentinspectionpolicylabel": {
        "add_payload_keys": ["labelname", "type", "comment"],
        "bindings": ["contentinspectionpolicylabel_contentinspectionpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "type"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "contentinspectionpolicylabel_contentinspectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "type": {"choices": ["REQ", "RES"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "contentinspectionpolicylabel_contentinspectionpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "contentinspectionprofile": {
        "add_payload_keys": [
            "name",
            "type",
            "ingressinterface",
            "ingressvlan",
            "egressinterface",
            "iptunnel",
            "egressvlan",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "egressinterface": {"type": "str"},
            "egressvlan": {"type": "int"},
            "ingressinterface": {"type": "str"},
            "ingressvlan": {"type": "int"},
            "iptunnel": {"type": "str"},
            "name": {"type": "str"},
            "type": {"choices": ["InlineInspection", "Mirror"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "egressinterface",
            "ingressinterface",
            "egressvlan",
            "ingressvlan",
            "iptunnel",
        ],
    },
    "crpolicy": {
        "add_payload_keys": ["policyname", "rule", "action", "logaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "policyname",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "logaction": {"type": "str"},
            "newname": {"type": "str"},
            "policyname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["policyname", "rule", "action", "logaction"],
    },
    "crvserver": {
        "add_payload_keys": [
            "name",
            "td",
            "servicetype",
            "ipv46",
            "cachetype",
            "redirect",
            "onpolicymatch",
            "redirecturl",
            "clttimeout",
            "precedence",
            "arp",
            "map",
            "format",
            "via",
            "dnsvservername",
            "destinationvserver",
            "domain",
            "sopersistencetimeout",
            "sothreshold",
            "reuse",
            "downstateflush",
            "backupvserver",
            "disableprimaryondown",
            "l2conn",
            "backendssl",
            "listenpolicy",
            "listenpriority",
            "tcpprofilename",
            "httpprofilename",
            "comment",
            "srcipexpr",
            "originusip",
            "useportrange",
            "appflowlog",
            "netprofile",
            "icmpvsrresponse",
            "rhistate",
            "nodefaultbindings",
            "useoriginipportforcache",
            "tcpprobeport",
            "probeprotocol",
            "probeport",
            "disallowserviceaccess",
            "port",
            "ipset",
            "range",
            "probesuccessresponsecode",
        ],
        "bindings": [
            "crvserver_appflowpolicy_binding",
            "crvserver_rewritepolicy_binding",
            "crvserver_cspolicy_binding",
            "crvserver_crpolicy_binding",
            "crvserver_spilloverpolicy_binding",
            "crvserver_appfwpolicy_binding",
            "crvserver_feopolicy_binding",
            "crvserver_cachepolicy_binding",
            "crvserver_policymap_binding",
            "crvserver_analyticsprofile_binding",
            "crvserver_lbvserver_binding",
            "crvserver_icapolicy_binding",
            "crvserver_cmppolicy_binding",
            "crvserver_appqoepolicy_binding",
            "crvserver_responderpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": [
            "servicetype",
            "sothreshold",
            "cachetype",
            "format",
            "td",
            "map",
            "range",
            "nodefaultbindings",
            "port",
            "sopersistencetimeout",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "arp": {"choices": [True, False], "type": "str"},
            "backendssl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "backupvserver": {"type": "str"},
            "cachetype": {
                "choices": ["TRANSPARENT", "REVERSE", "FORWARD"],
                "type": "str",
            },
            "cachevserver": {"type": "str"},
            "clttimeout": {"type": "int"},
            "comment": {"type": "str"},
            "crvserver_analyticsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_appfwpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_appqoepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_cmppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_crpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_feopolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_icapolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_policymap_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "crvserver_spilloverpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "destinationvserver": {"type": "str"},
            "disableprimaryondown": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "disallowserviceaccess": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "dnsvservername": {"type": "str"},
            "domain": {"type": "str"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "format": {"choices": [True, False], "type": "str"},
            "ghost": {"choices": [True, False], "type": "str"},
            "httpprofilename": {"type": "str"},
            "icmpvsrresponse": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "ipset": {"type": "str"},
            "ipv46": {"type": "str"},
            "l2conn": {"choices": [True, False], "type": "str"},
            "listenpolicy": {"type": "str"},
            "listenpriority": {"type": "int"},
            "map": {"choices": [True, False], "type": "str"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "onpolicymatch": {"choices": ["CACHE", "ORIGIN"], "type": "str"},
            "originusip": {"choices": [True, False], "type": "str"},
            "port": {"type": "int"},
            "precedence": {"choices": ["RULE", "URL"], "type": "str"},
            "probeport": {"type": "int"},
            "probeprotocol": {"choices": ["TCP", "HTTP"], "type": "str"},
            "probesuccessresponsecode": {"type": "str"},
            "range": {"type": "int"},
            "redirect": {"choices": ["CACHE", "POLICY", "ORIGIN"], "type": "str"},
            "redirecturl": {"type": "str"},
            "reuse": {"choices": [True, False], "type": "str"},
            "rhistate": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "servicetype": {"choices": ["HTTP", "SSL", "NNTP", "HDX"], "type": "str"},
            "sopersistencetimeout": {"type": "int"},
            "sothreshold": {"type": "int"},
            "srcipexpr": {"type": "str"},
            "tcpprobeport": {"type": "int"},
            "tcpprofilename": {"type": "str"},
            "td": {"type": "int"},
            "useoriginipportforcache": {"choices": [True, False], "type": "str"},
            "useportrange": {"choices": [True, False], "type": "str"},
            "via": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ipv46",
            "redirect",
            "onpolicymatch",
            "precedence",
            "arp",
            "via",
            "dnsvservername",
            "destinationvserver",
            "domain",
            "reuse",
            "backupvserver",
            "disableprimaryondown",
            "redirecturl",
            "clttimeout",
            "downstateflush",
            "l2conn",
            "backendssl",
            "listenpolicy",
            "listenpriority",
            "tcpprofilename",
            "httpprofilename",
            "netprofile",
            "comment",
            "srcipexpr",
            "originusip",
            "useportrange",
            "appflowlog",
            "icmpvsrresponse",
            "rhistate",
            "useoriginipportforcache",
            "tcpprobeport",
            "probeprotocol",
            "probeport",
            "disallowserviceaccess",
            "ipset",
            "probesuccessresponsecode",
        ],
    },
    "crvserver_analyticsprofile_binding": {
        "add_payload_keys": ["name", "analyticsprofile"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_appflowpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_appfwpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_appqoepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_cachepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_cmppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_crpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_cspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_feopolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_icapolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_lbvserver_binding": {
        "add_payload_keys": ["name", "lbvserver"],
        "bindprimary_key": "lbvserver",
        "delete_arg_keys": ["lbvserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["lbvserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"lbvserver": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "crvserver_policymap_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_responderpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_rewritepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "crvserver_spilloverpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "ICA_REQUEST"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csaction": {
        "add_payload_keys": [
            "name",
            "targetlbvserver",
            "targetvserver",
            "targetvserverexpr",
            "comment",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "targetlbvserver": {"type": "str"},
            "targetvserver": {"type": "str"},
            "targetvserverexpr": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "targetlbvserver",
            "targetvserver",
            "targetvserverexpr",
            "comment",
        ],
    },
    "csparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "stateupdate": {"choices": ["ENABLED", "DISABLED"], "type": "str"}
        },
        "update_payload_keys": ["stateupdate"],
    },
    "cspolicy": {
        "add_payload_keys": ["policyname", "rule", "action", "logaction"],
        "bindings": ["cspolicylabel_cspolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "policyname",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "cspolicylabel_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "logaction": {"type": "str"},
            "newname": {"type": "str"},
            "policyname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["policyname", "rule", "action", "logaction"],
    },
    "cspolicylabel": {
        "add_payload_keys": ["labelname", "cspolicylabeltype"],
        "bindings": ["cspolicylabel_cspolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "cspolicylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "cspolicylabel_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "cspolicylabeltype": {
                "choices": [
                    "HTTP",
                    "TCP",
                    "RTSP",
                    "SSL",
                    "SSL_TCP",
                    "UDP",
                    "DNS",
                    "SIP_UDP",
                    "SIP_TCP",
                    "ANY",
                    "RADIUS",
                    "RDP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "FTP",
                    "DNS_TCP",
                    "SMPP",
                    "MQTT",
                    "MQTT_TLS",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "cspolicylabel_cspolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "targetvserver",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver": {
        "add_payload_keys": [
            "name",
            "td",
            "servicetype",
            "ipv46",
            "targettype",
            "ippattern",
            "range",
            "port",
            "ipset",
            "stateupdate",
            "cacheable",
            "redirecturl",
            "clttimeout",
            "precedence",
            "casesensitive",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "sothreshold",
            "sobackupaction",
            "redirectportrewrite",
            "downstateflush",
            "backupvserver",
            "disableprimaryondown",
            "insertvserveripport",
            "rtspnat",
            "authenticationhost",
            "authentication",
            "listenpolicy",
            "listenpriority",
            "authn401",
            "authnvsname",
            "push",
            "pushvserver",
            "pushlabel",
            "pushmulticlients",
            "tcpprofilename",
            "httpprofilename",
            "dbprofilename",
            "oracleserverversion",
            "comment",
            "mssqlserverversion",
            "l2conn",
            "mysqlprotocolversion",
            "mysqlserverversion",
            "mysqlcharacterset",
            "mysqlservercapabilities",
            "appflowlog",
            "netprofile",
            "icmpvsrresponse",
            "rhistate",
            "authnprofile",
            "dnsprofilename",
            "dtls",
            "nodefaultbindings",
            "persistencetype",
            "persistmask",
            "v6persistmasklen",
            "timeout",
            "cookiename",
            "persistencebackup",
            "backuppersistencetimeout",
            "tcpprobeport",
            "probeprotocol",
            "probeport",
            "quicprofilename",
            "redirectfromport",
            "httpsredirecturl",
            "dnsrecordtype",
            "persistenceid",
            "ipmask",
            "vipheader",
            "probesuccessresponsecode",
        ],
        "bindings": [
            "csvserver_tmtrafficpolicy_binding",
            "csvserver_appflowpolicy_binding",
            "csvserver_authorizationpolicy_binding",
            "csvserver_rewritepolicy_binding",
            "csvserver_auditnslogpolicy_binding",
            "csvserver_cspolicy_binding",
            "csvserver_spilloverpolicy_binding",
            "csvserver_transformpolicy_binding",
            "csvserver_botpolicy_binding",
            "csvserver_feopolicy_binding",
            "csvserver_appfwpolicy_binding",
            "csvserver_cachepolicy_binding",
            "csvserver_contentinspectionpolicy_binding",
            "csvserver_vpnvserver_binding",
            "csvserver_gslbvserver_binding",
            "csvserver_analyticsprofile_binding",
            "csvserver_lbvserver_binding",
            "csvserver_domain_binding",
            "csvserver_cmppolicy_binding",
            "csvserver_auditsyslogpolicy_binding",
            "csvserver_appqoepolicy_binding",
            "csvserver_responderpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": [
            "servicetype",
            "td",
            "range",
            "targettype",
            "nodefaultbindings",
            "port",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authentication": {"choices": [True, False], "type": "str"},
            "authenticationhost": {"type": "str"},
            "authn401": {"choices": [True, False], "type": "str"},
            "authnprofile": {"type": "str"},
            "authnvsname": {"type": "str"},
            "backupip": {"type": "str"},
            "backuppersistencetimeout": {"type": "int"},
            "backupvserver": {"type": "str"},
            "cacheable": {"choices": [True, False], "type": "str"},
            "casesensitive": {"choices": [True, False], "type": "str"},
            "clttimeout": {"type": "int"},
            "comment": {"type": "str"},
            "cookiedomain": {"type": "str"},
            "cookiename": {"type": "str"},
            "cookietimeout": {"type": "int"},
            "csvserver_analyticsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_appfwpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_appqoepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_botpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_cmppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_contentinspectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_domain_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_feopolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_gslbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_spilloverpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_tmtrafficpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_transformpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "csvserver_vpnvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "dbprofilename": {"type": "str"},
            "disableprimaryondown": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsprofilename": {"type": "str"},
            "dnsrecordtype": {
                "choices": ["A", "AAAA", "CNAME", "NAPTR"],
                "type": "str",
            },
            "domainname": {"type": "str"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dtls": {"choices": [True, False], "type": "str"},
            "httpprofilename": {"type": "str"},
            "httpsredirecturl": {"type": "str"},
            "icmpvsrresponse": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "insertvserveripport": {
                "choices": [False, "VIPADDR", "V6TOV4MAPPING"],
                "type": "str",
            },
            "ipmask": {"type": "str"},
            "ippattern": {"type": "str"},
            "ipset": {"type": "str"},
            "ipv46": {"type": "str"},
            "l2conn": {"choices": [True, False], "type": "str"},
            "listenpolicy": {"type": "str"},
            "listenpriority": {"type": "int"},
            "mssqlserverversion": {
                "choices": [70, 2000, "2000SP1", 2005, 2008, "2008R2", 2012, 2014],
                "type": "str",
            },
            "mysqlcharacterset": {"type": "int"},
            "mysqlprotocolversion": {"type": "int"},
            "mysqlservercapabilities": {"type": "int"},
            "mysqlserverversion": {"type": "str"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "oracleserverversion": {"choices": ["10G", "11G"], "type": "str"},
            "persistencebackup": {"choices": ["SOURCEIP", "NONE"], "type": "str"},
            "persistenceid": {"type": "int"},
            "persistencetype": {
                "choices": ["SOURCEIP", "COOKIEINSERT", "SSLSESSION", "NONE"],
                "type": "str",
            },
            "persistmask": {"type": "str"},
            "port": {"type": "int"},
            "precedence": {"choices": ["RULE", "URL"], "type": "str"},
            "probeport": {"type": "int"},
            "probeprotocol": {"choices": ["TCP", "HTTP"], "type": "str"},
            "probesuccessresponsecode": {"type": "str"},
            "push": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "pushlabel": {"type": "str"},
            "pushmulticlients": {"choices": [True, False], "type": "str"},
            "pushvserver": {"type": "str"},
            "quicprofilename": {"type": "str"},
            "range": {"type": "int"},
            "redirectfromport": {"type": "int"},
            "redirectportrewrite": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "redirecturl": {"type": "str"},
            "rhistate": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "rtspnat": {"choices": [True, False], "type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "SSL",
                    "TCP",
                    "FTP",
                    "RTSP",
                    "SSL_TCP",
                    "UDP",
                    "DNS",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "ANY",
                    "RADIUS",
                    "RDP",
                    "MYSQL",
                    "MSSQL",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "DNS_TCP",
                    "ORACLE",
                    "SMPP",
                    "PROXY",
                    "MONGO",
                    "MONGO_TLS",
                    "MQTT",
                    "MQTT_TLS",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
            "sitedomainttl": {"type": "int"},
            "sobackupaction": {
                "choices": ["DROP", "ACCEPT", "REDIRECT"],
                "type": "str",
            },
            "somethod": {
                "choices": [
                    "CONNECTION",
                    "DYNAMICCONNECTION",
                    "BANDWIDTH",
                    "HEALTH",
                    "NONE",
                ],
                "type": "str",
            },
            "sopersistence": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sopersistencetimeout": {"type": "int"},
            "sothreshold": {"type": "int"},
            "stateupdate": {
                "choices": ["ENABLED", "DISABLED", "UPDATEONBACKENDUPDATE"],
                "type": "str",
            },
            "targettype": {"choices": ["GSLB"], "type": "str"},
            "tcpprobeport": {"type": "int"},
            "tcpprofilename": {"type": "str"},
            "td": {"type": "int"},
            "timeout": {"type": "int"},
            "ttl": {"type": "int"},
            "v6persistmasklen": {"type": "int"},
            "vipheader": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ipv46",
            "ipset",
            "ippattern",
            "ipmask",
            "stateupdate",
            "precedence",
            "casesensitive",
            "backupvserver",
            "redirecturl",
            "cacheable",
            "clttimeout",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "sothreshold",
            "sobackupaction",
            "redirectportrewrite",
            "downstateflush",
            "disableprimaryondown",
            "insertvserveripport",
            "rtspnat",
            "authenticationhost",
            "authentication",
            "listenpolicy",
            "listenpriority",
            "authn401",
            "authnvsname",
            "push",
            "pushvserver",
            "pushlabel",
            "pushmulticlients",
            "tcpprofilename",
            "httpprofilename",
            "dbprofilename",
            "comment",
            "l2conn",
            "mssqlserverversion",
            "mysqlprotocolversion",
            "oracleserverversion",
            "mysqlserverversion",
            "mysqlcharacterset",
            "mysqlservercapabilities",
            "appflowlog",
            "netprofile",
            "authnprofile",
            "icmpvsrresponse",
            "rhistate",
            "dnsprofilename",
            "dnsrecordtype",
            "persistenceid",
            "domainname",
            "dtls",
            "persistencetype",
            "persistmask",
            "v6persistmasklen",
            "timeout",
            "cookiename",
            "persistencebackup",
            "backuppersistencetimeout",
            "tcpprobeport",
            "probeprotocol",
            "probeport",
            "quicprofilename",
            "redirectfromport",
            "httpsredirecturl",
            "vipheader",
            "ttl",
            "backupip",
            "cookiedomain",
            "cookietimeout",
            "sitedomainttl",
            "probesuccessresponsecode",
        ],
    },
    "csvserver_analyticsprofile_binding": {
        "add_payload_keys": ["name", "analyticsprofile"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_appflowpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_appfwpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_appqoepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_authorizationpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_botpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_cachepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_cmppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_contentinspectionpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_cspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_domain_binding": {
        "add_payload_keys": [
            "name",
            "domainname",
            "ttl",
            "backupip",
            "cookiedomain",
            "cookietimeout",
            "sitedomainttl",
        ],
        "bindprimary_key": "domainname",
        "delete_arg_keys": ["domainname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["domainname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "backupip": {"type": "str"},
            "cookiedomain": {"type": "str"},
            "cookietimeout": {"type": "int"},
            "domainname": {"type": "str"},
            "name": {"type": "str"},
            "sitedomainttl": {"type": "int"},
            "ttl": {"type": "int"},
        },
        "update_payload_keys": [
            "domainname",
            "ttl",
            "backupip",
            "cookiedomain",
            "cookietimeout",
            "sitedomainttl",
            "domainname",
        ],
    },
    "csvserver_feopolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_gslbvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "csvserver_lbvserver_binding": {
        "add_payload_keys": ["name", "lbvserver", "targetvserver"],
        "bindprimary_key": "lbvserver",
        "delete_arg_keys": ["lbvserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["lbvserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "lbvserver": {"type": "str"},
            "name": {"type": "str"},
            "targetvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_responderpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_rewritepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_spilloverpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_tmtrafficpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_transformpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "targetlbvserver",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "bindpoint", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "bindpoint", "priority"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "MQTT_JUMBO_REQ",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "targetlbvserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "csvserver_vpnvserver_binding": {
        "add_payload_keys": ["name", "vserver"],
        "bindprimary_key": "vserver",
        "delete_arg_keys": ["vserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vserver": {"type": "str"}},
        "update_payload_keys": [],
    },
    "dbdbprofile": {
        "add_payload_keys": [
            "name",
            "interpretquery",
            "stickiness",
            "kcdaccount",
            "conmultiplex",
            "enablecachingconmuxoff",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "conmultiplex": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "enablecachingconmuxoff": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "interpretquery": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "name": {"type": "str"},
            "stickiness": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "interpretquery",
            "stickiness",
            "kcdaccount",
            "conmultiplex",
            "enablecachingconmuxoff",
        ],
    },
    "dbuser": {
        "add_payload_keys": ["username", "password"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["loggedin"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "loggedin": {"type": "bool"},
            "password": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": ["username", "password"],
    },
    "dnsaaaarec": {
        "add_payload_keys": ["hostname", "ipv6address", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ecssubnet", "ipv6address"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipv6address", "type"],
        "immutable_keys": ["ipv6address", "hostname", "ttl"],
        "primary_key": "hostname",
        "readwrite_arguments": {
            "ecssubnet": {"type": "str"},
            "hostname": {"type": "str"},
            "ipv6address": {"type": "str"},
            "nodeid": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnsaction": {
        "add_payload_keys": [
            "actionname",
            "actiontype",
            "ipaddress",
            "ttl",
            "viewname",
            "preferredloclist",
            "dnsprofilename",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["actiontype"],
        "primary_key": "actionname",
        "readwrite_arguments": {
            "actionname": {"type": "str"},
            "actiontype": {
                "choices": [
                    "ViewName",
                    "GslbPrefLoc",
                    "noop",
                    "Drop",
                    "Cache_Bypass",
                    "Rewrite_Response",
                ],
                "type": "str",
            },
            "dnsprofilename": {"type": "str"},
            "ipaddress": {"type": "list"},
            "preferredloclist": {"type": "list"},
            "ttl": {"type": "int"},
            "viewname": {"type": "str"},
        },
        "update_payload_keys": [
            "actionname",
            "ipaddress",
            "ttl",
            "viewname",
            "preferredloclist",
            "dnsprofilename",
        ],
    },
    "dnsaction64": {
        "add_payload_keys": ["actionname", "prefix", "mappedrule", "excluderule"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "actionname",
        "readwrite_arguments": {
            "actionname": {"type": "str"},
            "excluderule": {"type": "str"},
            "mappedrule": {"type": "str"},
            "prefix": {"type": "str"},
        },
        "update_payload_keys": ["actionname", "prefix", "mappedrule", "excluderule"],
    },
    "dnsaddrec": {
        "add_payload_keys": ["hostname", "ipaddress", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ecssubnet", "ipaddress"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["hostname", "ttl", "ipaddress"],
        "primary_key": "hostname",
        "readwrite_arguments": {
            "ecssubnet": {"type": "str"},
            "hostname": {"type": "str"},
            "ipaddress": {"type": "str"},
            "nodeid": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnscaarec": {
        "add_payload_keys": ["domain", "valuestring", "tag", "flag", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["valuestring", "recordid", "tag", "flag", "ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["flag", "domain", "valuestring", "tag", "ttl"],
        "primary_key": "domain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "flag": {"choices": ["NONE", "CRITICAL"], "type": "str"},
            "nodeid": {"type": "int"},
            "recordid": {"type": "int"},
            "tag": {"type": "str"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
            "valuestring": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnscnamerec": {
        "add_payload_keys": ["aliasname", "canonicalname", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["aliasname", "ttl", "canonicalname"],
        "primary_key": "aliasname",
        "readwrite_arguments": {
            "aliasname": {"type": "str"},
            "canonicalname": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "nodeid": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnsglobal_dnspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "dnskey": {
        "add_payload_keys": [
            "keyname",
            "publickey",
            "privatekey",
            "expires",
            "notificationperiod",
            "ttl",
            "password",
            "units1",
            "units2",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["publickey", "password", "privatekey"],
        "primary_key": "keyname",
        "readwrite_arguments": {
            "algorithm": {
                "choices": ["RSASHA1", "RSASHA256", "RSASHA512"],
                "type": "str",
            },
            "expires": {"type": "int"},
            "filenameprefix": {"type": "str"},
            "keyname": {"type": "str"},
            "keysize": {"type": "int"},
            "keytype": {
                "choices": ["KSK", "KeySigningKey", "ZSK", "ZoneSigningKey"],
                "type": "str",
            },
            "notificationperiod": {"type": "int"},
            "password": {"type": "str"},
            "privatekey": {"type": "str"},
            "publickey": {"type": "str"},
            "src": {"type": "str"},
            "ttl": {"type": "int"},
            "units1": {"choices": ["MINUTES", "HOURS", "DAYS"], "type": "str"},
            "units2": {"choices": ["MINUTES", "HOURS", "DAYS"], "type": "str"},
            "zonename": {"type": "str"},
        },
        "update_payload_keys": [
            "keyname",
            "expires",
            "notificationperiod",
            "ttl",
            "units1",
            "units2",
        ],
    },
    "dnsmxrec": {
        "add_payload_keys": ["domain", "mx", "pref", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["mx", "ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": [],
        "primary_key": "domain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "mx": {"type": "str"},
            "nodeid": {"type": "int"},
            "pref": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": ["domain", "mx", "pref", "ttl"],
    },
    "dnsnameserver": {
        "add_payload_keys": ["ip", "dnsvservername", "local", "type", "dnsprofilename"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["dnsvservername", "type"],
        "disable_payload_keys": ["ip", "dnsvservername", "type"],
        "enable_payload_keys": ["ip", "dnsvservername", "type"],
        "get_arg_keys": ["dnsvservername"],
        "immutable_keys": ["local", "dnsvservername"],
        "primary_key": "ip",
        "readwrite_arguments": {
            "dnsprofilename": {"type": "str"},
            "dnsvservername": {"type": "str"},
            "ip": {"type": "str"},
            "local": {"type": "bool"},
            "type": {"choices": ["UDP", "TCP", "UDP_TCP"], "type": "str"},
        },
        "update_payload_keys": ["ip", "dnsprofilename", "type"],
    },
    "dnsnaptrrec": {
        "add_payload_keys": [
            "domain",
            "order",
            "preference",
            "flags",
            "services",
            "regexp",
            "replacement",
            "ttl",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [
            "order",
            "recordid",
            "ecssubnet",
            "preference",
            "flags",
            "services",
            "regexp",
            "replacement",
        ],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": [
            "order",
            "domain",
            "replacement",
            "services",
            "preference",
            "ttl",
            "regexp",
            "flags",
        ],
        "primary_key": "domain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "flags": {"type": "str"},
            "nodeid": {"type": "int"},
            "order": {"type": "int"},
            "preference": {"type": "int"},
            "recordid": {"type": "int"},
            "regexp": {"type": "str"},
            "replacement": {"type": "str"},
            "services": {"type": "str"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnsnsrec": {
        "add_payload_keys": ["domain", "nameserver", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["nameserver", "ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["nameserver", "domain", "ttl"],
        "primary_key": "domain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "nameserver": {"type": "str"},
            "nodeid": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnsparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "cacheecszeroprefix": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cachehitbypass": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cachenoexpire": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cacherecords": {"choices": [True, False], "type": "str"},
            "dns64timeout": {"type": "int"},
            "dnsrootreferral": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnssec": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ecsmaxsubnets": {"type": "int"},
            "maxcachesize": {"type": "int"},
            "maxnegativecachesize": {"type": "int"},
            "maxnegcachettl": {"type": "int"},
            "maxpipeline": {"type": "int"},
            "maxttl": {"type": "int"},
            "maxudppacketsize": {"type": "int"},
            "minttl": {"type": "int"},
            "namelookuppriority": {"choices": ["WINS", "DNS"], "type": "str"},
            "nxdomainratelimitthreshold": {"type": "int"},
            "recursion": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "resolutionorder": {
                "choices": [
                    "OnlyAQuery",
                    "OnlyAAAAQuery",
                    "AThenAAAAQuery",
                    "AAAAThenAQuery",
                ],
                "type": "str",
            },
            "retries": {"type": "int"},
            "splitpktqueryprocessing": {"choices": ["ALLOW", "DROP"], "type": "str"},
        },
        "update_payload_keys": [
            "retries",
            "minttl",
            "maxttl",
            "cacherecords",
            "namelookuppriority",
            "recursion",
            "resolutionorder",
            "dnssec",
            "maxpipeline",
            "dnsrootreferral",
            "dns64timeout",
            "ecsmaxsubnets",
            "maxnegcachettl",
            "cachehitbypass",
            "maxcachesize",
            "maxnegativecachesize",
            "cachenoexpire",
            "splitpktqueryprocessing",
            "cacheecszeroprefix",
            "maxudppacketsize",
            "nxdomainratelimitthreshold",
        ],
    },
    "dnspolicy": {
        "add_payload_keys": ["name", "rule", "actionname", "logaction"],
        "bindings": ["dnspolicylabel_dnspolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "actionname": {"type": "str"},
            "cachebypass": {"choices": [True, False], "type": "str"},
            "dnspolicylabel_dnspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "drop": {"choices": [True, False], "type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "preferredlocation": {"type": "str"},
            "preferredloclist": {"type": "list"},
            "rule": {"type": "str"},
            "viewname": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "actionname", "logaction"],
    },
    "dnspolicy64": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "dnspolicylabel": {
        "add_payload_keys": ["labelname", "transform"],
        "bindings": ["dnspolicylabel_dnspolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "transform"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "dnspolicylabel_dnspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "transform": {"choices": ["dns_req", "dns_res"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnspolicylabel_dnspolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "dnsprofile": {
        "add_payload_keys": [
            "dnsprofilename",
            "dnsquerylogging",
            "dnsanswerseclogging",
            "dnsextendedlogging",
            "dnserrorlogging",
            "cacherecords",
            "cachenegativeresponses",
            "dropmultiqueryrequest",
            "cacheecsresponses",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "dnsprofilename",
        "readwrite_arguments": {
            "cacheecsresponses": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cachenegativeresponses": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "cacherecords": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsanswerseclogging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnserrorlogging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsextendedlogging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsprofilename": {"type": "str"},
            "dnsquerylogging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropmultiqueryrequest": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "dnsprofilename",
            "dnsquerylogging",
            "dnsanswerseclogging",
            "dnsextendedlogging",
            "dnserrorlogging",
            "cacherecords",
            "cachenegativeresponses",
            "dropmultiqueryrequest",
            "cacheecsresponses",
        ],
    },
    "dnsptrrec": {
        "add_payload_keys": ["reversedomain", "domain", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ecssubnet", "domain"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["domain", "ttl", "reversedomain"],
        "primary_key": "reversedomain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "nodeid": {"type": "int"},
            "reversedomain": {"type": "str"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnssoarec": {
        "add_payload_keys": [
            "domain",
            "originserver",
            "contact",
            "serial",
            "refresh",
            "retry",
            "expire",
            "minimum",
            "ttl",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": [],
        "primary_key": "domain",
        "readwrite_arguments": {
            "contact": {"type": "str"},
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "expire": {"type": "int"},
            "minimum": {"type": "int"},
            "nodeid": {"type": "int"},
            "originserver": {"type": "str"},
            "refresh": {"type": "int"},
            "retry": {"type": "int"},
            "serial": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [
            "domain",
            "originserver",
            "contact",
            "serial",
            "refresh",
            "retry",
            "expire",
            "minimum",
            "ttl",
        ],
    },
    "dnssrvrec": {
        "add_payload_keys": ["domain", "target", "priority", "weight", "port", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["target", "ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["target", "type"],
        "immutable_keys": [],
        "primary_key": "domain",
        "readwrite_arguments": {
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "nodeid": {"type": "int"},
            "port": {"type": "int"},
            "priority": {"type": "int"},
            "target": {"type": "str"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "domain",
            "target",
            "priority",
            "weight",
            "port",
            "ttl",
        ],
    },
    "dnssuffix": {
        "add_payload_keys": ["dnssuffix"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["dnssuffix"],
        "primary_key": "dnssuffix",
        "readwrite_arguments": {"Dnssuffix": {"type": "str"}},
        "update_payload_keys": [],
    },
    "dnstxtrec": {
        "add_payload_keys": ["domain", "string", "ttl"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["string", "recordid", "ecssubnet"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": ["domain", "string", "ttl"],
        "primary_key": "domain",
        "readwrite_arguments": {
            "String": {"type": "list"},
            "domain": {"type": "str"},
            "ecssubnet": {"type": "str"},
            "nodeid": {"type": "int"},
            "recordid": {"type": "int"},
            "ttl": {"type": "int"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "dnsview": {
        "add_payload_keys": ["viewname"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["viewname"],
        "primary_key": "viewname",
        "readwrite_arguments": {"viewname": {"type": "str"}},
        "update_payload_keys": [],
    },
    "dnszone": {
        "add_payload_keys": ["zonename", "proxymode", "dnssecoffload", "nsec"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": [],
        "primary_key": "zonename",
        "readwrite_arguments": {
            "dnssecoffload": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "keyname": {"type": "list"},
            "nsec": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "proxymode": {"choices": [True, False], "type": "str"},
            "type": {"choices": ["ALL", "ADNS", "PROXY"], "type": "str"},
            "zonename": {"type": "str"},
        },
        "update_payload_keys": ["zonename", "proxymode", "dnssecoffload", "nsec"],
    },
    "endpointinfo": {
        "add_payload_keys": [
            "endpointkind",
            "endpointname",
            "endpointmetadata",
            "endpointlabelsjson",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["endpointname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["endpointname"],
        "immutable_keys": [],
        "primary_key": "endpointkind",
        "readwrite_arguments": {
            "endpointkind": {"choices": ["IP"], "type": "str"},
            "endpointlabelsjson": {"type": "str"},
            "endpointmetadata": {"type": "str"},
            "endpointname": {"type": "str"},
        },
        "update_payload_keys": [
            "endpointkind",
            "endpointname",
            "endpointmetadata",
            "endpointlabelsjson",
        ],
    },
    "feoaction": {
        "add_payload_keys": [
            "name",
            "pageextendcache",
            "imgshrinktoattrib",
            "imggiftopng",
            "imgtowebp",
            "imgtojpegxr",
            "imginline",
            "cssimginline",
            "jpgoptimize",
            "imglazyload",
            "cssminify",
            "cssinline",
            "csscombine",
            "convertimporttolink",
            "jsminify",
            "jsinline",
            "htmlminify",
            "cssmovetohead",
            "jsmovetoend",
            "domainsharding",
            "clientsidemeasurements",
            "cachemaxage",
            "dnsshards",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "cachemaxage": {"type": "int"},
            "clientsidemeasurements": {"type": "bool"},
            "convertimporttolink": {"type": "bool"},
            "csscombine": {"type": "bool"},
            "cssimginline": {"type": "bool"},
            "cssinline": {"type": "bool"},
            "cssminify": {"type": "bool"},
            "cssmovetohead": {"type": "bool"},
            "dnsshards": {"type": "list"},
            "domainsharding": {"type": "str"},
            "htmlminify": {"type": "bool"},
            "imggiftopng": {"type": "bool"},
            "imginline": {"type": "bool"},
            "imglazyload": {"type": "bool"},
            "imgshrinktoattrib": {"type": "bool"},
            "imgtojpegxr": {"type": "bool"},
            "imgtowebp": {"type": "bool"},
            "jpgoptimize": {"type": "bool"},
            "jsinline": {"type": "bool"},
            "jsminify": {"type": "bool"},
            "jsmovetoend": {"type": "bool"},
            "name": {"type": "str"},
            "pageextendcache": {"type": "bool"},
        },
        "update_payload_keys": [
            "name",
            "pageextendcache",
            "imgshrinktoattrib",
            "imggiftopng",
            "imgtowebp",
            "imgtojpegxr",
            "imginline",
            "cssimginline",
            "jpgoptimize",
            "imglazyload",
            "cssminify",
            "cssinline",
            "csscombine",
            "convertimporttolink",
            "jsminify",
            "jsinline",
            "htmlminify",
            "cssmovetohead",
            "jsmovetoend",
            "domainsharding",
            "clientsidemeasurements",
            "cachemaxage",
            "dnsshards",
        ],
    },
    "feoglobal_feopolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "type",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "NONE",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "feoparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "cssinlinethressize": {"type": "int"},
            "imginlinethressize": {"type": "int"},
            "jpegqualitypercent": {"type": "int"},
            "jsinlinethressize": {"type": "int"},
        },
        "update_payload_keys": [
            "jpegqualitypercent",
            "cssinlinethressize",
            "jsinlinethressize",
            "imginlinethressize",
        ],
    },
    "feopolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "fis": {
        "add_payload_keys": ["name", "ownernode"],
        "bindings": ["fis_channel_binding", "fis_interface_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "ownernode"],
        "primary_key": "name",
        "readwrite_arguments": {
            "fis_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "fis_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "ownernode": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "fis_channel_binding": {
        "add_payload_keys": ["name", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ifnum": {"type": "str"},
            "name": {"type": "str"},
            "ownernode": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "fis_interface_binding": {
        "add_payload_keys": ["name", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ifnum": {"type": "str"},
            "name": {"type": "str"},
            "ownernode": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "forwardingsession": {
        "add_payload_keys": [
            "name",
            "network",
            "acl6name",
            "aclname",
            "td",
            "connfailover",
            "sourceroutecache",
            "processlocal",
            "netmask",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["netmask", "network", "td"],
        "primary_key": "name",
        "readwrite_arguments": {
            "acl6name": {"type": "str"},
            "aclname": {"type": "str"},
            "connfailover": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "processlocal": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sourceroutecache": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "connfailover",
            "sourceroutecache",
            "processlocal",
            "acl6name",
            "aclname",
        ],
    },
    "gslbparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "automaticconfigsync": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropldnsreq": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gslbconfigsyncmonitor": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "gslbsvcstatedelaytime": {"type": "int"},
            "gslbsyncinterval": {"type": "int"},
            "gslbsynclocfiles": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gslbsyncmode": {"choices": ["IncrementalSync", "FullSync"], "type": "str"},
            "gslbsyncsaveconfigcommand": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "ldnsentrytimeout": {"type": "int"},
            "ldnsmask": {"type": "str"},
            "ldnsprobeorder": {"choices": ["PING", "DNS", "TCP"], "type": "list"},
            "mepkeepalivetimeout": {"type": "int"},
            "rtttolerance": {"type": "int"},
            "svcstatelearningtime": {"type": "int"},
            "undefaction": {"type": "str"},
            "v6ldnsmasklen": {"type": "int"},
        },
        "update_payload_keys": [
            "ldnsentrytimeout",
            "rtttolerance",
            "ldnsmask",
            "v6ldnsmasklen",
            "ldnsprobeorder",
            "dropldnsreq",
            "gslbsvcstatedelaytime",
            "svcstatelearningtime",
            "automaticconfigsync",
            "mepkeepalivetimeout",
            "gslbsyncinterval",
            "gslbsyncmode",
            "gslbsynclocfiles",
            "gslbconfigsyncmonitor",
            "gslbsyncsaveconfigcommand",
            "undefaction",
        ],
    },
    "gslbservice": {
        "add_payload_keys": [
            "servicename",
            "cnameentry",
            "ip",
            "servername",
            "servicetype",
            "port",
            "publicip",
            "publicport",
            "maxclient",
            "healthmonitor",
            "sitename",
            "cip",
            "cipheader",
            "sitepersistence",
            "cookietimeout",
            "siteprefix",
            "clttimeout",
            "svrtimeout",
            "maxbandwidth",
            "downstateflush",
            "maxaaausers",
            "monthreshold",
            "hashid",
            "comment",
            "appflowlog",
            "naptrreplacement",
            "naptrorder",
            "naptrservices",
            "naptrdomainttl",
            "naptrpreference",
            "nodefaultbindings",
        ],
        "bindings": [
            "gslbservice_dnsview_binding",
            "gslbservice_lbmonitor_binding",
            "gslbservicegroup_lbmonitor_binding",
            "gslbservicegroup_gslbservicegroupmember_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "servicetype",
            "cnameentry",
            "ip",
            "svrtimeout",
            "cookietimeout",
            "servername",
            "nodefaultbindings",
            "clttimeout",
            "port",
            "sitename",
        ],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipheader": {"type": "str"},
            "clttimeout": {"type": "int"},
            "cnameentry": {"type": "str"},
            "comment": {"type": "str"},
            "cookietimeout": {"type": "int"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gslbservice_dnsview_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbservice_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbservicegroup_gslbservicegroupmember_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbservicegroup_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "hashid": {"type": "int"},
            "healthmonitor": {"choices": [True, False], "type": "str"},
            "ip": {"type": "str"},
            "ipaddress": {"type": "str"},
            "maxaaausers": {"type": "int"},
            "maxbandwidth": {"type": "int"},
            "maxclient": {"type": "int"},
            "monitor_name_svc": {"type": "str"},
            "monthreshold": {"type": "int"},
            "naptrdomainttl": {"type": "int"},
            "naptrorder": {"type": "int"},
            "naptrpreference": {"type": "int"},
            "naptrreplacement": {"type": "str"},
            "naptrservices": {"type": "str"},
            "newname": {"type": "str"},
            "port": {"type": "int"},
            "publicip": {"type": "str"},
            "publicport": {"type": "int"},
            "servername": {"type": "str"},
            "servicename": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "NNTP",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "RADIUS",
                    "RDP",
                    "RTSP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                ],
                "type": "str",
            },
            "sitename": {"type": "str"},
            "sitepersistence": {
                "choices": ["ConnectionProxy", "HTTPRedirect", "NONE"],
                "type": "str",
            },
            "siteprefix": {"type": "str"},
            "svrtimeout": {"type": "int"},
            "viewip": {"type": "str"},
            "viewname": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "servicename",
            "ipaddress",
            "publicip",
            "publicport",
            "cip",
            "sitepersistence",
            "siteprefix",
            "maxclient",
            "healthmonitor",
            "maxbandwidth",
            "downstateflush",
            "maxaaausers",
            "viewname",
            "monthreshold",
            "weight",
            "hashid",
            "comment",
            "appflowlog",
            "naptrorder",
            "naptrpreference",
            "naptrservices",
            "naptrreplacement",
            "cipheader",
            "viewip",
            "monitor_name_svc",
            "naptrdomainttl",
        ],
    },
    "gslbservice_dnsview_binding": {
        "add_payload_keys": ["servicename", "viewname", "viewip"],
        "bindprimary_key": "viewname",
        "delete_arg_keys": ["viewname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["viewname"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "servicename": {"type": "str"},
            "viewip": {"type": "str"},
            "viewname": {"type": "str"},
        },
        "update_payload_keys": ["viewname", "viewip", "viewname"],
    },
    "gslbservice_lbmonitor_binding": {
        "add_payload_keys": ["servicename", "monitor_name", "monstate", "weight"],
        "bindprimary_key": "monitor_name",
        "delete_arg_keys": ["monitor_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["monitor_name"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "monitor_name": {"type": "str"},
            "monstate": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "servicename": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "gslbservicegroup": {
        "add_payload_keys": [
            "servicegroupname",
            "servicetype",
            "maxclient",
            "cip",
            "cipheader",
            "healthmonitor",
            "clttimeout",
            "svrtimeout",
            "maxbandwidth",
            "monthreshold",
            "downstateflush",
            "comment",
            "appflowlog",
            "autoscale",
            "sitename",
            "sitepersistence",
            "nodefaultbindings",
            "autodelayedtrofs",
        ],
        "bindings": [
            "gslbservicegroup_lbmonitor_binding",
            "gslbservicegroup_gslbservicegroupmember_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [
            "servicegroupname",
            "servername",
            "port",
            "delay",
            "graceful",
        ],
        "enable_payload_keys": ["servicegroupname", "servername", "port"],
        "get_arg_keys": ["includemembers"],
        "immutable_keys": [
            "servicetype",
            "autodelayedtrofs",
            "autoscale",
            "nodefaultbindings",
            "sitename",
        ],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "autoscale": {"choices": ["DISABLED", "DNS"], "type": "str"},
            "cip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipheader": {"type": "str"},
            "clttimeout": {"type": "int"},
            "comment": {"type": "str"},
            "delay": {"type": "int"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dup_weight": {"type": "int"},
            "graceful": {"choices": [True, False], "type": "str"},
            "gslbservicegroup_gslbservicegroupmember_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbservicegroup_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "hashid": {"type": "int"},
            "healthmonitor": {"choices": [True, False], "type": "str"},
            "includemembers": {"type": "bool"},
            "maxbandwidth": {"type": "int"},
            "maxclient": {"type": "int"},
            "monitor_name_svc": {"type": "str"},
            "monthreshold": {"type": "int"},
            "newname": {"type": "str"},
            "order": {"type": "int"},
            "port": {"type": "int"},
            "publicip": {"type": "str"},
            "publicport": {"type": "int"},
            "servername": {"type": "str"},
            "servicegroupname": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "NNTP",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "RADIUS",
                    "RDP",
                    "RTSP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                ],
                "type": "str",
            },
            "sitename": {"type": "str"},
            "sitepersistence": {
                "choices": ["ConnectionProxy", "HTTPRedirect", "NONE"],
                "type": "str",
            },
            "siteprefix": {"type": "str"},
            "svrtimeout": {"type": "int"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "servicegroupname",
            "servername",
            "monitor_name_svc",
            "maxclient",
            "healthmonitor",
            "cip",
            "clttimeout",
            "svrtimeout",
            "maxbandwidth",
            "monthreshold",
            "downstateflush",
            "comment",
            "appflowlog",
            "sitepersistence",
            "port",
            "weight",
            "hashid",
            "publicip",
            "publicport",
            "siteprefix",
            "order",
            "dup_weight",
            "cipheader",
        ],
    },
    "gslbservicegroup_gslbservicegroupmember_binding": {
        "add_payload_keys": [
            "servicegroupname",
            "ip",
            "servername",
            "port",
            "weight",
            "hashid",
            "publicip",
            "publicport",
            "siteprefix",
            "order",
        ],
        "bindprimary_key": "ip",
        "delete_arg_keys": ["ip", "servername", "port"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ip", "servername", "port"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "hashid": {"type": "int"},
            "ip": {"type": "str"},
            "order": {"type": "int"},
            "port": {"type": "int"},
            "publicip": {"type": "str"},
            "publicport": {"type": "int"},
            "servername": {"type": "str"},
            "servicegroupname": {"type": "str"},
            "siteprefix": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "gslbservicegroup_lbmonitor_binding": {
        "add_payload_keys": [
            "servicegroupname",
            "port",
            "monitor_name",
            "weight",
            "hashid",
            "publicip",
            "publicport",
            "siteprefix",
            "order",
            "monstate",
            "passive",
        ],
        "bindprimary_key": "monitor_name",
        "delete_arg_keys": ["port", "monitor_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["port", "monitor_name"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "hashid": {"type": "int"},
            "monitor_name": {"type": "str"},
            "monstate": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "order": {"type": "int"},
            "passive": {"type": "bool"},
            "port": {"type": "int"},
            "publicip": {"type": "str"},
            "publicport": {"type": "int"},
            "servicegroupname": {"type": "str"},
            "siteprefix": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "gslbsite": {
        "add_payload_keys": [
            "sitename",
            "sitetype",
            "siteipaddress",
            "publicip",
            "metricexchange",
            "nwmetricexchange",
            "sessionexchange",
            "triggermonitor",
            "parentsite",
            "clip",
            "naptrreplacementsuffix",
            "backupparentlist",
            "publicclip",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "parentsite",
            "clip",
            "publicclip",
            "siteipaddress",
            "publicip",
            "sitetype",
        ],
        "primary_key": "sitename",
        "readwrite_arguments": {
            "backupparentlist": {"type": "list"},
            "clip": {"type": "str"},
            "metricexchange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "naptrreplacementsuffix": {"type": "str"},
            "nwmetricexchange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "parentsite": {"type": "str"},
            "publicclip": {"type": "str"},
            "publicip": {"type": "str"},
            "sessionexchange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "siteipaddress": {"type": "str"},
            "sitename": {"type": "str"},
            "sitetype": {"choices": ["REMOTE", "LOCAL"], "type": "str"},
            "triggermonitor": {
                "choices": ["ALWAYS", "MEPDOWN", "MEPDOWN_SVCDOWN"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "sitename",
            "metricexchange",
            "nwmetricexchange",
            "sessionexchange",
            "triggermonitor",
            "naptrreplacementsuffix",
            "backupparentlist",
        ],
    },
    "gslbvserver": {
        "add_payload_keys": [
            "name",
            "servicetype",
            "dnsrecordtype",
            "lbmethod",
            "backuplbmethod",
            "netmask",
            "v6netmasklen",
            "rule",
            "tolerance",
            "persistencetype",
            "persistenceid",
            "persistmask",
            "v6persistmasklen",
            "timeout",
            "edr",
            "ecs",
            "ecsaddrvalidation",
            "mir",
            "disableprimaryondown",
            "dynamicweight",
            "considereffectivestate",
            "comment",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "sothreshold",
            "sobackupaction",
            "appflowlog",
            "nodefaultbindings",
            "toggleorder",
            "orderthreshold",
        ],
        "bindings": [
            "gslbvserver_gslbservice_binding",
            "gslbvserver_gslbservicegroup_binding",
            "gslbvserver_spilloverpolicy_binding",
            "gslbvserver_lbpolicy_binding",
            "gslbvserver_domain_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": ["servicetype", "nodefaultbindings"],
        "primary_key": "name",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "backupip": {"type": "str"},
            "backuplbmethod": {
                "choices": [
                    "ROUNDROBIN",
                    "LEASTCONNECTION",
                    "LEASTRESPONSETIME",
                    "SOURCEIPHASH",
                    "LEASTBANDWIDTH",
                    "LEASTPACKETS",
                    "STATICPROXIMITY",
                    "RTT",
                    "CUSTOMLOAD",
                    "API",
                ],
                "type": "str",
            },
            "backupsessiontimeout": {"type": "int"},
            "backupvserver": {"type": "str"},
            "comment": {"type": "str"},
            "considereffectivestate": {
                "choices": ["NONE", "STATE_ONLY"],
                "type": "str",
            },
            "cookie_domain": {"type": "str"},
            "cookietimeout": {"type": "int"},
            "disableprimaryondown": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsrecordtype": {
                "choices": ["A", "AAAA", "CNAME", "NAPTR"],
                "type": "str",
            },
            "domainname": {"type": "str"},
            "dynamicweight": {
                "choices": ["SERVICECOUNT", "SERVICEWEIGHT", "DISABLED"],
                "type": "str",
            },
            "ecs": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ecsaddrvalidation": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "edr": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gslbvserver_domain_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbvserver_gslbservice_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbvserver_gslbservicegroup_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbvserver_lbpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "gslbvserver_spilloverpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "iptype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "lbmethod": {
                "choices": [
                    "ROUNDROBIN",
                    "LEASTCONNECTION",
                    "LEASTRESPONSETIME",
                    "SOURCEIPHASH",
                    "LEASTBANDWIDTH",
                    "LEASTPACKETS",
                    "STATICPROXIMITY",
                    "RTT",
                    "CUSTOMLOAD",
                    "API",
                ],
                "type": "str",
            },
            "mir": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
            "newname": {"type": "str"},
            "order": {"type": "int"},
            "orderthreshold": {"type": "int"},
            "persistenceid": {"type": "int"},
            "persistencetype": {"choices": ["SOURCEIP", "NONE"], "type": "str"},
            "persistmask": {"type": "str"},
            "rule": {"type": "str"},
            "servicegroupname": {"type": "str"},
            "servicename": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "NNTP",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "RADIUS",
                    "RDP",
                    "RTSP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                ],
                "type": "str",
            },
            "sitedomainttl": {"type": "int"},
            "sobackupaction": {
                "choices": ["DROP", "ACCEPT", "REDIRECT"],
                "type": "str",
            },
            "somethod": {
                "choices": [
                    "CONNECTION",
                    "DYNAMICCONNECTION",
                    "BANDWIDTH",
                    "HEALTH",
                    "NONE",
                ],
                "type": "str",
            },
            "sopersistence": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sopersistencetimeout": {"type": "int"},
            "sothreshold": {"type": "int"},
            "timeout": {"type": "int"},
            "toggleorder": {"choices": ["ASCENDING", "DESCENDING"], "type": "str"},
            "tolerance": {"type": "int"},
            "ttl": {"type": "int"},
            "v6netmasklen": {"type": "int"},
            "v6persistmasklen": {"type": "int"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "dnsrecordtype",
            "backupvserver",
            "lbmethod",
            "netmask",
            "v6netmasklen",
            "tolerance",
            "persistencetype",
            "persistenceid",
            "persistmask",
            "v6persistmasklen",
            "timeout",
            "edr",
            "ecs",
            "ecsaddrvalidation",
            "mir",
            "disableprimaryondown",
            "dynamicweight",
            "considereffectivestate",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "sothreshold",
            "sobackupaction",
            "servicename",
            "servicegroupname",
            "domainname",
            "comment",
            "appflowlog",
            "rule",
            "toggleorder",
            "orderthreshold",
            "order",
            "backuplbmethod",
            "weight",
            "ttl",
            "backupip",
            "cookie_domain",
            "cookietimeout",
            "sitedomainttl",
        ],
    },
    "gslbvserver_domain_binding": {
        "add_payload_keys": [
            "name",
            "domainname",
            "order",
            "ttl",
            "backupip",
            "cookie_domain",
            "cookietimeout",
            "sitedomainttl",
        ],
        "bindprimary_key": "domainname",
        "delete_arg_keys": ["domainname", "backupipflag", "cookie_domainflag"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["domainname", "backupipflag", "cookie_domainflag"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "backupip": {"type": "str"},
            "backupipflag": {"type": "bool"},
            "cookie_domain": {"type": "str"},
            "cookie_domainflag": {"type": "bool"},
            "cookietimeout": {"type": "int"},
            "domainname": {"type": "str"},
            "name": {"type": "str"},
            "order": {"type": "int"},
            "sitedomainttl": {"type": "int"},
            "ttl": {"type": "int"},
        },
        "update_payload_keys": [
            "domainname",
            "order",
            "ttl",
            "backupip",
            "cookie_domain",
            "cookietimeout",
            "sitedomainttl",
            "domainname",
        ],
    },
    "gslbvserver_gslbservice_binding": {
        "add_payload_keys": ["name", "servicename", "order", "weight"],
        "bindprimary_key": "servicename",
        "delete_arg_keys": ["servicename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servicename"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "domainname": {"type": "str"},
            "name": {"type": "str"},
            "order": {"type": "int"},
            "servicename": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": ["servicename", "order", "weight", "servicename"],
    },
    "gslbvserver_gslbservicegroup_binding": {
        "add_payload_keys": ["name", "servicegroupname", "order"],
        "bindprimary_key": "servicegroupname",
        "delete_arg_keys": ["servicegroupname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servicegroupname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "order": {"type": "int"},
            "servicegroupname": {"type": "str"},
        },
        "update_payload_keys": ["servicegroupname", "order", "servicegroupname"],
    },
    "gslbvserver_lbpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "type",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "gslbvserver_spilloverpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "type",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "hanode": {
        "add_payload_keys": ["id", "ipaddress", "inc"],
        "bindings": ["hanode_routemonitor6_binding", "hanode_routemonitor_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["inc", "ipaddress"],
        "primary_key": "id",
        "readwrite_arguments": {
            "deadinterval": {"type": "int"},
            "failsafe": {"choices": [True, False], "type": "str"},
            "hanode_routemonitor6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "hanode_routemonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "haprop": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hastatus": {
                "choices": ["ENABLED", "STAYSECONDARY", "DISABLED", "STAYPRIMARY"],
                "type": "str",
            },
            "hasync": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hellointerval": {"type": "int"},
            "id": {"type": "int"},
            "inc": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ipaddress": {"type": "str"},
            "maxflips": {"type": "int"},
            "maxfliptime": {"type": "int"},
            "syncstatusstrictmode": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "syncvlan": {"type": "int"},
        },
        "update_payload_keys": [
            "id",
            "hastatus",
            "hasync",
            "haprop",
            "hellointerval",
            "deadinterval",
            "failsafe",
            "maxflips",
            "maxfliptime",
            "syncvlan",
            "syncstatusstrictmode",
        ],
    },
    "hanode_routemonitor6_binding": {
        "add_payload_keys": ["id", "routemonitor", "netmask"],
        "bindprimary_key": "routemonitor",
        "delete_arg_keys": ["routemonitor", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["routemonitor", "netmask"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "netmask": {"type": "str"},
            "routemonitor": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "hanode_routemonitor_binding": {
        "add_payload_keys": ["id", "routemonitor", "netmask"],
        "bindprimary_key": "routemonitor",
        "delete_arg_keys": ["routemonitor", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["routemonitor", "netmask"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "netmask": {"type": "str"},
            "routemonitor": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "icaaccessprofile": {
        "add_payload_keys": [
            "name",
            "connectclientlptports",
            "clientaudioredirection",
            "localremotedatasharing",
            "clientclipboardredirection",
            "clientcomportredirection",
            "clientdriveredirection",
            "clientprinterredirection",
            "multistream",
            "clientusbdriveredirection",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientaudioredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "clientclipboardredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "clientcomportredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "clientdriveredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "clientprinterredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "clientusbdriveredirection": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "connectclientlptports": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "localremotedatasharing": {
                "choices": ["DEFAULT", "DISABLED"],
                "type": "str",
            },
            "multistream": {"choices": ["DEFAULT", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "connectclientlptports",
            "clientaudioredirection",
            "localremotedatasharing",
            "clientclipboardredirection",
            "clientcomportredirection",
            "clientdriveredirection",
            "clientprinterredirection",
            "multistream",
            "clientusbdriveredirection",
        ],
    },
    "icaaction": {
        "add_payload_keys": ["name", "accessprofilename", "latencyprofilename"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "accessprofilename": {"type": "str"},
            "latencyprofilename": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": ["name", "accessprofilename", "latencyprofilename"],
    },
    "icaglobal_icapolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {"choices": ["ICA_REQ_OVERRIDE", "ICA_REQ_DEFAULT"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "icalatencyprofile": {
        "add_payload_keys": [
            "name",
            "l7latencymonitoring",
            "l7latencythresholdfactor",
            "l7latencywaittime",
            "l7latencynotifyinterval",
            "l7latencymaxnotifycount",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "l7latencymaxnotifycount": {"type": "int"},
            "l7latencymonitoring": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "l7latencynotifyinterval": {"type": "int"},
            "l7latencythresholdfactor": {"type": "int"},
            "l7latencywaittime": {"type": "int"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "l7latencymonitoring",
            "l7latencythresholdfactor",
            "l7latencywaittime",
            "l7latencynotifyinterval",
            "l7latencymaxnotifycount",
        ],
    },
    "icaparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "edtpmtuddf": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "edtpmtuddftimeout": {"type": "int"},
            "enablesronhafailover": {"choices": [True, False], "type": "str"},
            "hdxinsightnonnsap": {"choices": [True, False], "type": "str"},
            "l7latencyfrequency": {"type": "int"},
        },
        "update_payload_keys": [
            "enablesronhafailover",
            "hdxinsightnonnsap",
            "edtpmtuddf",
            "edtpmtuddftimeout",
            "l7latencyfrequency",
        ],
    },
    "icapolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment", "logaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment", "logaction"],
    },
    "inat": {
        "add_payload_keys": [
            "name",
            "publicip",
            "privateip",
            "mode",
            "tcpproxy",
            "ftp",
            "tftp",
            "usip",
            "usnip",
            "proxyip",
            "useproxyport",
            "td",
            "connfailover",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["publicip", "td"],
        "primary_key": "name",
        "readwrite_arguments": {
            "connfailover": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ftp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mode": {"choices": ["STATELESS"], "type": "str"},
            "name": {"type": "str"},
            "privateip": {"type": "str"},
            "proxyip": {"type": "str"},
            "publicip": {"type": "str"},
            "tcpproxy": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
            "tftp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "useproxyport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "usip": {"choices": [True, False], "type": "str"},
            "usnip": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "privateip",
            "tcpproxy",
            "ftp",
            "tftp",
            "usip",
            "usnip",
            "proxyip",
            "useproxyport",
            "connfailover",
            "mode",
        ],
    },
    "interfacepair": {
        "add_payload_keys": ["id", "ifnum"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["id", "ifnum"],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "ifnum": {"type": "list"}},
        "update_payload_keys": [],
    },
    "ip6tunnel": {
        "add_payload_keys": ["name", "remote", "local", "ownergroup"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["remote"],
        "immutable_keys": ["local", "name", "remote", "ownergroup"],
        "primary_key": "name",
        "readwrite_arguments": {
            "local": {"type": "str"},
            "name": {"type": "str"},
            "ownergroup": {"type": "str"},
            "remote": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "ipsecalgprofile": {
        "add_payload_keys": [
            "name",
            "ikesessiontimeout",
            "espsessiontimeout",
            "espgatetimeout",
            "connfailover",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "connfailover": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "espgatetimeout": {"type": "int"},
            "espsessiontimeout": {"type": "int"},
            "ikesessiontimeout": {"type": "int"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ikesessiontimeout",
            "espsessiontimeout",
            "espgatetimeout",
            "connfailover",
        ],
    },
    "ipsecparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "encalgo": {"choices": ["AES", "AES192", "AES256"], "type": "list"},
            "hashalgo": {
                "choices": [
                    "HMAC_SHA1",
                    "HMAC_SHA256",
                    "HMAC_SHA384",
                    "HMAC_SHA512",
                    "HMAC_MD5",
                ],
                "type": "list",
            },
            "ikeretryinterval": {"type": "int"},
            "ikeversion": {"choices": ["V1", "V2"], "type": "str"},
            "lifetime": {"type": "int"},
            "livenesscheckinterval": {"type": "int"},
            "perfectforwardsecrecy": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "replaywindowsize": {"type": "int"},
            "retransmissiontime": {"type": "int"},
        },
        "update_payload_keys": [
            "ikeversion",
            "encalgo",
            "hashalgo",
            "lifetime",
            "livenesscheckinterval",
            "replaywindowsize",
            "ikeretryinterval",
            "perfectforwardsecrecy",
            "retransmissiontime",
        ],
    },
    "ipsecprofile": {
        "add_payload_keys": [
            "name",
            "ikeversion",
            "encalgo",
            "hashalgo",
            "lifetime",
            "psk",
            "publickey",
            "livenesscheckinterval",
            "replaywindowsize",
            "ikeretryinterval",
            "retransmissiontime",
            "perfectforwardsecrecy",
            "privatekey",
            "peerpublickey",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "ikeretryinterval",
            "name",
            "hashalgo",
            "perfectforwardsecrecy",
            "ikeversion",
            "publickey",
            "privatekey",
            "livenesscheckinterval",
            "peerpublickey",
            "psk",
            "replaywindowsize",
            "retransmissiontime",
            "encalgo",
            "lifetime",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "encalgo": {"choices": ["AES", "AES192", "AES256"], "type": "list"},
            "hashalgo": {
                "choices": [
                    "HMAC_SHA1",
                    "HMAC_SHA256",
                    "HMAC_SHA384",
                    "HMAC_SHA512",
                    "HMAC_MD5",
                ],
                "type": "list",
            },
            "ikeretryinterval": {"type": "int"},
            "ikeversion": {"choices": ["V1", "V2"], "type": "str"},
            "lifetime": {"type": "int"},
            "livenesscheckinterval": {"type": "int"},
            "name": {"type": "str"},
            "peerpublickey": {"type": "str"},
            "perfectforwardsecrecy": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "privatekey": {"type": "str"},
            "psk": {"type": "str"},
            "publickey": {"type": "str"},
            "replaywindowsize": {"type": "int"},
            "retransmissiontime": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "ipset": {
        "add_payload_keys": ["name", "td"],
        "bindings": ["ipset_nsip_binding", "ipset_nsip6_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "td"],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipset_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "ipset_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "ipset_nsip6_binding": {
        "add_payload_keys": ["name", "ipaddress"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"ipaddress": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "ipset_nsip_binding": {
        "add_payload_keys": ["name", "ipaddress"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"ipaddress": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "iptunnel": {
        "add_payload_keys": [
            "name",
            "remote",
            "remotesubnetmask",
            "local",
            "protocol",
            "vnid",
            "vlantagging",
            "destport",
            "tosinherit",
            "grepayload",
            "ipsecprofilename",
            "vlan",
            "ownergroup",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["remote", "remotesubnetmask"],
        "immutable_keys": [
            "vnid",
            "ownergroup",
            "protocol",
            "local",
            "vlan",
            "remotesubnetmask",
            "grepayload",
            "remote",
            "ipsecprofilename",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "destport": {"type": "int"},
            "grepayload": {
                "choices": ["ETHERNETwithDOT1Q", "ETHERNET", "IP"],
                "type": "str",
            },
            "ipsecprofilename": {"type": "str"},
            "local": {"type": "str"},
            "name": {"type": "str"},
            "ownergroup": {"type": "str"},
            "protocol": {
                "choices": ["IPIP", "GRE", "IPSEC", "UDP", "GENEVE"],
                "type": "str",
            },
            "remote": {"type": "str"},
            "remotesubnetmask": {"type": "str"},
            "tosinherit": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "vlan": {"type": "int"},
            "vlantagging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "vnid": {"type": "int"},
        },
        "update_payload_keys": ["name", "vlantagging", "destport", "tosinherit"],
    },
    "lbaction": {
        "add_payload_keys": ["name", "type", "value", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "type": {"choices": ["NOLBACTION", "SELECTIONORDER"], "type": "str"},
            "value": {"type": "list"},
        },
        "update_payload_keys": ["name", "value", "comment"],
    },
    "lbglobal_lbpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "type",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "OTHERTCP_REQ_OVERRIDE",
                    "OTHERTCP_REQ_DEFAULT",
                    "SIPUDP_REQ_OVERRIDE",
                    "SIPUDP_REQ_DEFAULT",
                    "SIPTCP_REQ_OVERRIDE",
                    "SIPTCP_REQ_DEFAULT",
                    "MSSQL_REQ_OVERRIDE",
                    "MSSQL_REQ_DEFAULT",
                    "MYSQL_REQ_OVERRIDE",
                    "MYSQL_REQ_DEFAULT",
                    "ORACLE_REQ_OVERRIDE",
                    "ORACLE_REQ_DEFAULT",
                    "NAT_REQ_OVERRIDE",
                    "NAT_REQ_DEFAULT",
                    "DIAMETER_REQ_OVERRIDE",
                    "DIAMETER_REQ_DEFAULT",
                    "RADIUS_REQ_OVERRIDE",
                    "RADIUS_REQ_DEFAULT",
                    "DNS_REQ_OVERRIDE",
                    "DNS_REQ_DEFAULT",
                    "MQTT_REQ_OVERRIDE",
                    "MQTT_REQ_DEFAULT",
                    "QUIC_OVERRIDE",
                    "QUIC_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "GSLB_REQ_OVERRIDE",
                    "GSLB_REQ_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "lbgroup": {
        "add_payload_keys": [
            "name",
            "persistencetype",
            "persistencebackup",
            "backuppersistencetimeout",
            "persistmask",
            "cookiename",
            "v6persistmasklen",
            "cookiedomain",
            "timeout",
            "rule",
            "mastervserver",
            "usevserverpersistency",
        ],
        "bindings": ["lbgroup_lbvserver_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "backuppersistencetimeout": {"type": "int"},
            "cookiedomain": {"type": "str"},
            "cookiename": {"type": "str"},
            "lbgroup_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "mastervserver": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "persistencebackup": {"choices": ["SOURCEIP", "NONE"], "type": "str"},
            "persistencetype": {
                "choices": ["SOURCEIP", "COOKIEINSERT", "RULE", "NONE"],
                "type": "str",
            },
            "persistmask": {"type": "str"},
            "rule": {"type": "str"},
            "timeout": {"type": "int"},
            "usevserverpersistency": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "v6persistmasklen": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "persistencetype",
            "persistencebackup",
            "backuppersistencetimeout",
            "persistmask",
            "cookiename",
            "v6persistmasklen",
            "cookiedomain",
            "timeout",
            "rule",
            "usevserverpersistency",
            "mastervserver",
        ],
    },
    "lbgroup_lbvserver_binding": {
        "add_payload_keys": ["name", "vservername"],
        "bindprimary_key": "vservername",
        "delete_arg_keys": ["vservername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vservername"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lbmetrictable": {
        "add_payload_keys": ["metrictable"],
        "bindings": ["lbmetrictable_metric_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "metrictable",
        "readwrite_arguments": {
            "Snmpoid": {"type": "str"},
            "lbmetrictable_metric_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "metric": {"type": "str"},
            "metrictable": {"type": "str"},
        },
        "update_payload_keys": ["metrictable", "metric", "snmpoid"],
    },
    "lbmetrictable_metric_binding": {
        "add_payload_keys": ["metrictable", "metric", "snmpoid"],
        "bindprimary_key": "metric",
        "delete_arg_keys": ["metric"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["metric"],
        "immutable_keys": [],
        "primary_key": "metrictable",
        "readwrite_arguments": {
            "Snmpoid": {"type": "str"},
            "metric": {"type": "str"},
            "metrictable": {"type": "str"},
        },
        "update_payload_keys": ["metric", "snmpoid", "metric"],
    },
    "lbmonitor": {
        "add_payload_keys": [
            "monitorname",
            "type",
            "action",
            "respcode",
            "httprequest",
            "rtsprequest",
            "customheaders",
            "maxforwards",
            "sipmethod",
            "sipuri",
            "sipreguri",
            "send",
            "recv",
            "query",
            "querytype",
            "scriptname",
            "scriptargs",
            "secureargs",
            "dispatcherip",
            "dispatcherport",
            "username",
            "password",
            "secondarypassword",
            "logonpointname",
            "lasversion",
            "radkey",
            "radnasid",
            "radnasip",
            "radaccounttype",
            "radframedip",
            "radapn",
            "radmsisdn",
            "radaccountsession",
            "lrtm",
            "deviation",
            "interval",
            "resptimeout",
            "resptimeoutthresh",
            "retries",
            "failureretries",
            "alertretries",
            "successretries",
            "downtime",
            "destip",
            "destport",
            "reverse",
            "transparent",
            "iptunnel",
            "tos",
            "tosid",
            "secure",
            "validatecred",
            "domain",
            "ipaddress",
            "group",
            "filename",
            "basedn",
            "binddn",
            "filter",
            "attribute",
            "database",
            "oraclesid",
            "sqlquery",
            "evalrule",
            "mssqlprotocolversion",
            "snmpoid",
            "snmpcommunity",
            "snmpthreshold",
            "snmpversion",
            "metrictable",
            "application",
            "sitepath",
            "storename",
            "storefrontacctservice",
            "netprofile",
            "originhost",
            "originrealm",
            "hostipaddress",
            "vendorid",
            "productname",
            "firmwarerevision",
            "authapplicationid",
            "acctapplicationid",
            "inbandsecurityid",
            "supportedvendorids",
            "vendorspecificvendorid",
            "kcdaccount",
            "storedb",
            "storefrontcheckbackendservices",
            "trofscode",
            "trofsstring",
            "sslprofile",
            "mqttclientidentifier",
            "mqttversion",
            "grpchealthcheck",
            "grpcstatuscode",
            "grpcservicename",
            "units1",
            "units3",
            "units4",
            "units2",
            "vendorspecificauthapplicationids",
            "vendorspecificacctapplicationids",
        ],
        "bindings": ["lbmonitor_sslcertkey_binding", "lbmonitor_metric_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": ["type"],
        "disable_payload_keys": ["servicename", "servicegroupname", "monitorname"],
        "enable_payload_keys": ["servicename", "servicegroupname", "monitorname"],
        "get_arg_keys": ["type"],
        "immutable_keys": [],
        "primary_key": "monitorname",
        "readwrite_arguments": {
            "Snmpoid": {"type": "str"},
            "acctapplicationid": {"type": "list"},
            "action": {"choices": ["NONE", "LOG", "DOWN"], "type": "str"},
            "alertretries": {"type": "int"},
            "application": {"type": "str"},
            "attribute": {"type": "str"},
            "authapplicationid": {"type": "list"},
            "basedn": {"type": "str"},
            "binddn": {"type": "str"},
            "customheaders": {"type": "str"},
            "database": {"type": "str"},
            "destip": {"type": "str"},
            "destport": {"type": "int"},
            "deviation": {"type": "int"},
            "dispatcherip": {"type": "str"},
            "dispatcherport": {"type": "int"},
            "domain": {"type": "str"},
            "downtime": {"type": "int"},
            "evalrule": {"type": "str"},
            "failureretries": {"type": "int"},
            "filename": {"type": "str"},
            "filter": {"type": "str"},
            "firmwarerevision": {"type": "int"},
            "group": {"type": "str"},
            "grpchealthcheck": {"choices": [True, False], "type": "str"},
            "grpcservicename": {"type": "str"},
            "grpcstatuscode": {"type": "list"},
            "hostipaddress": {"type": "str"},
            "hostname": {"type": "str"},
            "httprequest": {"type": "str"},
            "inbandsecurityid": {
                "choices": ["NO_INBAND_SECURITY", "TLS"],
                "type": "str",
            },
            "interval": {"type": "int"},
            "ipaddress": {"type": "list"},
            "iptunnel": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "lasversion": {"type": "str"},
            "lbmonitor_metric_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbmonitor_sslcertkey_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "logonpointname": {"type": "str"},
            "lrtm": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxforwards": {"type": "int"},
            "metric": {"type": "str"},
            "metrictable": {"type": "str"},
            "metricthreshold": {"type": "int"},
            "metricweight": {"type": "int"},
            "monitorname": {"type": "str"},
            "mqttclientidentifier": {"type": "str"},
            "mqttversion": {"type": "int"},
            "mssqlprotocolversion": {
                "choices": [70, 2000, "2000SP1", 2005, 2008, "2008R2", 2012, 2014],
                "type": "str",
            },
            "netprofile": {"type": "str"},
            "oraclesid": {"type": "str"},
            "originhost": {"type": "str"},
            "originrealm": {"type": "str"},
            "password": {"type": "str"},
            "productname": {"type": "str"},
            "query": {"type": "str"},
            "querytype": {"choices": ["Address", "Zone", "AAAA"], "type": "str"},
            "radaccountsession": {"type": "str"},
            "radaccounttype": {"type": "int"},
            "radapn": {"type": "str"},
            "radframedip": {"type": "str"},
            "radkey": {"type": "str"},
            "radmsisdn": {"type": "str"},
            "radnasid": {"type": "str"},
            "radnasip": {"type": "str"},
            "recv": {"type": "str"},
            "respcode": {"type": "list"},
            "resptimeout": {"type": "int"},
            "resptimeoutthresh": {"type": "int"},
            "retries": {"type": "int"},
            "reverse": {"choices": [True, False], "type": "str"},
            "rtsprequest": {"type": "str"},
            "scriptargs": {"type": "str"},
            "scriptname": {"type": "str"},
            "secondarypassword": {"type": "str"},
            "secure": {"choices": [True, False], "type": "str"},
            "secureargs": {"type": "str"},
            "send": {"type": "str"},
            "servicegroupname": {"type": "str"},
            "servicename": {"type": "str"},
            "sipmethod": {"choices": ["OPTIONS", "INVITE", "REGISTER"], "type": "str"},
            "sipreguri": {"type": "str"},
            "sipuri": {"type": "str"},
            "sitepath": {"type": "str"},
            "snmpcommunity": {"type": "str"},
            "snmpthreshold": {"type": "str"},
            "snmpversion": {"choices": ["V1", "V2"], "type": "str"},
            "sqlquery": {"type": "str"},
            "sslprofile": {"type": "str"},
            "storedb": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "storefrontacctservice": {"choices": [True, False], "type": "str"},
            "storefrontcheckbackendservices": {"choices": [True, False], "type": "str"},
            "storename": {"type": "str"},
            "successretries": {"type": "int"},
            "supportedvendorids": {"type": "list"},
            "tos": {"choices": [True, False], "type": "str"},
            "tosid": {"type": "int"},
            "transparent": {"choices": [True, False], "type": "str"},
            "trofscode": {"type": "int"},
            "trofsstring": {"type": "str"},
            "type": {
                "choices": [
                    "PING",
                    "TCP",
                    "HTTP",
                    "TCP-ECV",
                    "HTTP-ECV",
                    "UDP-ECV",
                    "DNS",
                    "FTP",
                    "LDNS-PING",
                    "LDNS-TCP",
                    "LDNS-DNS",
                    "RADIUS",
                    "USER",
                    "HTTP-INLINE",
                    "SIP-UDP",
                    "SIP-TCP",
                    "LOAD",
                    "FTP-EXTENDED",
                    "SMTP",
                    "SNMP",
                    "NNTP",
                    "MYSQL",
                    "MYSQL-ECV",
                    "MSSQL-ECV",
                    "ORACLE-ECV",
                    "LDAP",
                    "POP3",
                    "CITRIX-XML-SERVICE",
                    "CITRIX-WEB-INTERFACE",
                    "DNS-TCP",
                    "RTSP",
                    "ARP",
                    "CITRIX-AG",
                    "CITRIX-AAC-LOGINPAGE",
                    "CITRIX-AAC-LAS",
                    "CITRIX-XD-DDC",
                    "ND6",
                    "CITRIX-WI-EXTENDED",
                    "DIAMETER",
                    "RADIUS_ACCOUNTING",
                    "STOREFRONT",
                    "APPC",
                    "SMPP",
                    "CITRIX-XNC-ECV",
                    "CITRIX-XDM",
                    "CITRIX-STA-SERVICE",
                    "CITRIX-STA-SERVICE-NHOP",
                    "MQTT",
                    "HTTP2",
                ],
                "type": "str",
            },
            "units1": {"choices": ["SEC", "MSEC", "MIN"], "type": "str"},
            "units2": {"choices": ["SEC", "MSEC", "MIN"], "type": "str"},
            "units3": {"choices": ["SEC", "MSEC", "MIN"], "type": "str"},
            "units4": {"choices": ["SEC", "MSEC", "MIN"], "type": "str"},
            "username": {"type": "str"},
            "validatecred": {"choices": [True, False], "type": "str"},
            "vendorid": {"type": "int"},
            "vendorspecificacctapplicationids": {"type": "list"},
            "vendorspecificauthapplicationids": {"type": "list"},
            "vendorspecificvendorid": {"type": "int"},
        },
        "update_payload_keys": [
            "monitorname",
            "type",
            "action",
            "respcode",
            "httprequest",
            "rtsprequest",
            "customheaders",
            "maxforwards",
            "sipmethod",
            "sipuri",
            "send",
            "recv",
            "query",
            "querytype",
            "username",
            "password",
            "secondarypassword",
            "logonpointname",
            "lasversion",
            "radkey",
            "radnasid",
            "radnasip",
            "radaccounttype",
            "radframedip",
            "radapn",
            "radmsisdn",
            "radaccountsession",
            "lrtm",
            "deviation",
            "scriptname",
            "scriptargs",
            "secureargs",
            "validatecred",
            "domain",
            "dispatcherip",
            "dispatcherport",
            "interval",
            "resptimeout",
            "resptimeoutthresh",
            "retries",
            "failureretries",
            "alertretries",
            "successretries",
            "downtime",
            "destip",
            "destport",
            "reverse",
            "transparent",
            "iptunnel",
            "tos",
            "tosid",
            "secure",
            "ipaddress",
            "group",
            "filename",
            "basedn",
            "binddn",
            "filter",
            "attribute",
            "database",
            "oraclesid",
            "sqlquery",
            "evalrule",
            "snmpoid",
            "snmpcommunity",
            "snmpthreshold",
            "snmpversion",
            "metrictable",
            "metric",
            "application",
            "sitepath",
            "storename",
            "storefrontacctservice",
            "storefrontcheckbackendservices",
            "netprofile",
            "mssqlprotocolversion",
            "originhost",
            "originrealm",
            "hostipaddress",
            "vendorid",
            "productname",
            "firmwarerevision",
            "authapplicationid",
            "acctapplicationid",
            "inbandsecurityid",
            "supportedvendorids",
            "vendorspecificvendorid",
            "kcdaccount",
            "storedb",
            "trofscode",
            "trofsstring",
            "sslprofile",
            "mqttclientidentifier",
            "mqttversion",
            "grpchealthcheck",
            "grpcstatuscode",
            "grpcservicename",
            "sipreguri",
            "units1",
            "units3",
            "units4",
            "units2",
            "metricthreshold",
            "metricweight",
            "vendorspecificauthapplicationids",
            "vendorspecificacctapplicationids",
        ],
    },
    "lbmonitor_metric_binding": {
        "add_payload_keys": [
            "monitorname",
            "metric",
            "metricthreshold",
            "metricweight",
        ],
        "bindprimary_key": "metric",
        "delete_arg_keys": ["metric"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["metric"],
        "immutable_keys": [],
        "primary_key": "monitorname",
        "readwrite_arguments": {
            "metric": {"type": "str"},
            "metricthreshold": {"type": "int"},
            "metricweight": {"type": "int"},
            "monitorname": {"type": "str"},
        },
        "update_payload_keys": ["metric", "metricthreshold", "metricweight", "metric"],
    },
    "lbmonitor_sslcertkey_binding": {
        "add_payload_keys": [
            "monitorname",
            "certkeyname",
            "ca",
            "crlcheck",
            "ocspcheck",
        ],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname", "ca"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname", "ca"],
        "immutable_keys": [],
        "primary_key": "monitorname",
        "readwrite_arguments": {
            "ca": {"type": "bool"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "monitorname": {"type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "lbparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "allowboundsvcremoval": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "computedadccookieattribute": {"type": "str"},
            "consolidatedlconn": {"choices": [True, False], "type": "str"},
            "cookiepassphrase": {"type": "str"},
            "dbsttl": {"type": "int"},
            "dropmqttjumbomessage": {"choices": [True, False], "type": "str"},
            "httponlycookieflag": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "lbhashalgorithm": {"choices": ["DEFAULT", "PRAC", "JARH"], "type": "str"},
            "lbhashfingers": {"type": "int"},
            "literaladccookieattribute": {"type": "str"},
            "maxpipelinenat": {"type": "int"},
            "monitorconnectionclose": {"choices": ["RESET", "FIN"], "type": "str"},
            "monitorskipmaxclient": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "preferdirectroute": {"choices": [True, False], "type": "str"},
            "retainservicestate": {"choices": [True, False], "type": "str"},
            "startuprrfactor": {"type": "int"},
            "storemqttclientidandusername": {"choices": [True, False], "type": "str"},
            "undefaction": {"type": "str"},
            "useencryptedpersistencecookie": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "useportforhashlb": {"choices": [True, False], "type": "str"},
            "usesecuredpersistencecookie": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "vserverspecificmac": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "httponlycookieflag",
            "usesecuredpersistencecookie",
            "useencryptedpersistencecookie",
            "cookiepassphrase",
            "consolidatedlconn",
            "useportforhashlb",
            "preferdirectroute",
            "startuprrfactor",
            "monitorskipmaxclient",
            "monitorconnectionclose",
            "vserverspecificmac",
            "allowboundsvcremoval",
            "retainservicestate",
            "dbsttl",
            "maxpipelinenat",
            "literaladccookieattribute",
            "computedadccookieattribute",
            "storemqttclientidandusername",
            "dropmqttjumbomessage",
            "lbhashalgorithm",
            "lbhashfingers",
            "undefaction",
        ],
    },
    "lbpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "logaction",
            "comment",
        ],
        "bindings": ["lbpolicylabel_lbpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "lbpolicylabel_lbpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "logaction",
            "comment",
        ],
    },
    "lbpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype", "comment"],
        "bindings": ["lbpolicylabel_lbpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "lbpolicylabel_lbpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "newname": {"type": "str"},
            "policylabeltype": {
                "choices": [
                    "HTTP",
                    "OTHERTCP",
                    "SIP_UDP",
                    "SIP_TCP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                    "NAT",
                    "DIAMETER",
                    "RADIUS",
                    "DNS",
                    "MQTT",
                    "QUIC_BRIDGE",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "lbpolicylabel_lbpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbprofile": {
        "add_payload_keys": [
            "lbprofilename",
            "dbslb",
            "processlocal",
            "httponlycookieflag",
            "cookiepassphrase",
            "usesecuredpersistencecookie",
            "useencryptedpersistencecookie",
            "literaladccookieattribute",
            "computedadccookieattribute",
            "storemqttclientidandusername",
            "lbhashalgorithm",
            "lbhashfingers",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "lbprofilename",
        "readwrite_arguments": {
            "computedadccookieattribute": {"type": "str"},
            "cookiepassphrase": {"type": "str"},
            "dbslb": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "httponlycookieflag": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "lbhashalgorithm": {"choices": ["DEFAULT", "PRAC", "JARH"], "type": "str"},
            "lbhashfingers": {"type": "int"},
            "lbprofilename": {"type": "str"},
            "literaladccookieattribute": {"type": "str"},
            "processlocal": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "storemqttclientidandusername": {"choices": [True, False], "type": "str"},
            "useencryptedpersistencecookie": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "usesecuredpersistencecookie": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "lbprofilename",
            "dbslb",
            "processlocal",
            "httponlycookieflag",
            "cookiepassphrase",
            "usesecuredpersistencecookie",
            "useencryptedpersistencecookie",
            "literaladccookieattribute",
            "computedadccookieattribute",
            "storemqttclientidandusername",
            "lbhashalgorithm",
            "lbhashfingers",
        ],
    },
    "lbroute": {
        "add_payload_keys": ["network", "netmask", "gatewayname", "td"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["netmask", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["netmask", "td"],
        "immutable_keys": ["netmask", "gatewayname", "network", "td"],
        "primary_key": "network",
        "readwrite_arguments": {
            "gatewayname": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbroute6": {
        "add_payload_keys": ["network", "gatewayname", "td"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["td"],
        "immutable_keys": ["gatewayname", "network", "td"],
        "primary_key": "network",
        "readwrite_arguments": {
            "gatewayname": {"type": "str"},
            "network": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver": {
        "add_payload_keys": [
            "name",
            "servicetype",
            "ipv46",
            "ippattern",
            "port",
            "ipset",
            "range",
            "persistencetype",
            "timeout",
            "persistencebackup",
            "backuppersistencetimeout",
            "lbmethod",
            "cookiename",
            "rule",
            "listenpolicy",
            "listenpriority",
            "resrule",
            "persistmask",
            "v6persistmasklen",
            "rtspnat",
            "m",
            "tosid",
            "datalength",
            "dataoffset",
            "sessionless",
            "trofspersistence",
            "connfailover",
            "redirurl",
            "cacheable",
            "clttimeout",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "healththreshold",
            "sothreshold",
            "sobackupaction",
            "redirectportrewrite",
            "downstateflush",
            "backupvserver",
            "disableprimaryondown",
            "insertvserveripport",
            "authenticationhost",
            "authentication",
            "authn401",
            "authnvsname",
            "push",
            "pushvserver",
            "pushlabel",
            "pushmulticlients",
            "tcpprofilename",
            "httpprofilename",
            "dbprofilename",
            "comment",
            "l2conn",
            "oracleserverversion",
            "mssqlserverversion",
            "mysqlprotocolversion",
            "mysqlserverversion",
            "mysqlcharacterset",
            "mysqlservercapabilities",
            "appflowlog",
            "netprofile",
            "icmpvsrresponse",
            "rhistate",
            "newservicerequest",
            "newservicerequestincrementinterval",
            "minautoscalemembers",
            "maxautoscalemembers",
            "persistavpno",
            "skippersistency",
            "td",
            "authnprofile",
            "macmoderetainvlan",
            "dbslb",
            "dns64",
            "bypassaaaa",
            "recursionavailable",
            "processlocal",
            "dnsprofilename",
            "lbprofilename",
            "redirectfromport",
            "httpsredirecturl",
            "retainconnectionsoncluster",
            "nodefaultbindings",
            "adfsproxyprofile",
            "tcpprobeport",
            "quicprofilename",
            "quicbridgeprofilename",
            "probeprotocol",
            "probeport",
            "toggleorder",
            "orderthreshold",
            "ipmask",
            "hashlength",
            "netmask",
            "v6netmasklen",
            "backuplbmethod",
            "vipheader",
            "newservicerequestunit",
            "probesuccessresponsecode",
        ],
        "bindings": [
            "lbvserver_tmtrafficpolicy_binding",
            "lbvserver_dnspolicy64_binding",
            "lbvserver_appflowpolicy_binding",
            "lbvserver_authorizationpolicy_binding",
            "lbvserver_rewritepolicy_binding",
            "lbvserver_service_binding",
            "lbvserver_auditnslogpolicy_binding",
            "lbvserver_spilloverpolicy_binding",
            "lbvserver_transformpolicy_binding",
            "lbvserver_botpolicy_binding",
            "lbvserver_appfwpolicy_binding",
            "lbvserver_feopolicy_binding",
            "lbvserver_videooptimizationpacingpolicy_binding",
            "lbvserver_cachepolicy_binding",
            "lbvserver_contentinspectionpolicy_binding",
            "lbvserver_lbpolicy_binding",
            "lbvserver_analyticsprofile_binding",
            "lbvserver_servicegroup_binding",
            "lbvserver_cmppolicy_binding",
            "lbvserver_auditsyslogpolicy_binding",
            "lbvserver_videooptimizationdetectionpolicy_binding",
            "lbvserver_responderpolicy_binding",
            "lbvserver_appqoepolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": ["servicetype", "td", "range", "nodefaultbindings", "port"],
        "primary_key": "name",
        "readwrite_arguments": {
            "adfsproxyprofile": {"type": "str"},
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authentication": {"choices": [True, False], "type": "str"},
            "authenticationhost": {"type": "str"},
            "authn401": {"choices": [True, False], "type": "str"},
            "authnprofile": {"type": "str"},
            "authnvsname": {"type": "str"},
            "backuplbmethod": {
                "choices": [
                    "ROUNDROBIN",
                    "LEASTCONNECTION",
                    "LEASTRESPONSETIME",
                    "SOURCEIPHASH",
                    "LEASTBANDWIDTH",
                    "LEASTPACKETS",
                    "CUSTOMLOAD",
                ],
                "type": "str",
            },
            "backuppersistencetimeout": {"type": "int"},
            "backupvserver": {"type": "str"},
            "bypassaaaa": {"choices": [True, False], "type": "str"},
            "cacheable": {"choices": [True, False], "type": "str"},
            "clttimeout": {"type": "int"},
            "comment": {"type": "str"},
            "connfailover": {
                "choices": ["DISABLED", "STATEFUL", "STATELESS"],
                "type": "str",
            },
            "cookiename": {"type": "str"},
            "datalength": {"type": "int"},
            "dataoffset": {"type": "int"},
            "dbprofilename": {"type": "str"},
            "dbslb": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "disableprimaryondown": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dns64": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dnsprofilename": {"type": "str"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hashlength": {"type": "int"},
            "healththreshold": {"type": "int"},
            "httpprofilename": {"type": "str"},
            "httpsredirecturl": {"type": "str"},
            "icmpvsrresponse": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "insertvserveripport": {
                "choices": [False, "VIPADDR", "V6TOV4MAPPING"],
                "type": "str",
            },
            "ipmask": {"type": "str"},
            "ippattern": {"type": "str"},
            "ipset": {"type": "str"},
            "ipv46": {"type": "str"},
            "l2conn": {"choices": [True, False], "type": "str"},
            "lbmethod": {
                "choices": [
                    "ROUNDROBIN",
                    "LEASTCONNECTION",
                    "LEASTRESPONSETIME",
                    "URLHASH",
                    "DOMAINHASH",
                    "DESTINATIONIPHASH",
                    "SOURCEIPHASH",
                    "SRCIPDESTIPHASH",
                    "LEASTBANDWIDTH",
                    "LEASTPACKETS",
                    "TOKEN",
                    "SRCIPSRCPORTHASH",
                    "LRTM",
                    "CALLIDHASH",
                    "CUSTOMLOAD",
                    "LEASTREQUEST",
                    "AUDITLOGHASH",
                    "STATICPROXIMITY",
                    "USER_TOKEN",
                ],
                "type": "str",
            },
            "lbprofilename": {"type": "str"},
            "lbvserver_analyticsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_appfwpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_appqoepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_authorizationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_botpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_cmppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_contentinspectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_dnspolicy64_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_feopolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_lbpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_service_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_servicegroup_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_spilloverpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_tmtrafficpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_transformpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_videooptimizationdetectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lbvserver_videooptimizationpacingpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "listenpolicy": {"type": "str"},
            "listenpriority": {"type": "int"},
            "m": {"choices": ["IP", "MAC", "IPTUNNEL", "TOS"], "type": "str"},
            "macmoderetainvlan": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxautoscalemembers": {"type": "int"},
            "minautoscalemembers": {"type": "int"},
            "mssqlserverversion": {
                "choices": [70, 2000, "2000SP1", 2005, 2008, "2008R2", 2012, 2014],
                "type": "str",
            },
            "mysqlcharacterset": {"type": "int"},
            "mysqlprotocolversion": {"type": "int"},
            "mysqlservercapabilities": {"type": "int"},
            "mysqlserverversion": {"type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "newservicerequest": {"type": "int"},
            "newservicerequestincrementinterval": {"type": "int"},
            "newservicerequestunit": {
                "choices": ["PER_SECOND", "PERCENT"],
                "type": "str",
            },
            "oracleserverversion": {"choices": ["10G", "11G"], "type": "str"},
            "order": {"type": "int"},
            "orderthreshold": {"type": "int"},
            "persistavpno": {"type": "list"},
            "persistencebackup": {"choices": ["SOURCEIP", "NONE"], "type": "str"},
            "persistencetype": {
                "choices": [
                    "SOURCEIP",
                    "COOKIEINSERT",
                    "SSLSESSION",
                    "RULE",
                    "URLPASSIVE",
                    "CUSTOMSERVERID",
                    "DESTIP",
                    "SRCIPDESTIP",
                    "CALLID",
                    "RTSPSID",
                    "DIAMETER",
                    "FIXSESSION",
                    "USERSESSION",
                    "NONE",
                ],
                "type": "str",
            },
            "persistmask": {"type": "str"},
            "port": {"type": "int"},
            "probeport": {"type": "int"},
            "probeprotocol": {"choices": ["TCP", "HTTP"], "type": "str"},
            "probesuccessresponsecode": {"type": "str"},
            "processlocal": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "push": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "pushlabel": {"type": "str"},
            "pushmulticlients": {"choices": [True, False], "type": "str"},
            "pushvserver": {"type": "str"},
            "quicbridgeprofilename": {"type": "str"},
            "quicprofilename": {"type": "str"},
            "range": {"type": "int"},
            "recursionavailable": {"choices": [True, False], "type": "str"},
            "redirectfromport": {"type": "int"},
            "redirectportrewrite": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "redirurl": {"type": "str"},
            "redirurlflags": {"type": "bool"},
            "resrule": {"type": "str"},
            "retainconnectionsoncluster": {"choices": [True, False], "type": "str"},
            "rhistate": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "rtspnat": {"choices": [True, False], "type": "str"},
            "rule": {"type": "str"},
            "servicename": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "DTLS",
                    "NNTP",
                    "DNS",
                    "DHCPRA",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "DNS_TCP",
                    "RTSP",
                    "PUSH",
                    "SSL_PUSH",
                    "RADIUS",
                    "RDP",
                    "MYSQL",
                    "MSSQL",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "TFTP",
                    "ORACLE",
                    "SMPP",
                    "SYSLOGTCP",
                    "SYSLOGUDP",
                    "FIX",
                    "SSL_FIX",
                    "PROXY",
                    "USER_TCP",
                    "USER_SSL_TCP",
                    "QUIC",
                    "IPFIX",
                    "LOGSTREAM",
                    "MONGO",
                    "MONGO_TLS",
                    "MQTT",
                    "MQTT_TLS",
                    "QUIC_BRIDGE",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
            "sessionless": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "skippersistency": {"choices": ["Bypass", "ReLb", "None"], "type": "str"},
            "sobackupaction": {
                "choices": ["DROP", "ACCEPT", "REDIRECT"],
                "type": "str",
            },
            "somethod": {
                "choices": [
                    "CONNECTION",
                    "DYNAMICCONNECTION",
                    "BANDWIDTH",
                    "HEALTH",
                    "NONE",
                ],
                "type": "str",
            },
            "sopersistence": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sopersistencetimeout": {"type": "int"},
            "sothreshold": {"type": "int"},
            "tcpprobeport": {"type": "int"},
            "tcpprofilename": {"type": "str"},
            "td": {"type": "int"},
            "timeout": {"type": "int"},
            "toggleorder": {"choices": ["ASCENDING", "DESCENDING"], "type": "str"},
            "tosid": {"type": "int"},
            "trofspersistence": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "v6netmasklen": {"type": "int"},
            "v6persistmasklen": {"type": "int"},
            "vipheader": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "ipv46",
            "ipset",
            "ippattern",
            "ipmask",
            "servicename",
            "persistencetype",
            "timeout",
            "persistencebackup",
            "backuppersistencetimeout",
            "lbmethod",
            "rule",
            "cookiename",
            "resrule",
            "persistmask",
            "v6persistmasklen",
            "rtspnat",
            "m",
            "tosid",
            "datalength",
            "dataoffset",
            "sessionless",
            "trofspersistence",
            "connfailover",
            "backupvserver",
            "redirurl",
            "cacheable",
            "clttimeout",
            "somethod",
            "sopersistence",
            "sopersistencetimeout",
            "healththreshold",
            "sobackupaction",
            "redirectportrewrite",
            "downstateflush",
            "insertvserveripport",
            "disableprimaryondown",
            "authenticationhost",
            "authentication",
            "authn401",
            "authnvsname",
            "push",
            "pushvserver",
            "pushlabel",
            "pushmulticlients",
            "listenpolicy",
            "listenpriority",
            "tcpprofilename",
            "httpprofilename",
            "dbprofilename",
            "comment",
            "l2conn",
            "oracleserverversion",
            "mssqlserverversion",
            "mysqlprotocolversion",
            "mysqlserverversion",
            "mysqlcharacterset",
            "mysqlservercapabilities",
            "appflowlog",
            "netprofile",
            "icmpvsrresponse",
            "rhistate",
            "newservicerequest",
            "newservicerequestincrementinterval",
            "minautoscalemembers",
            "maxautoscalemembers",
            "persistavpno",
            "skippersistency",
            "authnprofile",
            "macmoderetainvlan",
            "dbslb",
            "dns64",
            "bypassaaaa",
            "recursionavailable",
            "processlocal",
            "dnsprofilename",
            "lbprofilename",
            "redirectfromport",
            "httpsredirecturl",
            "retainconnectionsoncluster",
            "adfsproxyprofile",
            "tcpprobeport",
            "quicprofilename",
            "quicbridgeprofilename",
            "probeport",
            "probeprotocol",
            "toggleorder",
            "orderthreshold",
            "weight",
            "order",
            "hashlength",
            "netmask",
            "v6netmasklen",
            "backuplbmethod",
            "sothreshold",
            "vipheader",
            "newservicerequestunit",
            "probesuccessresponsecode",
        ],
    },
    "lbvserver_analyticsprofile_binding": {
        "add_payload_keys": ["name", "analyticsprofile", "order"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "name": {"type": "str"},
            "order": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_appflowpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_appfwpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_appqoepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_authorizationpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_botpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_cachepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_cmppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_contentinspectionpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_dnspolicy64_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_feopolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_lbpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_responderpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_rewritepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_service_binding": {
        "add_payload_keys": [
            "name",
            "servicename",
            "servicegroupname",
            "order",
            "weight",
        ],
        "bindprimary_key": "servicename",
        "delete_arg_keys": ["servicename", "servicegroupname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servicename", "servicegroupname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "order": {"type": "int"},
            "servicegroupname": {"type": "str"},
            "servicename": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": ["servicename", "order", "weight", "servicename"],
    },
    "lbvserver_servicegroup_binding": {
        "add_payload_keys": [
            "name",
            "servicename",
            "servicegroupname",
            "order",
            "weight",
        ],
        "bindprimary_key": "servicename",
        "delete_arg_keys": ["servicename", "servicegroupname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servicename", "servicegroupname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "order": {"type": "int"},
            "servicegroupname": {"type": "str"},
            "servicename": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": ["servicename", "order", "weight", "servicename"],
    },
    "lbvserver_spilloverpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_tmtrafficpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_transformpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_videooptimizationdetectionpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbvserver_videooptimizationpacingpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "order",
            "priority",
            "gotopriorityexpression",
            "bindpoint",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": ["REQUEST", "RESPONSE", "MQTT_JUMBO_REQ"],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "name": {"type": "str"},
            "order": {"type": "int"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lbwlm": {
        "add_payload_keys": ["wlmname", "ipaddress", "lbuid", "katimeout", "port"],
        "bindings": ["lbwlm_lbvserver_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["lbuid", "port", "ipaddress"],
        "primary_key": "wlmname",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "katimeout": {"type": "int"},
            "lbuid": {"type": "str"},
            "lbwlm_lbvserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "port": {"type": "int"},
            "wlmname": {"type": "str"},
        },
        "update_payload_keys": ["wlmname", "katimeout"],
    },
    "lbwlm_lbvserver_binding": {
        "add_payload_keys": ["wlmname", "vservername"],
        "bindprimary_key": "vservername",
        "delete_arg_keys": ["vservername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vservername"],
        "immutable_keys": [],
        "primary_key": "wlmname",
        "readwrite_arguments": {
            "vservername": {"type": "str"},
            "wlmname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "linkset": {
        "add_payload_keys": ["id"],
        "bindings": ["linkset_interface_binding", "linkset_channel_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["id"],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "str"},
            "linkset_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "linkset_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "linkset_channel_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "str"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "linkset_interface_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "str"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "location": {
        "add_payload_keys": [
            "ipfrom",
            "ipto",
            "preferredlocation",
            "longitude",
            "latitude",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["ipto"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "latitude",
            "ipfrom",
            "preferredlocation",
            "ipto",
            "longitude",
        ],
        "primary_key": "ipfrom",
        "readwrite_arguments": {
            "ipfrom": {"type": "str"},
            "ipto": {"type": "str"},
            "latitude": {"type": "int"},
            "longitude": {"type": "int"},
            "preferredlocation": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "locationparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "context": {"choices": ["geographic", "custom"], "type": "str"},
            "matchwildcardtoany": {
                "choices": [True, False, "Expression"],
                "type": "str",
            },
            "q1label": {"type": "str"},
            "q2label": {"type": "str"},
            "q3label": {"type": "str"},
            "q4label": {"type": "str"},
            "q5label": {"type": "str"},
            "q6label": {"type": "str"},
        },
        "update_payload_keys": [
            "context",
            "q1label",
            "q2label",
            "q3label",
            "q4label",
            "q5label",
            "q6label",
            "matchwildcardtoany",
        ],
    },
    "lsnappsattributes": {
        "add_payload_keys": ["name", "transportprotocol", "port", "sessiontimeout"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["transportprotocol", "port"],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "port": {"type": "str"},
            "sessiontimeout": {"type": "int"},
            "transportprotocol": {"choices": ["TCP", "UDP", "ICMP"], "type": "str"},
        },
        "update_payload_keys": ["name", "sessiontimeout"],
    },
    "lsnappsprofile": {
        "add_payload_keys": [
            "appsprofilename",
            "transportprotocol",
            "ippooling",
            "mapping",
            "filtering",
            "tcpproxy",
            "td",
            "l2info",
        ],
        "bindings": [
            "lsnappsprofile_lsnappsattributes_binding",
            "lsnappsprofile_port_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["transportprotocol"],
        "primary_key": "appsprofilename",
        "readwrite_arguments": {
            "appsprofilename": {"type": "str"},
            "filtering": {
                "choices": [
                    "ENDPOINT-INDEPENDENT",
                    "ADDRESS-DEPENDENT",
                    "ADDRESS-PORT-DEPENDENT",
                ],
                "type": "str",
            },
            "ippooling": {"choices": ["PAIRED", "RANDOM"], "type": "str"},
            "l2info": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "lsnappsprofile_lsnappsattributes_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsnappsprofile_port_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "mapping": {
                "choices": [
                    "ENDPOINT-INDEPENDENT",
                    "ADDRESS-DEPENDENT",
                    "ADDRESS-PORT-DEPENDENT",
                ],
                "type": "str",
            },
            "tcpproxy": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
            "transportprotocol": {"choices": ["TCP", "UDP", "ICMP"], "type": "str"},
        },
        "update_payload_keys": [
            "appsprofilename",
            "ippooling",
            "mapping",
            "filtering",
            "tcpproxy",
            "td",
            "l2info",
        ],
    },
    "lsnappsprofile_lsnappsattributes_binding": {
        "add_payload_keys": ["appsprofilename", "appsattributesname"],
        "bindprimary_key": "appsattributesname",
        "delete_arg_keys": ["appsattributesname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["appsattributesname"],
        "immutable_keys": [],
        "primary_key": "appsprofilename",
        "readwrite_arguments": {
            "appsattributesname": {"type": "str"},
            "appsprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsnappsprofile_port_binding": {
        "add_payload_keys": ["appsprofilename", "lsnport"],
        "bindprimary_key": "lsnport",
        "delete_arg_keys": ["lsnport"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["lsnport"],
        "immutable_keys": [],
        "primary_key": "appsprofilename",
        "readwrite_arguments": {
            "appsprofilename": {"type": "str"},
            "lsnport": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsnclient": {
        "add_payload_keys": ["clientname"],
        "bindings": [
            "lsnclient_nsacl6_binding",
            "lsnclient_network6_binding",
            "lsnclient_nsacl_binding",
            "lsnclient_network_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["clientname"],
        "primary_key": "clientname",
        "readwrite_arguments": {
            "clientname": {"type": "str"},
            "lsnclient_network6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsnclient_network_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsnclient_nsacl6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsnclient_nsacl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "lsnclient_network6_binding": {
        "add_payload_keys": ["clientname", "network6", "td"],
        "bindprimary_key": "network6",
        "delete_arg_keys": ["network6", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["network6", "td"],
        "immutable_keys": [],
        "primary_key": "clientname",
        "readwrite_arguments": {
            "clientname": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "network6": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lsnclient_network_binding": {
        "add_payload_keys": ["clientname", "network", "td", "netmask"],
        "bindprimary_key": "network",
        "delete_arg_keys": ["network", "td", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["network", "td", "netmask"],
        "immutable_keys": [],
        "primary_key": "clientname",
        "readwrite_arguments": {
            "clientname": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lsnclient_nsacl6_binding": {
        "add_payload_keys": ["clientname", "acl6name", "td"],
        "bindprimary_key": "acl6name",
        "delete_arg_keys": ["acl6name", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["acl6name", "td"],
        "immutable_keys": [],
        "primary_key": "clientname",
        "readwrite_arguments": {
            "acl6name": {"type": "str"},
            "clientname": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lsnclient_nsacl_binding": {
        "add_payload_keys": ["clientname", "aclname", "td"],
        "bindprimary_key": "aclname",
        "delete_arg_keys": ["aclname", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["aclname", "td"],
        "immutable_keys": [],
        "primary_key": "clientname",
        "readwrite_arguments": {
            "aclname": {"type": "str"},
            "clientname": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "lsngroup": {
        "add_payload_keys": [
            "groupname",
            "clientname",
            "nattype",
            "allocpolicy",
            "portblocksize",
            "logging",
            "sessionlogging",
            "sessionsync",
            "snmptraplimit",
            "ftp",
            "pptp",
            "sipalg",
            "rtspalg",
            "ip6profile",
            "ftpcm",
        ],
        "bindings": [
            "lsngroup_pcpserver_binding",
            "lsngroup_lsnpool_binding",
            "lsngroup_lsnrtspalgprofile_binding",
            "lsngroup_lsntransportprofile_binding",
            "lsngroup_lsnsipalgprofile_binding",
            "lsngroup_lsnlogprofile_binding",
            "lsngroup_lsnappsprofile_binding",
            "lsngroup_lsnhttphdrlogprofile_binding",
            "lsngroup_ipsecalgprofile_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["ip6profile", "allocpolicy", "clientname", "nattype"],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "allocpolicy": {"choices": ["PORTS", "IPADDRS"], "type": "str"},
            "clientname": {"type": "str"},
            "ftp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ftpcm": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "groupname": {"type": "str"},
            "ip6profile": {"type": "str"},
            "logging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "lsngroup_ipsecalgprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnappsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnhttphdrlogprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnlogprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnpool_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnrtspalgprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsnsipalgprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_lsntransportprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "lsngroup_pcpserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "nattype": {"choices": ["DYNAMIC", "DETERMINISTIC"], "type": "str"},
            "portblocksize": {"type": "int"},
            "pptp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rtspalg": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionlogging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionsync": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sipalg": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "snmptraplimit": {"type": "int"},
        },
        "update_payload_keys": [
            "groupname",
            "portblocksize",
            "logging",
            "sessionlogging",
            "sessionsync",
            "snmptraplimit",
            "ftp",
            "pptp",
            "sipalg",
            "rtspalg",
            "ftpcm",
        ],
    },
    "lsngroup_ipsecalgprofile_binding": {
        "add_payload_keys": ["groupname", "ipsecalgprofile"],
        "bindprimary_key": "ipsecalgprofile",
        "delete_arg_keys": ["ipsecalgprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipsecalgprofile"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "ipsecalgprofile": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnappsprofile_binding": {
        "add_payload_keys": ["groupname", "appsprofilename"],
        "bindprimary_key": "appsprofilename",
        "delete_arg_keys": ["appsprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["appsprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "appsprofilename": {"type": "str"},
            "groupname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnhttphdrlogprofile_binding": {
        "add_payload_keys": ["groupname", "httphdrlogprofilename"],
        "bindprimary_key": "httphdrlogprofilename",
        "delete_arg_keys": ["httphdrlogprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["httphdrlogprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "httphdrlogprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnlogprofile_binding": {
        "add_payload_keys": ["groupname", "logprofilename"],
        "bindprimary_key": "logprofilename",
        "delete_arg_keys": ["logprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["logprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "logprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnpool_binding": {
        "add_payload_keys": ["groupname", "poolname"],
        "bindprimary_key": "poolname",
        "delete_arg_keys": ["poolname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["poolname"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "poolname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnrtspalgprofile_binding": {
        "add_payload_keys": ["groupname", "rtspalgprofilename"],
        "bindprimary_key": "rtspalgprofilename",
        "delete_arg_keys": ["rtspalgprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["rtspalgprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "rtspalgprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsnsipalgprofile_binding": {
        "add_payload_keys": ["groupname", "sipalgprofilename"],
        "bindprimary_key": "sipalgprofilename",
        "delete_arg_keys": ["sipalgprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["sipalgprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "sipalgprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_lsntransportprofile_binding": {
        "add_payload_keys": ["groupname", "transportprofilename"],
        "bindprimary_key": "transportprofilename",
        "delete_arg_keys": ["transportprofilename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["transportprofilename"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "transportprofilename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsngroup_pcpserver_binding": {
        "add_payload_keys": ["groupname", "pcpserver"],
        "bindprimary_key": "pcpserver",
        "delete_arg_keys": ["pcpserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["pcpserver"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "pcpserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsnhttphdrlogprofile": {
        "add_payload_keys": [
            "httphdrlogprofilename",
            "logurl",
            "logmethod",
            "logversion",
            "loghost",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "httphdrlogprofilename",
        "readwrite_arguments": {
            "httphdrlogprofilename": {"type": "str"},
            "loghost": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logmethod": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logurl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logversion": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "httphdrlogprofilename",
            "logurl",
            "logmethod",
            "logversion",
            "loghost",
        ],
    },
    "lsnip6profile": {
        "add_payload_keys": ["name", "type", "natprefix", "network6"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["network6", "name", "natprefix", "type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "natprefix": {"type": "str"},
            "network6": {"type": "str"},
            "type": {"choices": ["DS-Lite", "NAT64"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsnlogprofile": {
        "add_payload_keys": [
            "logprofilename",
            "logsubscrinfo",
            "logcompact",
            "logipfix",
            "analyticsprofile",
            "logsessdeletion",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "logprofilename",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "logcompact": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logipfix": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logprofilename": {"type": "str"},
            "logsessdeletion": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logsubscrinfo": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "logprofilename",
            "logsubscrinfo",
            "logcompact",
            "logipfix",
            "analyticsprofile",
            "logsessdeletion",
        ],
    },
    "lsnparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "memlimit": {"type": "int"},
            "sessionsync": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "subscrsessionremoval": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": ["sessionsync", "subscrsessionremoval"],
    },
    "lsnpool": {
        "add_payload_keys": [
            "poolname",
            "nattype",
            "portblockallocation",
            "portrealloctimeout",
            "maxportrealloctmq",
        ],
        "bindings": ["lsnpool_lsnip_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["nattype", "portblockallocation"],
        "primary_key": "poolname",
        "readwrite_arguments": {
            "lsnpool_lsnip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "maxportrealloctmq": {"type": "int"},
            "nattype": {"choices": ["DYNAMIC", "DETERMINISTIC"], "type": "str"},
            "poolname": {"type": "str"},
            "portblockallocation": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "portrealloctimeout": {"type": "int"},
        },
        "update_payload_keys": ["poolname", "portrealloctimeout", "maxportrealloctmq"],
    },
    "lsnpool_lsnip_binding": {
        "add_payload_keys": ["poolname", "ownernode", "lsnip"],
        "bindprimary_key": "lsnip",
        "delete_arg_keys": ["ownernode", "lsnip"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ownernode", "lsnip"],
        "immutable_keys": [],
        "primary_key": "poolname",
        "readwrite_arguments": {
            "lsnip": {"type": "str"},
            "ownernode": {"type": "int"},
            "poolname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "lsnrtspalgprofile": {
        "add_payload_keys": [
            "rtspalgprofilename",
            "rtspidletimeout",
            "rtspportrange",
            "rtsptransportprotocol",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "rtspalgprofilename",
        "readwrite_arguments": {
            "rtspalgprofilename": {"type": "str"},
            "rtspidletimeout": {"type": "int"},
            "rtspportrange": {"type": "str"},
            "rtsptransportprotocol": {"choices": ["TCP", "UDP"], "type": "str"},
        },
        "update_payload_keys": [
            "rtspalgprofilename",
            "rtspidletimeout",
            "rtspportrange",
            "rtsptransportprotocol",
        ],
    },
    "lsnsipalgprofile": {
        "add_payload_keys": [
            "sipalgprofilename",
            "datasessionidletimeout",
            "sipsessiontimeout",
            "registrationtimeout",
            "sipsrcportrange",
            "sipdstportrange",
            "openregisterpinhole",
            "opencontactpinhole",
            "openviapinhole",
            "openrecordroutepinhole",
            "siptransportprotocol",
            "openroutepinhole",
            "rport",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "sipalgprofilename",
        "readwrite_arguments": {
            "datasessionidletimeout": {"type": "int"},
            "opencontactpinhole": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "openrecordroutepinhole": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "openregisterpinhole": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "openroutepinhole": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "openviapinhole": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "registrationtimeout": {"type": "int"},
            "rport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sipalgprofilename": {"type": "str"},
            "sipdstportrange": {"type": "str"},
            "sipsessiontimeout": {"type": "int"},
            "sipsrcportrange": {"type": "str"},
            "siptransportprotocol": {"choices": ["TCP", "UDP"], "type": "str"},
        },
        "update_payload_keys": [
            "sipalgprofilename",
            "datasessionidletimeout",
            "sipsessiontimeout",
            "registrationtimeout",
            "sipsrcportrange",
            "sipdstportrange",
            "openregisterpinhole",
            "opencontactpinhole",
            "openviapinhole",
            "openrecordroutepinhole",
            "siptransportprotocol",
            "openroutepinhole",
            "rport",
        ],
    },
    "lsnstatic": {
        "add_payload_keys": [
            "name",
            "transportprotocol",
            "subscrip",
            "subscrport",
            "network6",
            "td",
            "natip",
            "natport",
            "destip",
            "dsttd",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["nattype"],
        "immutable_keys": [
            "subscrip",
            "name",
            "natport",
            "subscrport",
            "td",
            "destip",
            "dsttd",
            "natip",
            "network6",
            "transportprotocol",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "destip": {"type": "str"},
            "dsttd": {"type": "int"},
            "name": {"type": "str"},
            "natip": {"type": "str"},
            "natport": {"type": "int"},
            "nattype": {"choices": ["NAT44", "DS-Lite", "NAT64"], "type": "str"},
            "network6": {"type": "str"},
            "subscrip": {"type": "str"},
            "subscrport": {"type": "int"},
            "td": {"type": "int"},
            "transportprotocol": {
                "choices": ["TCP", "UDP", "ICMP", "ALL"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "lsntransportprofile": {
        "add_payload_keys": [
            "transportprofilename",
            "transportprotocol",
            "sessiontimeout",
            "finrsttimeout",
            "stuntimeout",
            "synidletimeout",
            "portquota",
            "sessionquota",
            "groupsessionlimit",
            "portpreserveparity",
            "portpreserverange",
            "syncheck",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["transportprotocol"],
        "primary_key": "transportprofilename",
        "readwrite_arguments": {
            "finrsttimeout": {"type": "int"},
            "groupsessionlimit": {"type": "int"},
            "portpreserveparity": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "portpreserverange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "portquota": {"type": "int"},
            "sessionquota": {"type": "int"},
            "sessiontimeout": {"type": "int"},
            "stuntimeout": {"type": "int"},
            "syncheck": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "synidletimeout": {"type": "int"},
            "transportprofilename": {"type": "str"},
            "transportprotocol": {"choices": ["TCP", "UDP", "ICMP"], "type": "str"},
        },
        "update_payload_keys": [
            "transportprofilename",
            "sessiontimeout",
            "finrsttimeout",
            "stuntimeout",
            "synidletimeout",
            "portquota",
            "sessionquota",
            "groupsessionlimit",
            "portpreserveparity",
            "portpreserverange",
            "syncheck",
        ],
    },
    "mapbmr": {
        "add_payload_keys": [
            "name",
            "ruleipv6prefix",
            "psidoffset",
            "eabitlength",
            "psidlength",
        ],
        "bindings": ["mapbmr_bmrv4network_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "eabitlength",
            "name",
            "psidlength",
            "psidoffset",
            "ruleipv6prefix",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "eabitlength": {"type": "int"},
            "mapbmr_bmrv4network_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
            "psidlength": {"type": "int"},
            "psidoffset": {"type": "int"},
            "ruleipv6prefix": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "mapbmr_bmrv4network_binding": {
        "add_payload_keys": ["name", "network", "netmask"],
        "bindprimary_key": "network",
        "delete_arg_keys": ["network", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["network", "netmask"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "mapdmr": {
        "add_payload_keys": ["name", "bripv6prefix"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["bripv6prefix", "name"],
        "primary_key": "name",
        "readwrite_arguments": {
            "bripv6prefix": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "mapdomain": {
        "add_payload_keys": ["name", "mapdmrname"],
        "bindings": ["mapdomain_mapbmr_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "mapdmrname"],
        "primary_key": "name",
        "readwrite_arguments": {
            "mapdmrname": {"type": "str"},
            "mapdomain_mapbmr_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "mapdomain_mapbmr_binding": {
        "add_payload_keys": ["name", "mapbmrname"],
        "bindprimary_key": "mapbmrname",
        "delete_arg_keys": ["mapbmrname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["mapbmrname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"mapbmrname": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "nat64": {
        "add_payload_keys": ["name", "acl6name", "netprofile"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "acl6name": {"type": "str"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
        },
        "update_payload_keys": ["name", "acl6name", "netprofile"],
    },
    "nd6": {
        "add_payload_keys": ["neighbor", "mac", "ifnum", "vlan", "vxlan", "td", "vtep"],
        "bindings": ["nd6ravariables_onlinkipv6prefix_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": ["vlan", "vxlan", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["td"],
        "immutable_keys": ["neighbor", "vxlan", "td", "mac", "vtep", "ifnum", "vlan"],
        "primary_key": "neighbor",
        "readwrite_arguments": {
            "ifnum": {"type": "str"},
            "mac": {"type": "str"},
            "nd6ravariables_onlinkipv6prefix_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "neighbor": {"type": "str"},
            "nodeid": {"type": "int"},
            "td": {"type": "int"},
            "vlan": {"type": "int"},
            "vtep": {"type": "str"},
            "vxlan": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nd6ravariables_onlinkipv6prefix_binding": {
        "add_payload_keys": ["vlan", "ipv6prefix"],
        "bindprimary_key": "ipv6prefix",
        "delete_arg_keys": ["ipv6prefix"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipv6prefix"],
        "immutable_keys": [],
        "primary_key": "vlan",
        "readwrite_arguments": {"ipv6prefix": {"type": "str"}, "vlan": {"type": "int"}},
        "update_payload_keys": [],
    },
    "netbridge": {
        "add_payload_keys": ["name", "vxlanvlanmap"],
        "bindings": [
            "netbridge_iptunnel_binding",
            "netbridge_vlan_binding",
            "netbridge_nsip6_binding",
            "netbridge_nsip_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "netbridge_iptunnel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "netbridge_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "netbridge_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "netbridge_vlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vxlanvlanmap": {"type": "str"},
        },
        "update_payload_keys": ["name", "vxlanvlanmap"],
    },
    "netbridge_iptunnel_binding": {
        "add_payload_keys": ["name", "tunnel"],
        "bindprimary_key": "tunnel",
        "delete_arg_keys": ["tunnel"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["tunnel"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "tunnel": {"type": "str"}},
        "update_payload_keys": [],
    },
    "netbridge_nsip6_binding": {
        "add_payload_keys": ["name", "ipaddress", "netmask"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "netbridge_nsip_binding": {
        "add_payload_keys": ["name", "ipaddress", "netmask"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "netbridge_vlan_binding": {
        "add_payload_keys": ["name", "vlan"],
        "bindprimary_key": "vlan",
        "delete_arg_keys": ["vlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vlan"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "vlan": {"type": "int"}},
        "update_payload_keys": [],
    },
    "netprofile": {
        "add_payload_keys": [
            "name",
            "td",
            "srcip",
            "srcippersistency",
            "overridelsn",
            "mbf",
            "proxyprotocol",
            "proxyprotocoltxversion",
            "proxyprotocolaftertlshandshake",
        ],
        "bindings": ["netprofile_natrule_binding", "netprofile_srcportset_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["td"],
        "primary_key": "name",
        "readwrite_arguments": {
            "mbf": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "netprofile_natrule_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "netprofile_srcportset_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "overridelsn": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "proxyprotocol": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "proxyprotocolaftertlshandshake": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "proxyprotocoltxversion": {"choices": ["V1", "V2"], "type": "str"},
            "srcip": {"type": "str"},
            "srcippersistency": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "srcip",
            "srcippersistency",
            "overridelsn",
            "mbf",
            "proxyprotocol",
            "proxyprotocoltxversion",
            "proxyprotocolaftertlshandshake",
        ],
    },
    "netprofile_natrule_binding": {
        "add_payload_keys": ["name", "natrule", "netmask", "rewriteip"],
        "bindprimary_key": "natrule",
        "delete_arg_keys": ["natrule", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["natrule", "netmask"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "natrule": {"type": "str"},
            "netmask": {"type": "str"},
            "rewriteip": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "netprofile_srcportset_binding": {
        "add_payload_keys": ["name", "srcportrange"],
        "bindprimary_key": "srcportrange",
        "delete_arg_keys": ["srcportrange"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["srcportrange"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "srcportrange": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "nsappflowcollector": {
        "add_payload_keys": ["name", "ipaddress", "port"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "port", "ipaddress"],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "port": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nsassignment": {
        "add_payload_keys": [
            "name",
            "variable",
            "set",
            "add",
            "sub",
            "append",
            "clear",
            "comment",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "Add": {"type": "str"},
            "append": {"type": "str"},
            "clear": {"type": "bool"},
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "set": {"type": "str"},
            "sub": {"type": "str"},
            "variable": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "variable",
            "set",
            "add",
            "sub",
            "append",
            "clear",
            "comment",
        ],
    },
    "nscentralmanagementserver": {
        "add_payload_keys": [
            "type",
            "username",
            "password",
            "activationcode",
            "ipaddress",
            "servername",
            "validatecert",
            "deviceprofilename",
            "adcusername",
            "adcpassword",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "username",
            "adcpassword",
            "ipaddress",
            "adcusername",
            "activationcode",
            "deviceprofilename",
            "type",
            "servername",
            "password",
            "validatecert",
        ],
        "primary_key": "type",
        "readwrite_arguments": {
            "activationcode": {"type": "str"},
            "adcpassword": {"type": "str"},
            "adcusername": {"type": "str"},
            "deviceprofilename": {"type": "str"},
            "ipaddress": {"type": "str"},
            "password": {"type": "str"},
            "servername": {"type": "str"},
            "type": {"choices": ["CLOUD", "ONPREM"], "type": "str"},
            "username": {"type": "str"},
            "validatecert": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "nsencryptionkey": {
        "add_payload_keys": ["name", "method", "keyvalue", "padding", "iv", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "iv": {"type": "str"},
            "keyvalue": {"type": "str"},
            "method": {
                "choices": [
                    "NONE",
                    "RC4",
                    "DES3",
                    "AES128",
                    "AES192",
                    "AES256",
                    "DES",
                    "DES-CBC",
                    "DES-CFB",
                    "DES-OFB",
                    "DES-ECB",
                    "DES3-CBC",
                    "DES3-CFB",
                    "DES3-OFB",
                    "DES3-ECB",
                    "AES128-CBC",
                    "AES128-CFB",
                    "AES128-OFB",
                    "AES128-ECB",
                    "AES192-CBC",
                    "AES192-CFB",
                    "AES192-OFB",
                    "AES192-ECB",
                    "AES256-CBC",
                    "AES256-CFB",
                    "AES256-OFB",
                    "AES256-ECB",
                ],
                "type": "str",
            },
            "name": {"type": "str"},
            "padding": {"choices": [False, True], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "method",
            "keyvalue",
            "padding",
            "iv",
            "comment",
        ],
    },
    "nsextension": {
        "add_payload_keys": ["name", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["detail"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "detail": {"choices": ["brief", "all"], "type": "str"},
            "name": {"type": "str"},
            "overwrite": {"type": "bool"},
            "src": {"type": "str"},
            "trace": {"choices": [False, "calls", "lines", "all"], "type": "str"},
            "tracefunctions": {"type": "str"},
            "tracevariables": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "trace",
            "tracefunctions",
            "tracevariables",
            "comment",
        ],
    },
    "nshmackey": {
        "add_payload_keys": ["name", "digest", "keyvalue", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "digest": {
                "choices": [
                    "MD2",
                    "MD4",
                    "MD5",
                    "SHA1",
                    "SHA224",
                    "SHA256",
                    "SHA384",
                    "SHA512",
                ],
                "type": "str",
            },
            "keyvalue": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": ["name", "digest", "keyvalue", "comment"],
    },
    "nshttpprofile": {
        "add_payload_keys": [
            "name",
            "dropinvalreqs",
            "markhttp09inval",
            "markconnreqinval",
            "marktracereqinval",
            "markrfc7230noncompliantinval",
            "markhttpheaderextrawserror",
            "cmponpush",
            "conmultiplex",
            "maxreusepool",
            "dropextracrlf",
            "incomphdrdelay",
            "websocket",
            "rtsptunnel",
            "reqtimeout",
            "adpttimeout",
            "reqtimeoutaction",
            "dropextradata",
            "weblog",
            "clientiphdrexpr",
            "maxreq",
            "persistentetag",
            "http2",
            "http2direct",
            "http2strictcipher",
            "http2altsvcframe",
            "altsvc",
            "altsvcvalue",
            "reusepooltimeout",
            "maxheaderlen",
            "maxheaderfieldlen",
            "minreusepool",
            "http2maxheaderlistsize",
            "http2maxframesize",
            "http2maxconcurrentstreams",
            "http2initialconnwindowsize",
            "http2initialwindowsize",
            "http2headertablesize",
            "http2minseverconn",
            "http2maxpingframespermin",
            "http2maxsettingsframespermin",
            "http2maxresetframespermin",
            "http2maxemptyframespermin",
            "grpcholdlimit",
            "grpcholdtimeout",
            "grpclengthdelimitation",
            "apdexcltresptimethreshold",
            "http3",
            "http3maxheaderfieldsectionsize",
            "http3maxheadertablesize",
            "http3maxheaderblockedstreams",
            "httppipelinebuffsize",
            "allowonlywordcharactersandhyphen",
            "passprotocolupgrade",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "adpttimeout": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "allowonlywordcharactersandhyphen": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "altsvc": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "altsvcvalue": {"type": "str"},
            "apdexcltresptimethreshold": {"type": "int"},
            "clientiphdrexpr": {"type": "str"},
            "cmponpush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "conmultiplex": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropextracrlf": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropextradata": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropinvalreqs": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "grpcholdlimit": {"type": "int"},
            "grpcholdtimeout": {"type": "int"},
            "grpclengthdelimitation": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "http2": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "http2altsvcframe": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "http2direct": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "http2headertablesize": {"type": "int"},
            "http2initialconnwindowsize": {"type": "int"},
            "http2initialwindowsize": {"type": "int"},
            "http2maxconcurrentstreams": {"type": "int"},
            "http2maxemptyframespermin": {"type": "int"},
            "http2maxframesize": {"type": "int"},
            "http2maxheaderlistsize": {"type": "int"},
            "http2maxpingframespermin": {"type": "int"},
            "http2maxresetframespermin": {"type": "int"},
            "http2maxsettingsframespermin": {"type": "int"},
            "http2minseverconn": {"type": "int"},
            "http2strictcipher": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "http3": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "http3maxheaderblockedstreams": {"type": "int"},
            "http3maxheaderfieldsectionsize": {"type": "int"},
            "http3maxheadertablesize": {"type": "int"},
            "httppipelinebuffsize": {"type": "int"},
            "incomphdrdelay": {"type": "int"},
            "markconnreqinval": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "markhttp09inval": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "markhttpheaderextrawserror": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "markrfc7230noncompliantinval": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "marktracereqinval": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxheaderfieldlen": {"type": "int"},
            "maxheaderlen": {"type": "int"},
            "maxreq": {"type": "int"},
            "maxreusepool": {"type": "int"},
            "minreusepool": {"type": "int"},
            "name": {"type": "str"},
            "passprotocolupgrade": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "persistentetag": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "reqtimeout": {"type": "int"},
            "reqtimeoutaction": {"type": "str"},
            "reusepooltimeout": {"type": "int"},
            "rtsptunnel": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "weblog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "websocket": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "dropinvalreqs",
            "markhttp09inval",
            "markconnreqinval",
            "marktracereqinval",
            "markrfc7230noncompliantinval",
            "markhttpheaderextrawserror",
            "cmponpush",
            "conmultiplex",
            "maxreusepool",
            "dropextracrlf",
            "incomphdrdelay",
            "websocket",
            "rtsptunnel",
            "reqtimeout",
            "adpttimeout",
            "reqtimeoutaction",
            "dropextradata",
            "weblog",
            "clientiphdrexpr",
            "maxreq",
            "persistentetag",
            "http2",
            "http2direct",
            "http2strictcipher",
            "http2altsvcframe",
            "altsvc",
            "altsvcvalue",
            "http2maxheaderlistsize",
            "http2maxframesize",
            "http2maxconcurrentstreams",
            "http2initialconnwindowsize",
            "http2initialwindowsize",
            "http2headertablesize",
            "http2minseverconn",
            "http2maxpingframespermin",
            "http2maxsettingsframespermin",
            "http2maxresetframespermin",
            "http2maxemptyframespermin",
            "grpcholdlimit",
            "grpcholdtimeout",
            "grpclengthdelimitation",
            "reusepooltimeout",
            "maxheaderlen",
            "maxheaderfieldlen",
            "minreusepool",
            "apdexcltresptimethreshold",
            "http3",
            "http3maxheaderfieldsectionsize",
            "http3maxheadertablesize",
            "http3maxheaderblockedstreams",
            "httppipelinebuffsize",
            "allowonlywordcharactersandhyphen",
            "passprotocolupgrade",
        ],
    },
    "nsicapprofile": {
        "add_payload_keys": [
            "name",
            "preview",
            "previewlength",
            "uri",
            "hostheader",
            "useragent",
            "mode",
            "queryparams",
            "connectionkeepalive",
            "allow204",
            "inserticapheaders",
            "inserthttprequest",
            "reqtimeout",
            "reqtimeoutaction",
            "logaction",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "allow204": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "connectionkeepalive": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hostheader": {"type": "str"},
            "inserthttprequest": {"type": "str"},
            "inserticapheaders": {"type": "str"},
            "logaction": {"type": "str"},
            "mode": {"choices": ["REQMOD", "RESPMOD"], "type": "str"},
            "name": {"type": "str"},
            "preview": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "previewlength": {"type": "int"},
            "queryparams": {"type": "str"},
            "reqtimeout": {"type": "int"},
            "reqtimeoutaction": {"choices": ["BYPASS", "DROP", "RESET"], "type": "str"},
            "uri": {"type": "str"},
            "useragent": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "preview",
            "previewlength",
            "uri",
            "hostheader",
            "useragent",
            "mode",
            "queryparams",
            "connectionkeepalive",
            "allow204",
            "inserticapheaders",
            "inserthttprequest",
            "reqtimeout",
            "reqtimeoutaction",
            "logaction",
        ],
    },
    "nsip": {
        "add_payload_keys": [
            "ipaddress",
            "netmask",
            "type",
            "arp",
            "icmp",
            "vserver",
            "telnet",
            "ftp",
            "gui",
            "ssh",
            "snmp",
            "mgmtaccess",
            "restrictaccess",
            "dynamicrouting",
            "decrementttl",
            "hostroute",
            "advertiseondefaultpartition",
            "networkroute",
            "tag",
            "hostrtgw",
            "metric",
            "vserverrhilevel",
            "ospflsatype",
            "ospfarea",
            "vrid",
            "icmpresponse",
            "ownernode",
            "arpresponse",
            "ownerdownresponse",
            "td",
            "arpowner",
            "mptcpadvertise",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["td"],
        "disable_payload_keys": ["ipaddress", "td"],
        "enable_payload_keys": ["ipaddress", "td"],
        "get_arg_keys": ["type", "td"],
        "immutable_keys": ["type", "ownernode"],
        "primary_key": "ipaddress",
        "readwrite_arguments": {
            "advertiseondefaultpartition": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "arp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "arpowner": {"type": "int"},
            "arpresponse": {
                "choices": ["NONE", "ONE_VSERVER", "ALL_VSERVERS"],
                "type": "str",
            },
            "bgp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "decrementttl": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ftp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gui": {"choices": ["ENABLED", "SECUREONLY", "DISABLED"], "type": "str"},
            "hostroute": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hostrtgw": {"type": "str"},
            "icmp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "icmpresponse": {
                "choices": ["NONE", "ONE_VSERVER", "ALL_VSERVERS", "VSVR_CNTRLD"],
                "type": "str",
            },
            "ipaddress": {"type": "str"},
            "metric": {"type": "int"},
            "mgmtaccess": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mptcpadvertise": {"choices": [True, False], "type": "str"},
            "netmask": {"type": "str"},
            "networkroute": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ospf": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ospfarea": {"type": "int"},
            "ospflsatype": {"choices": ["TYPE1", "TYPE5"], "type": "str"},
            "ownerdownresponse": {"choices": [True, False], "type": "str"},
            "ownernode": {"type": "int"},
            "restrictaccess": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "snmp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssh": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tag": {"type": "int"},
            "td": {"type": "int"},
            "telnet": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "type": {
                "choices": ["SNIP", "VIP", "NSIP", "HostIP", "GSLBsiteIP", "CLIP"],
                "type": "str",
            },
            "vrid": {"type": "int"},
            "vserver": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "vserverrhilevel": {
                "choices": ["ONE_VSERVER", "ALL_VSERVERS", "NONE", "VSVR_CNTRLD"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "ipaddress",
            "netmask",
            "arp",
            "icmp",
            "vserver",
            "telnet",
            "ftp",
            "gui",
            "ssh",
            "snmp",
            "mgmtaccess",
            "restrictaccess",
            "decrementttl",
            "dynamicrouting",
            "hostroute",
            "advertiseondefaultpartition",
            "networkroute",
            "hostrtgw",
            "metric",
            "vserverrhilevel",
            "ospflsatype",
            "ospfarea",
            "tag",
            "vrid",
            "icmpresponse",
            "arpresponse",
            "ownerdownresponse",
            "arpowner",
            "mptcpadvertise",
            "td",
        ],
    },
    "nsip6": {
        "add_payload_keys": [
            "ipv6address",
            "scope",
            "type",
            "vlan",
            "nd",
            "icmp",
            "vserver",
            "telnet",
            "ftp",
            "gui",
            "ssh",
            "snmp",
            "mgmtaccess",
            "restrictaccess",
            "dynamicrouting",
            "decrementhoplimit",
            "hostroute",
            "advertiseondefaultpartition",
            "networkroute",
            "tag",
            "ip6hostrtgw",
            "metric",
            "vserverrhilevel",
            "ospf6lsatype",
            "ospfarea",
            "map",
            "vrid6",
            "ownernode",
            "ownerdownresponse",
            "td",
            "ndowner",
            "mptcpadvertise",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["td"],
        "immutable_keys": ["type", "scope", "vlan", "ownernode"],
        "primary_key": "ipv6address",
        "readwrite_arguments": {
            "advertiseondefaultpartition": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "decrementhoplimit": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ftp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "gui": {"choices": ["ENABLED", "SECUREONLY", "DISABLED"], "type": "str"},
            "hostroute": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "icmp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ip6hostrtgw": {"type": "str"},
            "ipv6address": {"type": "str"},
            "map": {"type": "str"},
            "metric": {"type": "int"},
            "mgmtaccess": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mptcpadvertise": {"choices": [True, False], "type": "str"},
            "nd": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ndowner": {"type": "int"},
            "networkroute": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ospf6lsatype": {"choices": ["INTRA_AREA", "EXTERNAL"], "type": "str"},
            "ospfarea": {"type": "int"},
            "ownerdownresponse": {"choices": [True, False], "type": "str"},
            "ownernode": {"type": "int"},
            "restrictaccess": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "scope": {"choices": ["global", "link-local"], "type": "str"},
            "snmp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssh": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tag": {"type": "int"},
            "td": {"type": "int"},
            "telnet": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "type": {
                "choices": [
                    "NSIP",
                    "VIP",
                    "SNIP",
                    "GSLBsiteIP",
                    "ADNSsvcIP",
                    "RADIUSListenersvcIP",
                    "CLIP",
                ],
                "type": "str",
            },
            "vlan": {"type": "int"},
            "vrid6": {"type": "int"},
            "vserver": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "vserverrhilevel": {
                "choices": ["ONE_VSERVER", "ALL_VSERVERS", "NONE", "VSVR_CNTRLD"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "ipv6address",
            "nd",
            "icmp",
            "vserver",
            "telnet",
            "ftp",
            "gui",
            "ssh",
            "snmp",
            "mgmtaccess",
            "ownerdownresponse",
            "restrictaccess",
            "map",
            "decrementhoplimit",
            "dynamicrouting",
            "hostroute",
            "advertiseondefaultpartition",
            "networkroute",
            "ip6hostrtgw",
            "metric",
            "vserverrhilevel",
            "ospf6lsatype",
            "ospfarea",
            "tag",
            "vrid6",
            "ndowner",
            "mptcpadvertise",
            "td",
        ],
    },
    "nslicenseproxyserver": {
        "add_payload_keys": ["serverip", "servername", "port"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["servername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servername"],
        "immutable_keys": [],
        "primary_key": "serverip",
        "readwrite_arguments": {
            "port": {"type": "int"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
        },
        "update_payload_keys": ["serverip", "servername", "port"],
    },
    "nslicenseserver": {
        "add_payload_keys": [
            "licenseserverip",
            "servername",
            "port",
            "forceupdateip",
            "licensemode",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["servername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servername"],
        "immutable_keys": ["forceupdateip"],
        "primary_key": "licenseserverip",
        "readwrite_arguments": {
            "forceupdateip": {"type": "bool"},
            "licensemode": {
                "choices": [
                    "Pooled",
                    "VCPU",
                    "CICO",
                    "SelfManagedPool",
                    "SelfManagedvCPU",
                ],
                "type": "str",
            },
            "licenseserverip": {"type": "str"},
            "nodeid": {"type": "int"},
            "port": {"type": "int"},
            "servername": {"type": "str"},
        },
        "update_payload_keys": ["licenseserverip", "servername", "port", "licensemode"],
    },
    "nslimitidentifier": {
        "add_payload_keys": [
            "limitidentifier",
            "threshold",
            "timeslice",
            "mode",
            "limittype",
            "selectorname",
            "maxbandwidth",
            "trapsintimeslice",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "limitidentifier",
        "readwrite_arguments": {
            "limitidentifier": {"type": "str"},
            "limittype": {"choices": ["BURSTY", "SMOOTH"], "type": "str"},
            "maxbandwidth": {"type": "int"},
            "mode": {"choices": ["CONNECTION", "REQUEST_RATE", "NONE"], "type": "str"},
            "selectorname": {"type": "str"},
            "threshold": {"type": "int"},
            "timeslice": {"type": "int"},
            "trapsintimeslice": {"type": "int"},
        },
        "update_payload_keys": [
            "limitidentifier",
            "threshold",
            "timeslice",
            "mode",
            "selectorname",
            "maxbandwidth",
            "trapsintimeslice",
            "limittype",
        ],
    },
    "nslimitselector": {
        "add_payload_keys": ["selectorname", "rule"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "selectorname",
        "readwrite_arguments": {
            "rule": {"type": "list"},
            "selectorname": {"type": "str"},
        },
        "update_payload_keys": ["selectorname", "rule"],
    },
    "nspartition": {
        "add_payload_keys": [
            "partitionname",
            "maxbandwidth",
            "minbandwidth",
            "maxconn",
            "maxmemlimit",
            "partitionmac",
        ],
        "bindings": [
            "nspartition_vlan_binding",
            "nspartition_bridgegroup_binding",
            "nspartition_vxlan_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "partitionname",
        "readwrite_arguments": {
            "force": {"type": "bool"},
            "maxbandwidth": {"type": "int"},
            "maxconn": {"type": "int"},
            "maxmemlimit": {"type": "int"},
            "minbandwidth": {"type": "int"},
            "nspartition_bridgegroup_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "nspartition_vlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "nspartition_vxlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "partitionmac": {"type": "str"},
            "partitionname": {"type": "str"},
            "save": {"type": "bool"},
        },
        "update_payload_keys": [
            "partitionname",
            "maxbandwidth",
            "minbandwidth",
            "maxconn",
            "maxmemlimit",
            "partitionmac",
        ],
    },
    "nspartition_bridgegroup_binding": {
        "add_payload_keys": ["partitionname", "bridgegroup"],
        "bindprimary_key": "bridgegroup",
        "delete_arg_keys": ["bridgegroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bridgegroup"],
        "immutable_keys": [],
        "primary_key": "partitionname",
        "readwrite_arguments": {
            "bridgegroup": {"type": "int"},
            "partitionname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "nspartition_vlan_binding": {
        "add_payload_keys": ["partitionname", "vlan"],
        "bindprimary_key": "vlan",
        "delete_arg_keys": ["vlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vlan"],
        "immutable_keys": [],
        "primary_key": "partitionname",
        "readwrite_arguments": {
            "partitionname": {"type": "str"},
            "vlan": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nspartition_vxlan_binding": {
        "add_payload_keys": ["partitionname", "vxlan"],
        "bindprimary_key": "vxlan",
        "delete_arg_keys": ["vxlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vxlan"],
        "immutable_keys": [],
        "primary_key": "partitionname",
        "readwrite_arguments": {
            "partitionname": {"type": "str"},
            "vxlan": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nsservicefunction": {
        "add_payload_keys": ["servicefunctionname", "ingressvlan"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "servicefunctionname",
        "readwrite_arguments": {
            "ingressvlan": {"type": "int"},
            "servicefunctionname": {"type": "str"},
        },
        "update_payload_keys": ["servicefunctionname", "ingressvlan"],
    },
    "nsservicepath": {
        "add_payload_keys": ["servicepathname"],
        "bindings": ["nsservicepath_nsservicefunction_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["servicepathname"],
        "primary_key": "servicepathname",
        "readwrite_arguments": {
            "nsservicepath_nsservicefunction_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicepathname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "nsservicepath_nsservicefunction_binding": {
        "add_payload_keys": ["servicepathname", "servicefunction", "index"],
        "bindprimary_key": "servicefunction",
        "delete_arg_keys": ["servicefunction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servicefunction"],
        "immutable_keys": [],
        "primary_key": "servicepathname",
        "readwrite_arguments": {
            "index": {"type": "int"},
            "servicefunction": {"type": "str"},
            "servicepathname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "nssimpleacl": {
        "add_payload_keys": [
            "aclname",
            "aclaction",
            "td",
            "srcip",
            "destport",
            "ttl",
            "protocol",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "protocol",
            "srcip",
            "destport",
            "aclname",
            "aclaction",
            "ttl",
            "td",
        ],
        "primary_key": "aclname",
        "readwrite_arguments": {
            "aclaction": {"choices": ["DENY"], "type": "str"},
            "aclname": {"type": "str"},
            "destport": {"type": "int"},
            "estsessions": {"type": "bool"},
            "protocol": {"choices": ["TCP", "UDP"], "type": "str"},
            "srcip": {"type": "str"},
            "td": {"type": "int"},
            "ttl": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nssimpleacl6": {
        "add_payload_keys": [
            "aclname",
            "td",
            "aclaction",
            "srcipv6",
            "destport",
            "ttl",
            "protocol",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "srcipv6",
            "protocol",
            "destport",
            "aclname",
            "aclaction",
            "ttl",
            "td",
        ],
        "primary_key": "aclname",
        "readwrite_arguments": {
            "aclaction": {"choices": ["DENY"], "type": "str"},
            "aclname": {"type": "str"},
            "destport": {"type": "int"},
            "estsessions": {"type": "bool"},
            "protocol": {"choices": ["TCP", "UDP"], "type": "str"},
            "srcipv6": {"type": "str"},
            "td": {"type": "int"},
            "ttl": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "nstcpprofile": {
        "add_payload_keys": [
            "name",
            "ws",
            "sack",
            "wsval",
            "nagle",
            "ackonpush",
            "mss",
            "maxburst",
            "initialcwnd",
            "delayedack",
            "oooqsize",
            "maxpktpermss",
            "pktperretx",
            "minrto",
            "slowstartincr",
            "buffersize",
            "syncookie",
            "kaprobeupdatelastactivity",
            "flavor",
            "dynamicreceivebuffering",
            "ka",
            "kaconnidletime",
            "kamaxprobes",
            "kaprobeinterval",
            "sendbuffsize",
            "mptcp",
            "establishclientconn",
            "tcpsegoffload",
            "rstwindowattenuate",
            "rstmaxack",
            "spoofsyndrop",
            "ecn",
            "mptcpdropdataonpreestsf",
            "mptcpfastopen",
            "mptcpsessiontimeout",
            "timestamp",
            "dsack",
            "ackaggregation",
            "frto",
            "maxcwnd",
            "fack",
            "tcpmode",
            "tcpfastopen",
            "hystart",
            "dupackthresh",
            "burstratecontrol",
            "tcprate",
            "rateqmax",
            "drophalfclosedconnontimeout",
            "dropestconnontimeout",
            "applyadaptivetcp",
            "tcpfastopencookiesize",
            "taillossprobe",
            "clientiptcpoption",
            "clientiptcpoptionnumber",
            "mpcapablecbit",
            "sendclientportintcpoption",
            "slowstartthreshold",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ackaggregation": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ackonpush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "applyadaptivetcp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "buffersize": {"type": "int"},
            "burstratecontrol": {
                "choices": ["DISABLED", "FIXED", "DYNAMIC"],
                "type": "str",
            },
            "clientiptcpoption": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientiptcpoptionnumber": {"type": "int"},
            "delayedack": {"type": "int"},
            "dropestconnontimeout": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "drophalfclosedconnontimeout": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "dsack": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dupackthresh": {"type": "int"},
            "dynamicreceivebuffering": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "ecn": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "establishclientconn": {
                "choices": ["AUTOMATIC", "CONN_ESTABLISHED", "ON_FIRST_DATA"],
                "type": "str",
            },
            "fack": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "flavor": {
                "choices": ["Default", "Westwood", "BIC", "CUBIC", "Nile"],
                "type": "str",
            },
            "frto": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hystart": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "initialcwnd": {"type": "int"},
            "ka": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "kaconnidletime": {"type": "int"},
            "kamaxprobes": {"type": "int"},
            "kaprobeinterval": {"type": "int"},
            "kaprobeupdatelastactivity": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "maxburst": {"type": "int"},
            "maxcwnd": {"type": "int"},
            "maxpktpermss": {"type": "int"},
            "minrto": {"type": "int"},
            "mpcapablecbit": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mptcp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mptcpdropdataonpreestsf": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "mptcpfastopen": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mptcpsessiontimeout": {"type": "int"},
            "mss": {"type": "int"},
            "nagle": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "oooqsize": {"type": "int"},
            "pktperretx": {"type": "int"},
            "rateqmax": {"type": "int"},
            "rstmaxack": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rstwindowattenuate": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sack": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sendbuffsize": {"type": "int"},
            "sendclientportintcpoption": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "slowstartincr": {"type": "int"},
            "slowstartthreshold": {"type": "int"},
            "spoofsyndrop": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "syncookie": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "taillossprobe": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tcpfastopen": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tcpfastopencookiesize": {"type": "int"},
            "tcpmode": {"choices": ["TRANSPARENT", "ENDPOINT"], "type": "str"},
            "tcprate": {"type": "int"},
            "tcpsegoffload": {"choices": ["AUTOMATIC", "DISABLED"], "type": "str"},
            "timestamp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ws": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "wsval": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "ws",
            "sack",
            "wsval",
            "nagle",
            "ackonpush",
            "mss",
            "maxburst",
            "initialcwnd",
            "delayedack",
            "oooqsize",
            "maxpktpermss",
            "pktperretx",
            "minrto",
            "slowstartincr",
            "buffersize",
            "syncookie",
            "kaprobeupdatelastactivity",
            "flavor",
            "dynamicreceivebuffering",
            "ka",
            "kaconnidletime",
            "kamaxprobes",
            "kaprobeinterval",
            "sendbuffsize",
            "mptcp",
            "establishclientconn",
            "tcpsegoffload",
            "rstwindowattenuate",
            "rstmaxack",
            "spoofsyndrop",
            "ecn",
            "mptcpdropdataonpreestsf",
            "mptcpfastopen",
            "mptcpsessiontimeout",
            "timestamp",
            "dsack",
            "ackaggregation",
            "frto",
            "maxcwnd",
            "fack",
            "tcpmode",
            "tcpfastopen",
            "hystart",
            "dupackthresh",
            "burstratecontrol",
            "tcprate",
            "rateqmax",
            "drophalfclosedconnontimeout",
            "dropestconnontimeout",
            "applyadaptivetcp",
            "tcpfastopencookiesize",
            "taillossprobe",
            "clientiptcpoption",
            "mpcapablecbit",
            "sendclientportintcpoption",
            "slowstartthreshold",
            "clientiptcpoptionnumber",
        ],
    },
    "nstimer": {
        "add_payload_keys": ["name", "interval", "comment", "unit"],
        "bindings": ["nstimer_autoscalepolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "interval": {"type": "int"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "nstimer_autoscalepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "unit": {"choices": ["SEC", "MIN"], "type": "str"},
        },
        "update_payload_keys": ["name", "interval", "unit", "comment"],
    },
    "nstimer_autoscalepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "vserver",
            "samplesize",
            "threshold",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "name": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "samplesize": {"type": "int"},
            "threshold": {"type": "int"},
            "vserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "nstrafficdomain": {
        "add_payload_keys": ["td", "aliasname", "vmac"],
        "bindings": [
            "nstrafficdomain_vlan_binding",
            "nstrafficdomain_vxlan_binding",
            "nstrafficdomain_bridgegroup_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["td"],
        "enable_payload_keys": ["td"],
        "get_arg_keys": [],
        "immutable_keys": ["aliasname", "td", "vmac"],
        "primary_key": "td",
        "readwrite_arguments": {
            "aliasname": {"type": "str"},
            "nstrafficdomain_bridgegroup_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "nstrafficdomain_vlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "nstrafficdomain_vxlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "td": {"type": "int"},
            "vmac": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "nstrafficdomain_bridgegroup_binding": {
        "add_payload_keys": ["td", "bridgegroup"],
        "bindprimary_key": "bridgegroup",
        "delete_arg_keys": ["bridgegroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["bridgegroup"],
        "immutable_keys": [],
        "primary_key": "td",
        "readwrite_arguments": {"bridgegroup": {"type": "int"}, "td": {"type": "int"}},
        "update_payload_keys": [],
    },
    "nstrafficdomain_vlan_binding": {
        "add_payload_keys": ["td", "vlan"],
        "bindprimary_key": "vlan",
        "delete_arg_keys": ["vlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vlan"],
        "immutable_keys": [],
        "primary_key": "td",
        "readwrite_arguments": {"td": {"type": "int"}, "vlan": {"type": "int"}},
        "update_payload_keys": [],
    },
    "nstrafficdomain_vxlan_binding": {
        "add_payload_keys": ["td", "vxlan"],
        "bindprimary_key": "vxlan",
        "delete_arg_keys": ["vxlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vxlan"],
        "immutable_keys": [],
        "primary_key": "td",
        "readwrite_arguments": {"td": {"type": "int"}, "vxlan": {"type": "int"}},
        "update_payload_keys": [],
    },
    "nsvariable": {
        "add_payload_keys": [
            "name",
            "type",
            "scope",
            "iffull",
            "ifvaluetoobig",
            "ifnovalue",
            "init",
            "expires",
            "comment",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["scope"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "expires": {"type": "int"},
            "iffull": {"choices": ["undef", "lru"], "type": "str"},
            "ifnovalue": {"choices": ["undef", "init"], "type": "str"},
            "ifvaluetoobig": {"choices": ["undef", "truncate"], "type": "str"},
            "init": {"type": "str"},
            "name": {"type": "str"},
            "scope": {"choices": ["global", "transaction"], "type": "str"},
            "type": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "type",
            "iffull",
            "ifvaluetoobig",
            "ifnovalue",
            "init",
            "expires",
            "comment",
        ],
    },
    "nsxmlnamespace": {
        "add_payload_keys": ["prefix", "namespace", "description"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "prefix",
        "readwrite_arguments": {
            "Namespace": {"type": "str"},
            "description": {"type": "str"},
            "prefix": {"type": "str"},
        },
        "update_payload_keys": ["prefix", "namespace", "description"],
    },
    "ntpserver": {
        "add_payload_keys": [
            "serverip",
            "servername",
            "minpoll",
            "maxpoll",
            "autokey",
            "key",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["servername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["servername"],
        "immutable_keys": [],
        "primary_key": "serverip",
        "readwrite_arguments": {
            "autokey": {"type": "bool"},
            "key": {"type": "int"},
            "maxpoll": {"type": "int"},
            "minpoll": {"type": "int"},
            "preferredntpserver": {"choices": [True, False], "type": "str"},
            "serverip": {"type": "str"},
            "servername": {"type": "str"},
        },
        "update_payload_keys": [
            "serverip",
            "servername",
            "minpoll",
            "maxpoll",
            "preferredntpserver",
            "autokey",
            "key",
        ],
    },
    "onlinkipv6prefix": {
        "add_payload_keys": [
            "ipv6prefix",
            "onlinkprefix",
            "autonomusprefix",
            "depricateprefix",
            "decrementprefixlifetimes",
            "prefixvalidelifetime",
            "prefixpreferredlifetime",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "ipv6prefix",
        "readwrite_arguments": {
            "autonomusprefix": {"choices": [True, False], "type": "str"},
            "decrementprefixlifetimes": {"choices": [True, False], "type": "str"},
            "depricateprefix": {"choices": [True, False], "type": "str"},
            "ipv6prefix": {"type": "str"},
            "onlinkprefix": {"choices": [True, False], "type": "str"},
            "prefixpreferredlifetime": {"type": "int"},
            "prefixvalidelifetime": {"type": "int"},
        },
        "update_payload_keys": [
            "ipv6prefix",
            "onlinkprefix",
            "autonomusprefix",
            "depricateprefix",
            "decrementprefixlifetimes",
            "prefixvalidelifetime",
            "prefixpreferredlifetime",
        ],
    },
    "pcpprofile": {
        "add_payload_keys": [
            "name",
            "mapping",
            "peer",
            "minmaplife",
            "maxmaplife",
            "announcemulticount",
            "thirdparty",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "announcemulticount": {"type": "int"},
            "mapping": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxmaplife": {"type": "int"},
            "minmaplife": {"type": "int"},
            "name": {"type": "str"},
            "peer": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "thirdparty": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "mapping",
            "peer",
            "minmaplife",
            "maxmaplife",
            "announcemulticount",
            "thirdparty",
        ],
    },
    "pcpserver": {
        "add_payload_keys": ["name", "ipaddress", "port", "pcpprofile"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["ipaddress"],
        "primary_key": "name",
        "readwrite_arguments": {
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "pcpprofile": {"type": "str"},
            "port": {"type": "int"},
        },
        "update_payload_keys": ["name", "port", "pcpprofile"],
    },
    "policydataset": {
        "add_payload_keys": ["name", "type", "comment", "patsetfile"],
        "bindings": ["policydataset_value_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["comment", "name", "patsetfile", "type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "patsetfile": {"type": "str"},
            "policydataset_value_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "type": {
                "choices": ["ipv4", "number", "ipv6", "ulong", "double", "mac"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "policydataset_value_binding": {
        "add_payload_keys": ["name", "value", "endrange", "comment", "index"],
        "bindprimary_key": "value",
        "delete_arg_keys": ["value", "endrange"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["value", "endrange"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "endrange": {"type": "str"},
            "index": {"type": "int"},
            "name": {"type": "str"},
            "value": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "policyexpression": {
        "add_payload_keys": ["name", "value", "comment", "clientsecuritymessage"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["type"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientsecuritymessage": {"type": "str"},
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "type": {"choices": ["CLASSIC", "ADVANCED"], "type": "str"},
            "value": {"type": "str"},
        },
        "update_payload_keys": ["name", "value", "comment", "clientsecuritymessage"],
    },
    "policyhttpcallout": {
        "add_payload_keys": [
            "name",
            "ipaddress",
            "port",
            "vserver",
            "returntype",
            "httpmethod",
            "hostexpr",
            "urlstemexpr",
            "headers",
            "parameters",
            "bodyexpr",
            "fullreqexpr",
            "scheme",
            "resultexpr",
            "cacheforsecs",
            "comment",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bodyexpr": {"type": "str"},
            "cacheforsecs": {"type": "int"},
            "comment": {"type": "str"},
            "fullreqexpr": {"type": "str"},
            "headers": {"type": "list"},
            "hostexpr": {"type": "str"},
            "httpmethod": {"choices": ["GET", "POST"], "type": "str"},
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "parameters": {"type": "list"},
            "port": {"type": "int"},
            "resultexpr": {"type": "str"},
            "returntype": {"choices": ["BOOL", "NUM", "TEXT"], "type": "str"},
            "scheme": {"choices": ["http", "https"], "type": "str"},
            "urlstemexpr": {"type": "str"},
            "vserver": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ipaddress",
            "port",
            "vserver",
            "returntype",
            "httpmethod",
            "hostexpr",
            "urlstemexpr",
            "headers",
            "parameters",
            "bodyexpr",
            "fullreqexpr",
            "scheme",
            "resultexpr",
            "cacheforsecs",
            "comment",
        ],
    },
    "policymap": {
        "add_payload_keys": ["mappolicyname", "sd", "su", "td", "tu"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["su", "mappolicyname", "tu", "td", "sd"],
        "primary_key": "mappolicyname",
        "readwrite_arguments": {
            "mappolicyname": {"type": "str"},
            "sd": {"type": "str"},
            "su": {"type": "str"},
            "td": {"type": "str"},
            "tu": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "policypatset": {
        "add_payload_keys": ["name", "comment", "patsetfile"],
        "bindings": ["policypatset_pattern_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "patsetfile", "comment"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "patsetfile": {"type": "str"},
            "policypatset_pattern_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "policypatset_pattern_binding": {
        "add_payload_keys": ["name", "string", "comment", "index", "charset"],
        "bindprimary_key": "string",
        "delete_arg_keys": ["string"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["string"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "String": {"type": "str"},
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "charset": {"choices": ["ASCII", "UTF_8"], "type": "str"},
            "comment": {"type": "str"},
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "index": {"type": "int"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "policypatsetfile": {
        "add_payload_keys": ["name", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["imported"],
        "immutable_keys": ["name", "comment"],
        "primary_key": "name",
        "readwrite_arguments": {
            "charset": {"choices": ["ASCII", "UTF_8"], "type": "str"},
            "comment": {"type": "str"},
            "delimiter": {"type": "str"},
            "imported": {"type": "bool"},
            "name": {"type": "str"},
            "overwrite": {"type": "bool"},
            "src": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "policystringmap": {
        "add_payload_keys": ["name", "comment"],
        "bindings": ["policystringmap_pattern_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "policystringmap_pattern_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": ["name", "comment"],
    },
    "policystringmap_pattern_binding": {
        "add_payload_keys": ["name", "key", "comment", "value"],
        "bindprimary_key": "key",
        "delete_arg_keys": ["key"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["key"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "key": {"type": "str"},
            "name": {"type": "str"},
            "value": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "policyurlset": {
        "add_payload_keys": ["name", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["imported"],
        "immutable_keys": ["name", "comment"],
        "primary_key": "name",
        "readwrite_arguments": {
            "canaryurl": {"type": "str"},
            "comment": {"type": "str"},
            "delimiter": {"type": "str"},
            "imported": {"type": "bool"},
            "interval": {"type": "int"},
            "matchedid": {"type": "int"},
            "name": {"type": "str"},
            "overwrite": {"type": "bool"},
            "privateset": {"type": "bool"},
            "rowseparator": {"type": "str"},
            "subdomainexactmatch": {"type": "bool"},
            "url": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "quicbridgeprofile": {
        "add_payload_keys": ["name", "routingalgorithm", "serveridlength"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "routingalgorithm": {"choices": ["PLAINTEXT"], "type": "str"},
            "serveridlength": {"type": "int"},
        },
        "update_payload_keys": ["name", "routingalgorithm", "serveridlength"],
    },
    "quicprofile": {
        "add_payload_keys": [
            "name",
            "ackdelayexponent",
            "activeconnectionidlimit",
            "activeconnectionmigration",
            "congestionctrlalgorithm",
            "initialmaxdata",
            "initialmaxstreamdatabidilocal",
            "initialmaxstreamdatabidiremote",
            "initialmaxstreamdatauni",
            "initialmaxstreamsbidi",
            "initialmaxstreamsuni",
            "maxackdelay",
            "maxidletimeout",
            "maxudpdatagramsperburst",
            "maxudppayloadsize",
            "newtokenvalidityperiod",
            "retrytokenvalidityperiod",
            "statelessaddressvalidation",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ackdelayexponent": {"type": "int"},
            "activeconnectionidlimit": {"type": "int"},
            "activeconnectionmigration": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "congestionctrlalgorithm": {
                "choices": ["Default", "NewReno", "CUBIC", "BBR"],
                "type": "str",
            },
            "initialmaxdata": {"type": "int"},
            "initialmaxstreamdatabidilocal": {"type": "int"},
            "initialmaxstreamdatabidiremote": {"type": "int"},
            "initialmaxstreamdatauni": {"type": "int"},
            "initialmaxstreamsbidi": {"type": "int"},
            "initialmaxstreamsuni": {"type": "int"},
            "maxackdelay": {"type": "int"},
            "maxidletimeout": {"type": "int"},
            "maxudpdatagramsperburst": {"type": "int"},
            "maxudppayloadsize": {"type": "int"},
            "name": {"type": "str"},
            "newtokenvalidityperiod": {"type": "int"},
            "retrytokenvalidityperiod": {"type": "int"},
            "statelessaddressvalidation": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "ackdelayexponent",
            "activeconnectionidlimit",
            "activeconnectionmigration",
            "congestionctrlalgorithm",
            "initialmaxdata",
            "initialmaxstreamdatabidilocal",
            "initialmaxstreamdatabidiremote",
            "initialmaxstreamdatauni",
            "initialmaxstreamsbidi",
            "initialmaxstreamsuni",
            "maxackdelay",
            "maxidletimeout",
            "maxudpdatagramsperburst",
            "maxudppayloadsize",
            "newtokenvalidityperiod",
            "retrytokenvalidityperiod",
            "statelessaddressvalidation",
        ],
    },
    "radiusnode": {
        "add_payload_keys": ["nodeprefix", "radkey"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "nodeprefix",
        "readwrite_arguments": {
            "nodeprefix": {"type": "str"},
            "radkey": {"type": "str"},
        },
        "update_payload_keys": ["nodeprefix", "radkey"],
    },
    "rdpclientprofile": {
        "add_payload_keys": [
            "name",
            "rdpurloverride",
            "redirectclipboard",
            "redirectdrives",
            "redirectprinters",
            "redirectcomports",
            "redirectpnpdevices",
            "keyboardhook",
            "audiocapturemode",
            "videoplaybackmode",
            "multimonitorsupport",
            "rdpcookievalidity",
            "addusernameinrdpfile",
            "rdpfilename",
            "rdphost",
            "rdplistener",
            "rdpcustomparams",
            "psk",
            "randomizerdpfilename",
            "rdplinkattribute",
            "rdpvalidateclientip",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "addusernameinrdpfile": {"choices": [True, False], "type": "str"},
            "audiocapturemode": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "keyboardhook": {
                "choices": ["OnLocal", "OnRemote", "InFullScreenMode"],
                "type": "str",
            },
            "multimonitorsupport": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "name": {"type": "str"},
            "psk": {"type": "str"},
            "randomizerdpfilename": {"choices": [True, False], "type": "str"},
            "rdpcookievalidity": {"type": "int"},
            "rdpcustomparams": {"type": "str"},
            "rdpfilename": {"type": "str"},
            "rdphost": {"type": "str"},
            "rdplinkattribute": {"type": "str"},
            "rdplistener": {"type": "str"},
            "rdpurloverride": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "rdpvalidateclientip": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "redirectclipboard": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "redirectcomports": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "redirectdrives": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "redirectpnpdevices": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "redirectprinters": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
            "videoplaybackmode": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rdpurloverride",
            "redirectclipboard",
            "redirectdrives",
            "redirectprinters",
            "redirectcomports",
            "redirectpnpdevices",
            "keyboardhook",
            "audiocapturemode",
            "videoplaybackmode",
            "multimonitorsupport",
            "rdpcookievalidity",
            "addusernameinrdpfile",
            "rdpfilename",
            "rdphost",
            "rdplistener",
            "rdpcustomparams",
            "psk",
            "randomizerdpfilename",
            "rdplinkattribute",
            "rdpvalidateclientip",
        ],
    },
    "rdpserverprofile": {
        "add_payload_keys": ["name", "rdpip", "rdpport", "psk", "rdpredirection"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "psk": {"type": "str"},
            "rdpip": {"type": "str"},
            "rdpport": {"type": "int"},
            "rdpredirection": {"choices": ["ENABLE", "DISABLE"], "type": "str"},
        },
        "update_payload_keys": ["name", "rdpip", "rdpport", "psk", "rdpredirection"],
    },
    "reportingconfig": {
        "add_payload_keys": ["entitytypes", "name"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["name"],
        "immutable_keys": ["entitytypes", "name"],
        "primary_key": "entitytypes",
        "readwrite_arguments": {
            "entitytypes": {
                "choices": [
                    "appfwpolicy",
                    "appfwpolicylabel",
                    "appfwprofile",
                    "appqoepolicy",
                    "authenticationloginschemapolicy",
                    "authenticationoauthidppolicy",
                    "authenticationpolicy",
                    "authenticationpolicylabel",
                    "authenticationsamlidppolicy",
                    "authenticationvserver",
                    "authorizationpolicylabel",
                    "botpolicy",
                    "botpolicylabel",
                    "botprofile",
                    "cachecontentgroup",
                    "cachepolicy",
                    "cachepolicylabel",
                    "cmppolicy",
                    "cmppolicylabel",
                    "contentinspectionpolicy",
                    "contentinspectionpolicylabel",
                    "crvserver",
                    "csvserver",
                    "dnspolicylabel",
                    "dnsrecords",
                    "dospolicy",
                    "gslbdomain",
                    "gslbservice",
                    "gslbservicegroup",
                    "gslbservicegroupmember",
                    "gslbsite",
                    "gslbvserver",
                    "inat",
                    "inatsession",
                    "lbvserver",
                    "lldp",
                    "nsacl",
                    "nsacl6",
                    "nslimitidentifier",
                    "nsmemory",
                    "nspbr",
                    "nspbr6",
                    "pcpserver",
                    "responderpolicy",
                    "responderpolicylabel",
                    "rewritepolicy",
                    "rewritepolicylabel",
                    "rnatip",
                    "service",
                    "servicegroup",
                    "servicegroupmember",
                    "spilloverpolicy",
                    "sslvserver",
                    "tmsessionpolicy",
                    "tmtrafficpolicy",
                    "tunnelip",
                    "tunnelip6",
                    "uservserver",
                    "videooptimizationdetectionpolicy",
                    "videooptimizationdetectionpolicylabel",
                    "videooptimizationpacingpolicy",
                    "videooptimizationpacingpolicylabel",
                    "vlan",
                    "vxlan",
                ],
                "type": "str",
            },
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "responderaction": {
        "add_payload_keys": [
            "name",
            "type",
            "target",
            "htmlpage",
            "bypasssafetycheck",
            "comment",
            "responsestatuscode",
            "reasonphrase",
            "headers",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "bypasssafetycheck": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "headers": {"type": "list"},
            "htmlpage": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "reasonphrase": {"type": "str"},
            "responsestatuscode": {"type": "int"},
            "target": {"type": "str"},
            "type": {
                "choices": [
                    "noop",
                    "respondwith",
                    "redirect",
                    "respondwithhtmlpage",
                    "sqlresponse_ok",
                    "sqlresponse_error",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "target",
            "htmlpage",
            "responsestatuscode",
            "reasonphrase",
            "comment",
            "headers",
            "bypasssafetycheck",
        ],
    },
    "responderglobal_responderpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "OVERRIDE",
                    "DEFAULT",
                    "OTHERTCP_REQ_OVERRIDE",
                    "OTHERTCP_REQ_DEFAULT",
                    "SIPUDP_REQ_OVERRIDE",
                    "SIPUDP_REQ_DEFAULT",
                    "SIPTCP_REQ_OVERRIDE",
                    "SIPTCP_REQ_DEFAULT",
                    "MSSQL_REQ_OVERRIDE",
                    "MSSQL_REQ_DEFAULT",
                    "MYSQL_REQ_OVERRIDE",
                    "MYSQL_REQ_DEFAULT",
                    "NAT_REQ_OVERRIDE",
                    "NAT_REQ_DEFAULT",
                    "DIAMETER_REQ_OVERRIDE",
                    "DIAMETER_REQ_DEFAULT",
                    "RADIUS_REQ_OVERRIDE",
                    "RADIUS_REQ_DEFAULT",
                    "DNS_REQ_OVERRIDE",
                    "DNS_REQ_DEFAULT",
                    "MQTT_REQ_OVERRIDE",
                    "MQTT_REQ_DEFAULT",
                    "MQTT_JUMBO_REQ_OVERRIDE",
                    "MQTT_JUMBO_REQ_DEFAULT",
                    "QUIC_OVERRIDE",
                    "QUIC_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "responderpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
            "appflowaction",
        ],
        "bindings": ["responderpolicylabel_responderpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "appflowaction": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "responderpolicylabel_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
            "appflowaction",
        ],
    },
    "responderpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype", "comment"],
        "bindings": ["responderpolicylabel_responderpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {
                "choices": [
                    "HTTP",
                    "OTHERTCP",
                    "SIP_UDP",
                    "SIP_TCP",
                    "MYSQL",
                    "MSSQL",
                    "NAT",
                    "DIAMETER",
                    "RADIUS",
                    "DNS",
                    "MQTT",
                    "MQTT_JUMBO",
                    "QUIC_BRIDGE",
                    "HTTP_QUIC",
                ],
                "type": "str",
            },
            "responderpolicylabel_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "responderpolicylabel_responderpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "rewriteaction": {
        "add_payload_keys": [
            "name",
            "type",
            "target",
            "stringbuilderexpr",
            "search",
            "refinesearch",
            "comment",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "refinesearch": {"type": "str"},
            "search": {"type": "str"},
            "stringbuilderexpr": {"type": "str"},
            "target": {"type": "str"},
            "type": {
                "choices": [
                    "noop",
                    "delete",
                    "insert_http_header",
                    "delete_http_header",
                    "corrupt_http_header",
                    "insert_before",
                    "insert_after",
                    "replace",
                    "replace_http_res",
                    "delete_all",
                    "replace_all",
                    "insert_before_all",
                    "insert_after_all",
                    "clientless_vpn_encode",
                    "clientless_vpn_encode_all",
                    "clientless_vpn_decode",
                    "clientless_vpn_decode_all",
                    "insert_sip_header",
                    "delete_sip_header",
                    "corrupt_sip_header",
                    "replace_sip_res",
                    "replace_diameter_header_field",
                    "replace_dns_header_field",
                    "replace_dns_answer_section",
                    "replace_mqtt",
                    "delete_mqtt",
                    "insert_mqtt",
                    "insert_before_mqtt",
                    "insert_after_mqtt",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "target",
            "stringbuilderexpr",
            "search",
            "refinesearch",
            "comment",
        ],
    },
    "rewriteglobal_rewritepolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                    "OTHERTCP_REQ_OVERRIDE",
                    "OTHERTCP_REQ_DEFAULT",
                    "OTHERTCP_RES_OVERRIDE",
                    "OTHERTCP_RES_DEFAULT",
                    "SIPUDP_REQ_OVERRIDE",
                    "SIPUDP_REQ_DEFAULT",
                    "SIPUDP_RES_OVERRIDE",
                    "SIPUDP_RES_DEFAULT",
                    "SIPTCP_REQ_OVERRIDE",
                    "SIPTCP_REQ_DEFAULT",
                    "SIPTCP_RES_OVERRIDE",
                    "SIPTCP_RES_DEFAULT",
                    "DIAMETER_REQ_OVERRIDE",
                    "DIAMETER_REQ_DEFAULT",
                    "DIAMETER_RES_OVERRIDE",
                    "DIAMETER_RES_DEFAULT",
                    "RADIUS_REQ_OVERRIDE",
                    "RADIUS_REQ_DEFAULT",
                    "RADIUS_RES_OVERRIDE",
                    "RADIUS_RES_DEFAULT",
                    "DNS_REQ_OVERRIDE",
                    "DNS_REQ_DEFAULT",
                    "DNS_RES_OVERRIDE",
                    "DNS_RES_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                    "HTTPQUIC_RES_OVERRIDE",
                    "HTTPQUIC_RES_DEFAULT",
                    "MQTT_REQ_OVERRIDE",
                    "MQTT_REQ_DEFAULT",
                    "MQTT_RES_OVERRIDE",
                    "MQTT_RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "rewritepolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": ["rewritepolicylabel_rewritepolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rewritepolicylabel_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "rewritepolicylabel": {
        "add_payload_keys": ["labelname", "transform", "comment"],
        "bindings": ["rewritepolicylabel_rewritepolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "transform"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "rewritepolicylabel_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "transform": {
                "choices": [
                    "http_req",
                    "http_res",
                    "othertcp_req",
                    "othertcp_res",
                    "url",
                    "text",
                    "clientless_vpn_req",
                    "clientless_vpn_res",
                    "sipudp_req",
                    "sipudp_res",
                    "siptcp_req",
                    "siptcp_res",
                    "diameter_req",
                    "diameter_res",
                    "radius_req",
                    "radius_res",
                    "dns_req",
                    "dns_res",
                    "httpquic_req",
                    "httpquic_res",
                    "mqtt_req",
                    "mqtt_res",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "rewritepolicylabel_rewritepolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "rnat": {
        "add_payload_keys": [
            "name",
            "network",
            "aclname",
            "redirectport",
            "td",
            "srcippersistency",
            "useproxyport",
            "connfailover",
            "ownergroup",
            "netmask",
        ],
        "bindings": [
            "rnat6_nsip6_binding",
            "rnat_retainsourceportset_binding",
            "rnat_nsip_binding",
            "rnatglobal_auditsyslogpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "aclname": {"type": "str"},
            "connfailover": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "natip": {"type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "newname": {"type": "str"},
            "ownergroup": {"type": "str"},
            "redirectport": {"type": "int"},
            "rnat6_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "rnat_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "rnat_retainsourceportset_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "rnatglobal_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "srcippersistency": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
            "useproxyport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "network",
            "aclname",
            "redirectport",
            "td",
            "srcippersistency",
            "useproxyport",
            "ownergroup",
            "connfailover",
            "netmask",
        ],
    },
    "rnat6": {
        "add_payload_keys": [
            "name",
            "network",
            "acl6name",
            "td",
            "srcippersistency",
            "ownergroup",
            "redirectport",
        ],
        "bindings": ["rnat6_nsip6_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["acl6name", "network", "td"],
        "primary_key": "name",
        "readwrite_arguments": {
            "acl6name": {"type": "str"},
            "name": {"type": "str"},
            "network": {"type": "str"},
            "ownergroup": {"type": "str"},
            "redirectport": {"type": "int"},
            "rnat6_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "srcippersistency": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "redirectport",
            "srcippersistency",
            "ownergroup",
        ],
    },
    "rnat6_nsip6_binding": {
        "add_payload_keys": ["name", "natip6", "ownergroup"],
        "bindprimary_key": "natip6",
        "delete_arg_keys": ["natip6", "ownergroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["natip6", "ownergroup"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "natip6": {"type": "str"},
            "ownergroup": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "rnat_nsip_binding": {
        "add_payload_keys": ["name", "natip"],
        "bindprimary_key": "natip",
        "delete_arg_keys": ["natip"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["natip"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "natip": {"type": "str"}},
        "update_payload_keys": [],
    },
    "rnat_retainsourceportset_binding": {
        "add_payload_keys": ["name", "retainsourceportrange"],
        "bindprimary_key": "retainsourceportrange",
        "delete_arg_keys": ["retainsourceportrange"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["retainsourceportrange"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "retainsourceportrange": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "rnatglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": ["policy", "priority"],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "all"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "all"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "all": {"type": "bool"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "route": {
        "add_payload_keys": [
            "network",
            "netmask",
            "gateway",
            "vlan",
            "td",
            "distance",
            "cost1",
            "weight",
            "advertise",
            "protocol",
            "msr",
            "ownergroup",
            "monitor",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["netmask", "gateway", "vlan", "td", "ownergroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["routetype", "detail", "netmask", "gateway", "vlan", "td"],
        "immutable_keys": ["ownergroup", "vlan"],
        "primary_key": "network",
        "readwrite_arguments": {
            "advertise": {"choices": ["DISABLED", "ENABLED"], "type": "str"},
            "cost": {"type": "int"},
            "cost1": {"type": "int"},
            "detail": {"type": "bool"},
            "distance": {"type": "int"},
            "gateway": {"type": "str"},
            "monitor": {"type": "str"},
            "msr": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "netmask": {"type": "str"},
            "network": {"type": "str"},
            "ownergroup": {"type": "str"},
            "protocol": {"choices": ["OSPF", "ISIS", "RIP", "BGP"], "type": "list"},
            "routetype": {
                "choices": [
                    "CONNECTED",
                    "STATIC",
                    "DYNAMIC",
                    "OSPF",
                    "ISIS",
                    "RIP",
                    "BGP",
                ],
                "type": "str",
            },
            "td": {"type": "int"},
            "vlan": {"type": "int"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "network",
            "netmask",
            "gateway",
            "td",
            "distance",
            "cost1",
            "weight",
            "advertise",
            "protocol",
            "msr",
            "monitor",
        ],
    },
    "route6": {
        "add_payload_keys": [
            "network",
            "gateway",
            "vlan",
            "vxlan",
            "weight",
            "distance",
            "cost",
            "advertise",
            "msr",
            "td",
            "ownergroup",
            "monitor",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["gateway", "vlan", "vxlan", "td", "ownergroup"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["routetype", "detail", "gateway", "vlan", "vxlan", "td"],
        "immutable_keys": ["ownergroup"],
        "primary_key": "network",
        "readwrite_arguments": {
            "advertise": {"choices": ["DISABLED", "ENABLED"], "type": "str"},
            "cost": {"type": "int"},
            "detail": {"type": "bool"},
            "distance": {"type": "int"},
            "gateway": {"type": "str"},
            "monitor": {"type": "str"},
            "msr": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "network": {"type": "str"},
            "ownergroup": {"type": "str"},
            "routetype": {
                "choices": [
                    "CONNECTED",
                    "STATIC",
                    "DYNAMIC",
                    "OSPF",
                    "ISIS",
                    "BGP",
                    "RIP",
                    "ND-RA-ROUTE",
                    "FIB6",
                ],
                "type": "str",
            },
            "td": {"type": "int"},
            "vlan": {"type": "int"},
            "vxlan": {"type": "int"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "network",
            "gateway",
            "vlan",
            "vxlan",
            "weight",
            "distance",
            "cost",
            "advertise",
            "msr",
            "td",
            "monitor",
        ],
    },
    "server": {
        "add_payload_keys": [
            "name",
            "ipaddress",
            "domain",
            "translationip",
            "domainresolveretry",
            "ipv6address",
            "comment",
            "td",
            "querytype",
            "translationmask",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name", "delay", "graceful"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": ["internal"],
        "immutable_keys": ["ipv6address", "domain", "td", "querytype"],
        "primary_key": "name",
        "readwrite_arguments": {
            "Internal": {"type": "bool"},
            "comment": {"type": "str"},
            "delay": {"type": "int"},
            "domain": {"type": "str"},
            "domainresolvenow": {"type": "bool"},
            "domainresolveretry": {"type": "int"},
            "graceful": {"choices": [True, False], "type": "str"},
            "ipaddress": {"type": "str"},
            "ipv6address": {"choices": [True, False], "type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "querytype": {"choices": ["A", "AAAA", "SRV"], "type": "str"},
            "td": {"type": "int"},
            "translationip": {"type": "str"},
            "translationmask": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ipaddress",
            "domainresolveretry",
            "translationip",
            "translationmask",
            "domainresolvenow",
            "comment",
        ],
    },
    "service": {
        "add_payload_keys": [
            "name",
            "ip",
            "servername",
            "servicetype",
            "port",
            "cleartextport",
            "cachetype",
            "maxclient",
            "healthmonitor",
            "maxreq",
            "cacheable",
            "cip",
            "cipheader",
            "usip",
            "pathmonitor",
            "pathmonitorindv",
            "useproxyport",
            "sp",
            "rtspsessionidremap",
            "clttimeout",
            "svrtimeout",
            "customserverid",
            "cka",
            "tcpb",
            "cmp",
            "maxbandwidth",
            "accessdown",
            "monthreshold",
            "downstateflush",
            "tcpprofilename",
            "httpprofilename",
            "contentinspectionprofilename",
            "hashid",
            "comment",
            "appflowlog",
            "netprofile",
            "td",
            "processlocal",
            "dnsprofilename",
            "monconnectionclose",
            "nodefaultbindings",
        ],
        "bindings": [
            "servicegroup_lbmonitor_binding",
            "servicegroup_servicegroupmember_binding",
            "service_lbmonitor_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name", "delay", "graceful"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": ["all", "internal"],
        "immutable_keys": [
            "servicetype",
            "cachetype",
            "ip",
            "td",
            "cleartextport",
            "nodefaultbindings",
            "servername",
            "port",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "Internal": {"type": "bool"},
            "accessdown": {"choices": [True, False], "type": "str"},
            "all": {"type": "bool"},
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cacheable": {"choices": [True, False], "type": "str"},
            "cachetype": {
                "choices": ["TRANSPARENT", "REVERSE", "FORWARD"],
                "type": "str",
            },
            "cip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipheader": {"type": "str"},
            "cka": {"choices": [True, False], "type": "str"},
            "cleartextport": {"type": "int"},
            "clttimeout": {"type": "int"},
            "cmp": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "contentinspectionprofilename": {"type": "str"},
            "customserverid": {"type": "str"},
            "delay": {"type": "int"},
            "dnsprofilename": {"type": "str"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "graceful": {"choices": [True, False], "type": "str"},
            "hashid": {"type": "int"},
            "healthmonitor": {"choices": [True, False], "type": "str"},
            "httpprofilename": {"type": "str"},
            "ip": {"type": "str"},
            "ipaddress": {"type": "str"},
            "maxbandwidth": {"type": "int"},
            "maxclient": {"type": "int"},
            "maxreq": {"type": "int"},
            "monconnectionclose": {"choices": ["RESET", "FIN"], "type": "str"},
            "monitor_name_svc": {"type": "str"},
            "monthreshold": {"type": "int"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "pathmonitor": {"choices": [True, False], "type": "str"},
            "pathmonitorindv": {"choices": [True, False], "type": "str"},
            "port": {"type": "int"},
            "processlocal": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rtspsessionidremap": {"choices": [True, False], "type": "str"},
            "serverid": {"type": "int"},
            "servername": {"type": "str"},
            "service_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicegroup_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicegroup_servicegroupmember_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "DTLS",
                    "NNTP",
                    "RPCSVR",
                    "DNS",
                    "ADNS",
                    "SNMP",
                    "RTSP",
                    "DHCPRA",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "DNS_TCP",
                    "ADNS_TCP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                    "MONGO",
                    "MONGO_TLS",
                    "RADIUS",
                    "RADIUSListener",
                    "RDP",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "TFTP",
                    "SMPP",
                    "PPTP",
                    "GRE",
                    "SYSLOGTCP",
                    "SYSLOGUDP",
                    "FIX",
                    "SSL_FIX",
                    "USER_TCP",
                    "USER_SSL_TCP",
                    "QUIC",
                    "IPFIX",
                    "LOGSTREAM",
                    "LOGSTREAM_SSL",
                    "MQTT",
                    "MQTT_TLS",
                    "QUIC_BRIDGE",
                ],
                "type": "str",
            },
            "sp": {"choices": [True, False], "type": "str"},
            "svrtimeout": {"type": "int"},
            "tcpb": {"choices": [True, False], "type": "str"},
            "tcpprofilename": {"type": "str"},
            "td": {"type": "int"},
            "useproxyport": {"choices": [True, False], "type": "str"},
            "usip": {"choices": [True, False], "type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "ipaddress",
            "maxclient",
            "maxreq",
            "cacheable",
            "cip",
            "usip",
            "pathmonitor",
            "pathmonitorindv",
            "useproxyport",
            "sp",
            "rtspsessionidremap",
            "healthmonitor",
            "clttimeout",
            "svrtimeout",
            "customserverid",
            "cka",
            "tcpb",
            "cmp",
            "maxbandwidth",
            "accessdown",
            "monthreshold",
            "weight",
            "downstateflush",
            "tcpprofilename",
            "httpprofilename",
            "contentinspectionprofilename",
            "hashid",
            "comment",
            "appflowlog",
            "netprofile",
            "processlocal",
            "dnsprofilename",
            "monconnectionclose",
            "cipheader",
            "monitor_name_svc",
        ],
    },
    "service_lbmonitor_binding": {
        "add_payload_keys": ["name", "monitor_name", "monstate", "weight", "passive"],
        "bindprimary_key": "monitor_name",
        "delete_arg_keys": ["monitor_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["monitor_name"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "monitor_name": {"type": "str"},
            "monstate": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "passive": {"type": "bool"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "servicegroup": {
        "add_payload_keys": [
            "servicegroupname",
            "servicetype",
            "cachetype",
            "td",
            "maxclient",
            "maxreq",
            "cacheable",
            "cip",
            "cipheader",
            "usip",
            "pathmonitor",
            "pathmonitorindv",
            "useproxyport",
            "healthmonitor",
            "sp",
            "rtspsessionidremap",
            "clttimeout",
            "svrtimeout",
            "cka",
            "tcpb",
            "cmp",
            "maxbandwidth",
            "monthreshold",
            "downstateflush",
            "tcpprofilename",
            "httpprofilename",
            "comment",
            "appflowlog",
            "netprofile",
            "autoscale",
            "monconnectionclose",
            "nodefaultbindings",
            "memberport",
            "autodisablegraceful",
            "autodisabledelay",
            "autodelayedtrofs",
        ],
        "bindings": [
            "servicegroup_lbmonitor_binding",
            "servicegroup_servicegroupmember_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [
            "servicegroupname",
            "servername",
            "port",
            "delay",
            "graceful",
        ],
        "enable_payload_keys": ["servicegroupname", "servername", "port"],
        "get_arg_keys": ["includemembers"],
        "immutable_keys": [
            "servicetype",
            "cachetype",
            "memberport",
            "td",
            "nodefaultbindings",
        ],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "autodisabledelay": {"type": "int"},
            "autodisablegraceful": {"choices": [True, False], "type": "str"},
            "autoscale": {
                "choices": ["DISABLED", "DNS", "POLICY", "CLOUD", "API"],
                "type": "str",
            },
            "cacheable": {"choices": [True, False], "type": "str"},
            "cachetype": {
                "choices": ["TRANSPARENT", "REVERSE", "FORWARD"],
                "type": "str",
            },
            "cip": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipheader": {"type": "str"},
            "cka": {"choices": [True, False], "type": "str"},
            "clttimeout": {"type": "int"},
            "cmp": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "customserverid": {"type": "str"},
            "dbsttl": {"type": "int"},
            "delay": {"type": "int"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dup_weight": {"type": "int"},
            "graceful": {"choices": [True, False], "type": "str"},
            "hashid": {"type": "int"},
            "healthmonitor": {"choices": [True, False], "type": "str"},
            "httpprofilename": {"type": "str"},
            "includemembers": {"type": "bool"},
            "maxbandwidth": {"type": "int"},
            "maxclient": {"type": "int"},
            "maxreq": {"type": "int"},
            "memberport": {"type": "int"},
            "monconnectionclose": {"choices": ["RESET", "FIN"], "type": "str"},
            "monitor_name_svc": {"type": "str"},
            "monthreshold": {"type": "int"},
            "nameserver": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "order": {"type": "int"},
            "pathmonitor": {"choices": [True, False], "type": "str"},
            "pathmonitorindv": {"choices": [True, False], "type": "str"},
            "port": {"type": "int"},
            "rtspsessionidremap": {"choices": [True, False], "type": "str"},
            "serverid": {"type": "int"},
            "servername": {"type": "str"},
            "servicegroup_lbmonitor_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicegroup_servicegroupmember_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "servicegroupname": {"type": "str"},
            "servicetype": {
                "choices": [
                    "HTTP",
                    "FTP",
                    "TCP",
                    "UDP",
                    "SSL",
                    "SSL_BRIDGE",
                    "SSL_TCP",
                    "DTLS",
                    "NNTP",
                    "RPCSVR",
                    "DNS",
                    "ADNS",
                    "SNMP",
                    "RTSP",
                    "DHCPRA",
                    "ANY",
                    "SIP_UDP",
                    "SIP_TCP",
                    "SIP_SSL",
                    "DNS_TCP",
                    "ADNS_TCP",
                    "MYSQL",
                    "MSSQL",
                    "ORACLE",
                    "MONGO",
                    "MONGO_TLS",
                    "RADIUS",
                    "RADIUSListener",
                    "RDP",
                    "DIAMETER",
                    "SSL_DIAMETER",
                    "TFTP",
                    "SMPP",
                    "PPTP",
                    "GRE",
                    "SYSLOGTCP",
                    "SYSLOGUDP",
                    "FIX",
                    "SSL_FIX",
                    "USER_TCP",
                    "USER_SSL_TCP",
                    "QUIC",
                    "IPFIX",
                    "LOGSTREAM",
                    "LOGSTREAM_SSL",
                    "MQTT",
                    "MQTT_TLS",
                    "QUIC_BRIDGE",
                ],
                "type": "str",
            },
            "sp": {"choices": [True, False], "type": "str"},
            "svrtimeout": {"type": "int"},
            "tcpb": {"choices": [True, False], "type": "str"},
            "tcpprofilename": {"type": "str"},
            "td": {"type": "int"},
            "useproxyport": {"choices": [True, False], "type": "str"},
            "usip": {"choices": [True, False], "type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [
            "servicegroupname",
            "servername",
            "monitor_name_svc",
            "maxclient",
            "maxreq",
            "healthmonitor",
            "cacheable",
            "cip",
            "usip",
            "pathmonitor",
            "pathmonitorindv",
            "useproxyport",
            "sp",
            "rtspsessionidremap",
            "clttimeout",
            "svrtimeout",
            "cka",
            "tcpb",
            "cmp",
            "maxbandwidth",
            "monthreshold",
            "downstateflush",
            "tcpprofilename",
            "httpprofilename",
            "comment",
            "appflowlog",
            "netprofile",
            "autodisablegraceful",
            "autodisabledelay",
            "autodelayedtrofs",
            "monconnectionclose",
            "autoscale",
            "port",
            "weight",
            "customserverid",
            "hashid",
            "nameserver",
            "dbsttl",
            "order",
            "dup_weight",
            "cipheader",
        ],
    },
    "servicegroup_lbmonitor_binding": {
        "add_payload_keys": [
            "servicegroupname",
            "port",
            "monitor_name",
            "weight",
            "customserverid",
            "serverid",
            "hashid",
            "nameserver",
            "dbsttl",
            "order",
            "monstate",
            "passive",
            "servicegroupname",
        ],
        "bindprimary_key": "monitor_name",
        "delete_arg_keys": ["port", "monitor_name"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["port", "monitor_name"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "customserverid": {"type": "str"},
            "dbsttl": {"type": "int"},
            "hashid": {"type": "int"},
            "monitor_name": {"type": "str"},
            "monstate": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "nameserver": {"type": "str"},
            "order": {"type": "int"},
            "passive": {"type": "bool"},
            "port": {"type": "int"},
            "serverid": {"type": "int"},
            "servicegroupname": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "servicegroup_servicegroupmember_binding": {
        "add_payload_keys": [
            "servicegroupname",
            "ip",
            "servername",
            "port",
            "weight",
            "customserverid",
            "serverid",
            "hashid",
            "nameserver",
            "dbsttl",
            "order",
            "servicegroupname",
        ],
        "bindprimary_key": "ip",
        "delete_arg_keys": ["ip", "servername", "port"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ip", "servername", "port"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "customserverid": {"type": "str"},
            "dbsttl": {"type": "int"},
            "hashid": {"type": "int"},
            "ip": {"type": "str"},
            "nameserver": {"type": "str"},
            "order": {"type": "int"},
            "port": {"type": "int"},
            "serverid": {"type": "int"},
            "servername": {"type": "str"},
            "servicegroupname": {"type": "str"},
            "weight": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "smppuser": {
        "add_payload_keys": ["username", "password"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "password": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": ["username", "password"],
    },
    "snmpcommunity": {
        "add_payload_keys": ["communityname", "permissions"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["communityname", "permissions"],
        "primary_key": "communityname",
        "readwrite_arguments": {
            "communityname": {"type": "str"},
            "permissions": {
                "choices": ["GET", "GET_NEXT", "GET_BULK", "SET", "ALL"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "snmpgroup": {
        "add_payload_keys": ["name", "securitylevel", "readviewname"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["securitylevel"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["securitylevel"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "readviewname": {"type": "str"},
            "securitylevel": {
                "choices": ["noAuthNoPriv", "authNoPriv", "authPriv"],
                "type": "str",
            },
        },
        "update_payload_keys": ["name", "securitylevel", "readviewname"],
    },
    "snmpmanager": {
        "add_payload_keys": ["ipaddress", "netmask", "domainresolveretry"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["netmask"],
        "immutable_keys": [],
        "primary_key": "ipaddress",
        "readwrite_arguments": {
            "domainresolveretry": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": ["ipaddress", "netmask", "domainresolveretry"],
    },
    "snmptrap": {
        "add_payload_keys": [
            "trapclass",
            "trapdestination",
            "version",
            "td",
            "destport",
            "communityname",
            "srcip",
            "severity",
            "allpartitions",
        ],
        "bindings": ["snmptrap_snmpuser_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": ["trapdestination", "version", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trapdestination", "version", "td"],
        "immutable_keys": [],
        "primary_key": "trapclass",
        "readwrite_arguments": {
            "allpartitions": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "communityname": {"type": "str"},
            "destport": {"type": "int"},
            "severity": {
                "choices": ["Critical", "Major", "Minor", "Warning", "Informational"],
                "type": "str",
            },
            "snmptrap_snmpuser_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "srcip": {"type": "str"},
            "td": {"type": "int"},
            "trapclass": {"choices": ["generic", "specific"], "type": "str"},
            "trapdestination": {"type": "str"},
            "version": {"choices": ["V1", "V2", "V3"], "type": "str"},
        },
        "update_payload_keys": [
            "trapclass",
            "trapdestination",
            "version",
            "td",
            "destport",
            "communityname",
            "srcip",
            "severity",
            "allpartitions",
        ],
    },
    "snmptrap_snmpuser_binding": {
        "add_payload_keys": [
            "trapclass",
            "trapdestination",
            "td",
            "version",
            "username",
            "securitylevel",
        ],
        "bindprimary_key": "username",
        "delete_arg_keys": ["trapdestination", "td", "version", "username"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trapdestination", "td", "version", "username"],
        "immutable_keys": [],
        "primary_key": "trapclass",
        "readwrite_arguments": {
            "securitylevel": {
                "choices": ["noAuthNoPriv", "authNoPriv", "authPriv"],
                "type": "str",
            },
            "td": {"type": "int"},
            "trapclass": {"choices": ["generic", "specific"], "type": "str"},
            "trapdestination": {"type": "str"},
            "username": {"type": "str"},
            "version": {"choices": ["V1", "V2", "V3"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "snmpuser": {
        "add_payload_keys": [
            "name",
            "group",
            "authtype",
            "privtype",
            "authpasswd",
            "privpasswd",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "authpasswd": {"type": "str"},
            "authtype": {"choices": ["MD5", "SHA"], "type": "str"},
            "group": {"type": "str"},
            "name": {"type": "str"},
            "privpasswd": {"type": "str"},
            "privtype": {"choices": ["DES", "AES"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "group",
            "authtype",
            "privtype",
            "authpasswd",
            "privpasswd",
        ],
    },
    "snmpview": {
        "add_payload_keys": ["name", "subtree", "type"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["subtree"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["subtree"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "subtree": {"type": "str"},
            "type": {"choices": ["included", "excluded"], "type": "str"},
        },
        "update_payload_keys": ["name", "subtree", "type"],
    },
    "spilloveraction": {
        "add_payload_keys": ["name", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name", "action"],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"choices": ["SPILLOVER"], "type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "spilloverpolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment"],
    },
    "sslaction": {
        "add_payload_keys": [
            "name",
            "clientauth",
            "ssllogprofile",
            "clientcert",
            "clientcertserialnumber",
            "clientcertsubject",
            "clientcerthash",
            "clientcertfingerprint",
            "clientcertissuer",
            "sessionid",
            "cipher",
            "clientcertnotbefore",
            "clientcertnotafter",
            "owasupport",
            "forward",
            "cacertgrpname",
            "clientcertverification",
            "certheader",
            "certserialheader",
            "certsubjectheader",
            "certhashheader",
            "certfingerprintheader",
            "certfingerprintdigest",
            "certissuerheader",
            "sessionidheader",
            "cipherheader",
            "certnotbeforeheader",
            "certnotafterheader",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "sessionid",
            "clientcertfingerprint",
            "certserialheader",
            "certhashheader",
            "clientcertnotbefore",
            "certsubjectheader",
            "certissuerheader",
            "owasupport",
            "clientcertnotafter",
            "cipherheader",
            "name",
            "clientcert",
            "ssllogprofile",
            "cacertgrpname",
            "clientauth",
            "certfingerprintheader",
            "certheader",
            "sessionidheader",
            "clientcertserialnumber",
            "certfingerprintdigest",
            "clientcertverification",
            "forward",
            "clientcertissuer",
            "certnotafterheader",
            "cipher",
            "certnotbeforeheader",
            "clientcertsubject",
            "clientcerthash",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "cacertgrpname": {"type": "str"},
            "certfingerprintdigest": {
                "choices": ["SHA1", "SHA224", "SHA256", "SHA384", "SHA512"],
                "type": "str",
            },
            "certfingerprintheader": {"type": "str"},
            "certhashheader": {"type": "str"},
            "certheader": {"type": "str"},
            "certissuerheader": {"type": "str"},
            "certnotafterheader": {"type": "str"},
            "certnotbeforeheader": {"type": "str"},
            "certserialheader": {"type": "str"},
            "certsubjectheader": {"type": "str"},
            "cipher": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipherheader": {"type": "str"},
            "clientauth": {"choices": ["DOCLIENTAUTH", "NOCLIENTAUTH"], "type": "str"},
            "clientcert": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertfingerprint": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "clientcerthash": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertissuer": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertnotafter": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertnotbefore": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertserialnumber": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "clientcertsubject": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientcertverification": {
                "choices": ["Mandatory", "Optional"],
                "type": "str",
            },
            "forward": {"type": "str"},
            "name": {"type": "str"},
            "owasupport": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionid": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionidheader": {"type": "str"},
            "ssllogprofile": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslcacertgroup": {
        "add_payload_keys": ["cacertgroupname"],
        "bindings": ["sslcacertgroup_sslcertkey_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["cacertgroupname"],
        "primary_key": "cacertgroupname",
        "readwrite_arguments": {
            "cacertgroupname": {"type": "str"},
            "sslcacertgroup_sslcertkey_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "sslcacertgroup_sslcertkey_binding": {
        "add_payload_keys": ["cacertgroupname", "certkeyname", "crlcheck", "ocspcheck"],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname"],
        "immutable_keys": [],
        "primary_key": "cacertgroupname",
        "readwrite_arguments": {
            "cacertgroupname": {"type": "str"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslcertificatechain": {
        "add_payload_keys": ["certkeyname"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["certkeyname"],
        "primary_key": "certkeyname",
        "readwrite_arguments": {"certkeyname": {"type": "str"}},
        "update_payload_keys": [],
    },
    "sslcertkey": {
        "add_payload_keys": [
            "certkey",
            "cert",
            "key",
            "fipskey",
            "hsmkey",
            "inform",
            "passplain",
            "expirymonitor",
            "notificationperiod",
            "bundle",
            "password",
        ],
        "bindings": ["sslcertkey_sslocspresponder_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": ["deletefromdevice"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "key",
            "cert",
            "inform",
            "hsmkey",
            "fipskey",
            "bundle",
            "passplain",
            "password",
        ],
        "primary_key": "certkey",
        "readwrite_arguments": {
            "bundle": {"choices": [True, False], "type": "str"},
            "cert": {"type": "str"},
            "certkey": {"type": "str"},
            "deletefromdevice": {"type": "bool"},
            "expirymonitor": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "fipskey": {"type": "str"},
            "hsmkey": {"type": "str"},
            "inform": {"choices": ["DER", "PEM", "PFX"], "type": "str"},
            "key": {"type": "str"},
            "linkcertkeyname": {"type": "str"},
            "nodomaincheck": {"type": "bool"},
            "notificationperiod": {"type": "int"},
            "ocspstaplingcache": {"type": "bool"},
            "passplain": {"type": "str"},
            "password": {"type": "bool"},
            "sslcertkey_sslocspresponder_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": ["certkey", "expirymonitor", "notificationperiod"],
    },
    "sslcertkey_sslocspresponder_binding": {
        "add_payload_keys": ["certkey", "ocspresponder", "priority"],
        "bindprimary_key": "ocspresponder",
        "delete_arg_keys": ["ocspresponder", "ca"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ocspresponder", "ca"],
        "immutable_keys": [],
        "primary_key": "certkey",
        "readwrite_arguments": {
            "ca": {"type": "bool"},
            "certkey": {"type": "str"},
            "ocspresponder": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "sslcertkeybundle": {
        "add_payload_keys": ["certkeybundlename", "bundlefile", "passplain"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["certkeybundlename", "passplain", "bundlefile"],
        "primary_key": "certkeybundlename",
        "readwrite_arguments": {
            "bundlefile": {"type": "str"},
            "certkeybundlename": {"type": "str"},
            "passplain": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslcipher": {
        "add_payload_keys": ["ciphergroupname"],
        "bindings": ["sslcipher_sslciphersuite_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["sslprofile"],
        "immutable_keys": [],
        "primary_key": "ciphergroupname",
        "readwrite_arguments": {
            "ciphergroupname": {"type": "str"},
            "ciphername": {"type": "str"},
            "cipherpriority": {"type": "int"},
            "ciphgrpalias": {"type": "str"},
            "sslcipher_sslciphersuite_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "sslprofile": {"type": "str"},
        },
        "update_payload_keys": ["ciphergroupname", "ciphername", "cipherpriority"],
    },
    "sslcipher_sslciphersuite_binding": {
        "add_payload_keys": [
            "ciphergroupname",
            "cipheroperation",
            "ciphgrpals",
            "ciphername",
            "cipherpriority",
        ],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "ciphergroupname",
        "readwrite_arguments": {
            "ciphergroupname": {"type": "str"},
            "ciphername": {"type": "str"},
            "cipheroperation": {"choices": ["ADD", "REM", "ORD"], "type": "str"},
            "cipherpriority": {"type": "int"},
            "ciphgrpals": {"type": "str"},
            "description": {"type": "str"},
        },
        "update_payload_keys": ["ciphername", "cipherpriority", "ciphername"],
    },
    "sslcrl": {
        "add_payload_keys": [
            "crlname",
            "crlpath",
            "inform",
            "refresh",
            "cacert",
            "method",
            "server",
            "url",
            "port",
            "basedn",
            "scope",
            "interval",
            "time",
            "binddn",
            "password",
            "binary",
            "day",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["crlpath", "inform"],
        "primary_key": "crlname",
        "readwrite_arguments": {
            "basedn": {"type": "str"},
            "binary": {"choices": [True, False], "type": "str"},
            "binddn": {"type": "str"},
            "cacert": {"type": "str"},
            "cacertfile": {"type": "str"},
            "cakeyfile": {"type": "str"},
            "crlname": {"type": "str"},
            "crlpath": {"type": "str"},
            "day": {"type": "int"},
            "gencrl": {"type": "str"},
            "indexfile": {"type": "str"},
            "inform": {"choices": ["DER", "PEM"], "type": "str"},
            "interval": {
                "choices": ["MONTHLY", "WEEKLY", "DAILY", "NOW", "NONE"],
                "type": "str",
            },
            "method": {"choices": ["HTTP", "LDAP"], "type": "str"},
            "password": {"type": "str"},
            "port": {"type": "int"},
            "refresh": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "revoke": {"type": "str"},
            "scope": {"choices": ["Base", "One"], "type": "str"},
            "server": {"type": "str"},
            "time": {"type": "str"},
            "url": {"type": "str"},
        },
        "update_payload_keys": [
            "crlname",
            "refresh",
            "cacert",
            "server",
            "method",
            "port",
            "basedn",
            "scope",
            "interval",
            "time",
            "binddn",
            "password",
            "binary",
            "url",
            "day",
        ],
    },
    "ssldtlsprofile": {
        "add_payload_keys": [
            "name",
            "pmtudiscovery",
            "maxrecordsize",
            "maxretrytime",
            "helloverifyrequest",
            "terminatesession",
            "maxpacketsize",
            "maxholdqlen",
            "maxbadmacignorecount",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "helloverifyrequest": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxbadmacignorecount": {"type": "int"},
            "maxholdqlen": {"type": "int"},
            "maxpacketsize": {"type": "int"},
            "maxrecordsize": {"type": "int"},
            "maxretrytime": {"type": "int"},
            "name": {"type": "str"},
            "pmtudiscovery": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "terminatesession": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "pmtudiscovery",
            "maxrecordsize",
            "maxretrytime",
            "helloverifyrequest",
            "terminatesession",
            "maxpacketsize",
            "maxholdqlen",
            "maxbadmacignorecount",
        ],
    },
    "sslglobal_sslpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "type", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "type", "priority"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["vserver", "service", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "CONTROL_OVERRIDE",
                    "CONTROL_DEFAULT",
                    "DATA_OVERRIDE",
                    "DATA_DEFAULT",
                    "HTTPQUIC_CONTROL_OVERRIDE",
                    "HTTPQUIC_CONTROL_DEFAULT",
                    "HTTPQUIC_DATA_OVERRIDE",
                    "HTTPQUIC_DATA_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "sslhsmkey": {
        "add_payload_keys": [
            "hsmkeyname",
            "hsmtype",
            "key",
            "serialnum",
            "password",
            "keystore",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["hsmtype", "serialnum", "password"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "hsmtype",
            "keystore",
            "hsmkeyname",
            "serialnum",
            "key",
            "password",
        ],
        "primary_key": "hsmkeyname",
        "readwrite_arguments": {
            "hsmkeyname": {"type": "str"},
            "hsmtype": {"choices": ["THALES", "SAFENET", "KEYVAULT"], "type": "str"},
            "key": {"type": "str"},
            "keystore": {"type": "str"},
            "password": {"type": "str"},
            "serialnum": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "ssllogprofile": {
        "add_payload_keys": [
            "name",
            "ssllogclauth",
            "ssllogclauthfailures",
            "sslloghs",
            "sslloghsfailures",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "ssllogclauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssllogclauthfailures": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sslloghs": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sslloghsfailures": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ssllogclauth",
            "ssllogclauthfailures",
            "sslloghs",
            "sslloghsfailures",
        ],
    },
    "sslocspresponder": {
        "add_payload_keys": [
            "name",
            "url",
            "cache",
            "cachetimeout",
            "batchingdepth",
            "batchingdelay",
            "resptimeout",
            "ocspurlresolvetimeout",
            "respondercert",
            "producedattimeskew",
            "signingcert",
            "usenonce",
            "insertclientcert",
            "httpmethod",
            "trustresponder",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "batchingdelay": {"type": "int"},
            "batchingdepth": {"type": "int"},
            "cache": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cachetimeout": {"type": "int"},
            "httpmethod": {"choices": ["GET", "POST"], "type": "str"},
            "insertclientcert": {"choices": [True, False], "type": "str"},
            "name": {"type": "str"},
            "ocspurlresolvetimeout": {"type": "int"},
            "producedattimeskew": {"type": "int"},
            "respondercert": {"type": "str"},
            "resptimeout": {"type": "int"},
            "signingcert": {"type": "str"},
            "trustresponder": {"type": "bool"},
            "url": {"type": "str"},
            "usenonce": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "url",
            "cache",
            "cachetimeout",
            "batchingdepth",
            "batchingdelay",
            "resptimeout",
            "ocspurlresolvetimeout",
            "respondercert",
            "producedattimeskew",
            "signingcert",
            "usenonce",
            "insertclientcert",
            "httpmethod",
            "trustresponder",
        ],
    },
    "sslparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "crlmemorysizemb": {"type": "int"},
            "cryptodevdisablelimit": {"type": "int"},
            "defaultprofile": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "denysslreneg": {
                "choices": [
                    False,
                    "FRONTEND_CLIENT",
                    "FRONTEND_CLIENTSERVER",
                    "ALL",
                    "NONSECURE",
                ],
                "type": "str",
            },
            "dropreqwithnohostheader": {"choices": [True, False], "type": "str"},
            "encrypttriggerpktcount": {"type": "int"},
            "heterogeneoussslhw": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "hybridfipsmode": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "insertcertspace": {"choices": [True, False], "type": "str"},
            "insertionencoding": {"choices": ["Unicode", "UTF-8"], "type": "str"},
            "ndcppcompliancecertcheck": {"choices": [True, False], "type": "str"},
            "ocspcachesize": {"type": "int"},
            "operationqueuelimit": {"type": "int"},
            "pushenctriggertimeout": {"type": "int"},
            "pushflag": {"type": "int"},
            "quantumsize": {"choices": [4096, 8192, 16384], "type": "str"},
            "sendclosenotify": {"choices": [True, False], "type": "str"},
            "sigdigesttype": {
                "choices": [
                    "ALL",
                    "RSA-MD5",
                    "RSA-SHA1",
                    "RSA-SHA224",
                    "RSA-SHA256",
                    "RSA-SHA384",
                    "RSA-SHA512",
                    "DSA-SHA1",
                    "DSA-SHA224",
                    "DSA-SHA256",
                    "DSA-SHA384",
                    "DSA-SHA512",
                    "ECDSA-SHA1",
                    "ECDSA-SHA224",
                    "ECDSA-SHA256",
                    "ECDSA-SHA384",
                    "ECDSA-SHA512",
                ],
                "type": "list",
            },
            "snihttphostmatch": {"choices": [False, "CERT", "STRICT"], "type": "str"},
            "softwarecryptothreshold": {"type": "int"},
            "sslierrorcache": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sslimaxerrorcachemem": {"type": "int"},
            "ssltriggertimeout": {"type": "int"},
            "strictcachecks": {"choices": [True, False], "type": "str"},
            "undefactioncontrol": {"type": "str"},
            "undefactiondata": {"type": "str"},
        },
        "update_payload_keys": [
            "quantumsize",
            "crlmemorysizemb",
            "strictcachecks",
            "ssltriggertimeout",
            "sendclosenotify",
            "encrypttriggerpktcount",
            "denysslreneg",
            "insertionencoding",
            "ocspcachesize",
            "pushflag",
            "dropreqwithnohostheader",
            "snihttphostmatch",
            "pushenctriggertimeout",
            "cryptodevdisablelimit",
            "undefactioncontrol",
            "undefactiondata",
            "defaultprofile",
            "softwarecryptothreshold",
            "hybridfipsmode",
            "sigdigesttype",
            "sslierrorcache",
            "sslimaxerrorcachemem",
            "insertcertspace",
            "ndcppcompliancecertcheck",
            "heterogeneoussslhw",
            "operationqueuelimit",
        ],
    },
    "sslpolicy": {
        "add_payload_keys": ["name", "rule", "action", "undefaction", "comment"],
        "bindings": ["sslpolicylabel_sslpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "reqaction": {"type": "str"},
            "rule": {"type": "str"},
            "sslpolicylabel_sslpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "undefaction": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "undefaction", "comment"],
    },
    "sslpolicylabel": {
        "add_payload_keys": ["labelname", "type"],
        "bindings": ["sslpolicylabel_sslpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "type"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "labelname": {"type": "str"},
            "sslpolicylabel_sslpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "type": {
                "choices": ["CONTROL", "DATA", "HTTPQUIC_CONTROL", "HTTPQUIC_DATA"],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "sslpolicylabel_sslpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["vserver", "service", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "sslprofile": {
        "add_payload_keys": [
            "name",
            "sslprofiletype",
            "ssllogprofile",
            "dhcount",
            "dh",
            "ersa",
            "sessreuse",
            "cipherredirect",
            "clientauth",
            "dhkeyexpsizelimit",
            "sslredirect",
            "redirectportrewrite",
            "ssl3",
            "tls1",
            "tls11",
            "tls12",
            "tls13",
            "snienable",
            "ocspstapling",
            "serverauth",
            "commonname",
            "pushenctrigger",
            "sendclosenotify",
            "cleartextport",
            "insertionencoding",
            "denysslreneg",
            "quantumsize",
            "strictcachecks",
            "encrypttriggerpktcount",
            "pushflag",
            "dropreqwithnohostheader",
            "snihttphostmatch",
            "pushenctriggertimeout",
            "ssltriggertimeout",
            "clientauthuseboundcachain",
            "sslinterception",
            "sslireneg",
            "ssliocspcheck",
            "sslimaxsessperserver",
            "sessionticket",
            "sessionticketlifetime",
            "sessionticketkeyrefresh",
            "sessionticketkeydata",
            "sessionkeylifetime",
            "prevsessionkeylifetime",
            "hsts",
            "maxage",
            "includesubdomains",
            "preload",
            "skipclientcertpolicycheck",
            "zerorttearlydata",
            "tls13sessionticketsperauthcontext",
            "dhekeyexchangewithpsk",
            "allowextendedmastersecret",
            "alpnprotocol",
            "nodefaultbindings",
            "dhfile",
            "ersacount",
            "sesstimeout",
            "cipherurl",
            "clientcert",
            "allowunknownsni",
        ],
        "bindings": [
            "sslprofile_sslciphersuite_binding",
            "sslprofile_sslcertkey_binding",
            "sslprofile_ecccurve_binding",
            "sslprofile_sslcipher_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["sslprofiletype", "nodefaultbindings"],
        "primary_key": "name",
        "readwrite_arguments": {
            "allowextendedmastersecret": {"choices": [True, False], "type": "str"},
            "alpnprotocol": {"choices": ["NONE", "HTTP1.1", "HTTP2"], "type": "str"},
            "ciphername": {"type": "str"},
            "cipherpriority": {"type": "int"},
            "cipherredirect": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cipherurl": {"type": "str"},
            "cleartextport": {"type": "int"},
            "clientauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "clientauthuseboundcachain": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "clientcert": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "commonname": {"type": "str"},
            "denysslreneg": {
                "choices": [
                    False,
                    "FRONTEND_CLIENT",
                    "FRONTEND_CLIENTSERVER",
                    "ALL",
                    "NONSECURE",
                ],
                "type": "str",
            },
            "dh": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dhcount": {"type": "int"},
            "dhekeyexchangewithpsk": {"choices": [True, False], "type": "str"},
            "dhfile": {"type": "str"},
            "dhkeyexpsizelimit": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dropreqwithnohostheader": {"choices": [True, False], "type": "str"},
            "encrypttriggerpktcount": {"type": "int"},
            "ersa": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ersacount": {"type": "int"},
            "hsts": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "includesubdomains": {"choices": [True, False], "type": "str"},
            "insertionencoding": {"choices": ["Unicode", "UTF-8"], "type": "str"},
            "maxage": {"type": "int"},
            "name": {"type": "str"},
            "ocspstapling": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "preload": {"choices": [True, False], "type": "str"},
            "prevsessionkeylifetime": {"type": "int"},
            "pushenctrigger": {
                "choices": ["Always", "Merge", "Ignore", "Timer"],
                "type": "str",
            },
            "pushenctriggertimeout": {"type": "int"},
            "pushflag": {"type": "int"},
            "quantumsize": {"choices": [4096, 8192, 16384], "type": "str"},
            "redirectportrewrite": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sendclosenotify": {"choices": [True, False], "type": "str"},
            "serverauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionkeylifetime": {"type": "int"},
            "sessionticket": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sessionticketkeydata": {"type": "str"},
            "sessionticketkeyrefresh": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "sessionticketlifetime": {"type": "int"},
            "sessreuse": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sesstimeout": {"type": "int"},
            "skipclientcertpolicycheck": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "snienable": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "snihttphostmatch": {"choices": [False, "CERT", "STRICT"], "type": "str"},
            "ssl3": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sslimaxsessperserver": {"type": "int"},
            "sslinterception": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssliocspcheck": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sslireneg": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssllogprofile": {"type": "str"},
            "sslprofile_ecccurve_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "sslprofile_sslcertkey_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "sslprofile_sslcipher_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "sslprofile_sslciphersuite_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "sslprofiletype": {
                "choices": ["BackEnd", "FrontEnd", "QUIC-FrontEnd"],
                "type": "str",
            },
            "sslredirect": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ssltriggertimeout": {"type": "int"},
            "strictcachecks": {"choices": [True, False], "type": "str"},
            "strictsigdigestcheck": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tls1": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tls11": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tls12": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tls13": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tls13sessionticketsperauthcontext": {"type": "int"},
            "zerorttearlydata": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "ssllogprofile",
            "dh",
            "dhcount",
            "dhkeyexpsizelimit",
            "ersa",
            "sessreuse",
            "cipherredirect",
            "clientauth",
            "sslredirect",
            "redirectportrewrite",
            "ssl3",
            "tls1",
            "tls11",
            "tls12",
            "tls13",
            "snienable",
            "ocspstapling",
            "serverauth",
            "commonname",
            "pushenctrigger",
            "sendclosenotify",
            "cleartextport",
            "insertionencoding",
            "denysslreneg",
            "quantumsize",
            "strictcachecks",
            "encrypttriggerpktcount",
            "pushflag",
            "dropreqwithnohostheader",
            "snihttphostmatch",
            "pushenctriggertimeout",
            "ssltriggertimeout",
            "clientauthuseboundcachain",
            "sslinterception",
            "sslireneg",
            "ssliocspcheck",
            "sslimaxsessperserver",
            "hsts",
            "maxage",
            "includesubdomains",
            "preload",
            "sessionticket",
            "sessionticketlifetime",
            "sessionticketkeyrefresh",
            "sessionticketkeydata",
            "sessionkeylifetime",
            "prevsessionkeylifetime",
            "ciphername",
            "strictsigdigestcheck",
            "skipclientcertpolicycheck",
            "zerorttearlydata",
            "tls13sessionticketsperauthcontext",
            "dhekeyexchangewithpsk",
            "allowextendedmastersecret",
            "alpnprotocol",
            "dhfile",
            "ersacount",
            "sesstimeout",
            "cipherurl",
            "clientcert",
            "allowunknownsni",
            "cipherpriority",
        ],
    },
    "sslprofile_ecccurve_binding": {
        "add_payload_keys": ["name", "cipherpriority", "ecccurvename"],
        "bindprimary_key": "ecccurvename",
        "delete_arg_keys": ["ecccurvename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ecccurvename"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "cipherpriority": {"type": "int"},
            "ecccurvename": {
                "choices": ["ALL", "P_224", "P_256", "P_384", "P_521"],
                "type": "str",
            },
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslprofile_sslcertkey_binding": {
        "add_payload_keys": ["name", "cipherpriority", "sslicacertkey"],
        "bindprimary_key": "sslicacertkey",
        "delete_arg_keys": ["sslicacertkey"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["sslicacertkey"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "cipherpriority": {"type": "int"},
            "name": {"type": "str"},
            "sslicacertkey": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslprofile_sslcipher_binding": {
        "add_payload_keys": ["name", "ciphername", "cipherpriority"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "cipheraliasname": {"type": "str"},
            "ciphername": {"type": "str"},
            "cipherpriority": {"type": "int"},
            "description": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": ["ciphername", "cipherpriority", "ciphername"],
    },
    "sslprofile_sslciphersuite_binding": {
        "add_payload_keys": ["name", "ciphername", "cipherpriority"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "ciphername": {"type": "str"},
            "cipherpriority": {"type": "int"},
            "description": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": ["ciphername", "cipherpriority", "ciphername"],
    },
    "sslservice_ecccurve_binding": {
        "add_payload_keys": ["servicename", "ecccurvename"],
        "bindprimary_key": "ecccurvename",
        "delete_arg_keys": ["ecccurvename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ecccurvename"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "ecccurvename": {
                "choices": ["ALL", "P_224", "P_256", "P_384", "P_521"],
                "type": "str",
            },
            "servicename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservice_sslcertkey_binding": {
        "add_payload_keys": [
            "servicename",
            "certkeyname",
            "ca",
            "crlcheck",
            "skipcaname",
            "snicert",
            "ocspcheck",
        ],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "ca": {"type": "bool"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "servicename": {"type": "str"},
            "skipcaname": {"type": "bool"},
            "snicert": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "sslservice_sslcipher_binding": {
        "add_payload_keys": ["servicename", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "cipheraliasname": {"type": "str"},
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "servicename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservice_sslciphersuite_binding": {
        "add_payload_keys": ["servicename", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "servicename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservice_sslpolicy_binding": {
        "add_payload_keys": [
            "servicename",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "servicename",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["vserver", "service", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "servicename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservicegroup_ecccurve_binding": {
        "add_payload_keys": ["servicegroupname", "ecccurvename"],
        "bindprimary_key": "ecccurvename",
        "delete_arg_keys": ["ecccurvename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ecccurvename"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "ecccurvename": {
                "choices": ["ALL", "P_224", "P_256", "P_384", "P_521"],
                "type": "str",
            },
            "servicegroupname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservicegroup_sslcertkey_binding": {
        "add_payload_keys": [
            "servicegroupname",
            "certkeyname",
            "ca",
            "crlcheck",
            "snicert",
            "ocspcheck",
        ],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "ca": {"type": "bool"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "servicegroupname": {"type": "str"},
            "snicert": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "sslservicegroup_sslcipher_binding": {
        "add_payload_keys": ["servicegroupname", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "cipheraliasname": {"type": "str"},
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "servicegroupname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslservicegroup_sslciphersuite_binding": {
        "add_payload_keys": ["servicegroupname", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "servicegroupname",
        "readwrite_arguments": {
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "servicegroupname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_ecccurve_binding": {
        "add_payload_keys": ["vservername", "ecccurvename"],
        "bindprimary_key": "ecccurvename",
        "delete_arg_keys": ["ecccurvename"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ecccurvename"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "ecccurvename": {
                "choices": ["ALL", "P_224", "P_256", "P_384", "P_521"],
                "type": "str",
            },
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_sslcertkey_binding": {
        "add_payload_keys": [
            "vservername",
            "certkeyname",
            "ca",
            "crlcheck",
            "skipcaname",
            "snicert",
            "ocspcheck",
        ],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert", "ocspcheck"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname", "ca", "crlcheck", "snicert", "ocspcheck"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "ca": {"type": "bool"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "skipcaname": {"type": "bool"},
            "snicert": {"type": "bool"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_sslcertkeybundle_binding": {
        "add_payload_keys": ["vservername", "certkeybundlename", "snicertkeybundle"],
        "bindprimary_key": "certkeybundlename",
        "delete_arg_keys": ["certkeybundlename", "snicertkeybundle"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeybundlename", "snicertkeybundle"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "certkeybundlename": {"type": "str"},
            "snicertkeybundle": {"type": "bool"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_sslcipher_binding": {
        "add_payload_keys": ["vservername", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "cipheraliasname": {"type": "str"},
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_sslciphersuite_binding": {
        "add_payload_keys": ["vservername", "ciphername"],
        "bindprimary_key": "ciphername",
        "delete_arg_keys": ["ciphername"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ciphername"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "ciphername": {"type": "str"},
            "description": {"type": "str"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "sslvserver_sslpolicy_binding": {
        "add_payload_keys": [
            "vservername",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "labelname",
            "type",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "vservername",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["vserver", "service", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": ["INTERCEPT_REQ", "REQUEST", "CLIENTHELLO_REQ"],
                "type": "str",
            },
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "streamidentifier": {
        "add_payload_keys": [
            "name",
            "selectorname",
            "interval",
            "samplecount",
            "sort",
            "snmptrap",
            "appflowlog",
            "trackackonlypackets",
            "tracktransactions",
            "maxtransactionthreshold",
            "mintransactionthreshold",
            "acceptancethreshold",
            "breachthreshold",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "acceptancethreshold": {"type": "str"},
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "breachthreshold": {"type": "int"},
            "interval": {"type": "int"},
            "maxtransactionthreshold": {"type": "int"},
            "mintransactionthreshold": {"type": "int"},
            "name": {"type": "str"},
            "samplecount": {"type": "int"},
            "selectorname": {"type": "str"},
            "snmptrap": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sort": {
                "choices": [
                    "REQUESTS",
                    "CONNECTIONS",
                    "RESPTIME",
                    "BANDWIDTH",
                    "RESPTIME_BREACHES",
                    "NONE",
                ],
                "type": "str",
            },
            "trackackonlypackets": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "tracktransactions": {"choices": ["RESPTIME", "NONE"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "selectorname",
            "interval",
            "samplecount",
            "sort",
            "snmptrap",
            "appflowlog",
            "trackackonlypackets",
            "tracktransactions",
            "maxtransactionthreshold",
            "mintransactionthreshold",
            "acceptancethreshold",
            "breachthreshold",
        ],
    },
    "streamselector": {
        "add_payload_keys": ["name", "rule"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "rule": {"type": "list"}},
        "update_payload_keys": ["name", "rule"],
    },
    "subscriberprofile": {
        "add_payload_keys": [
            "ip",
            "vlan",
            "subscriberrules",
            "subscriptionidtype",
            "servicepath",
            "subscriptionidvalue",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["vlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vlan"],
        "immutable_keys": [],
        "primary_key": "ip",
        "readwrite_arguments": {
            "ip": {"type": "str"},
            "servicepath": {"type": "str"},
            "subscriberrules": {"type": "list"},
            "subscriptionidtype": {
                "choices": ["E164", "IMSI", "SIP_URI", "NAI", "PRIVATE"],
                "type": "str",
            },
            "subscriptionidvalue": {"type": "str"},
            "vlan": {"type": "int"},
        },
        "update_payload_keys": [
            "ip",
            "vlan",
            "subscriberrules",
            "subscriptionidtype",
            "servicepath",
            "subscriptionidvalue",
        ],
    },
    "systembackup": {
        "add_payload_keys": ["filename"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["filename"],
        "primary_key": "filename",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "filename": {"type": "str"},
            "includekernel": {"choices": [False, True], "type": "str"},
            "level": {"choices": ["basic", "full"], "type": "str"},
            "skipbackup": {"type": "bool"},
            "uselocaltimezone": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "systemcmdpolicy": {
        "add_payload_keys": ["policyname", "action", "cmdspec"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "policyname",
        "readwrite_arguments": {
            "action": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "cmdspec": {"type": "str"},
            "policyname": {"type": "str"},
        },
        "update_payload_keys": ["policyname", "action", "cmdspec"],
    },
    "systemfile": {
        "add_payload_keys": ["filename", "filecontent", "filelocation", "fileencoding"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": ["filelocation"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["filelocation"],
        "immutable_keys": ["filename", "fileencoding", "filelocation", "filecontent"],
        "primary_key": "filename",
        "readwrite_arguments": {
            "filecontent": {"type": "str"},
            "fileencoding": {"type": "str"},
            "filelocation": {"type": "str"},
            "filename": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_authenticationldappolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_authenticationlocalpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_authenticationpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_authenticationradiuspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemglobal_authenticationtacacspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "nextfactor",
            "gotopriorityexpression",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "nextfactor": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemgroup": {
        "add_payload_keys": [
            "groupname",
            "promptstring",
            "timeout",
            "allowedmanagementinterface",
        ],
        "bindings": [
            "systemgroup_systemcmdpolicy_binding",
            "systemgroup_systemuser_binding",
            "systemgroup_nspartition_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "allowedmanagementinterface": {"choices": ["CLI", "API"], "type": "list"},
            "groupname": {"type": "str"},
            "promptstring": {"type": "str"},
            "systemgroup_nspartition_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "systemgroup_systemcmdpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "systemgroup_systemuser_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "timeout": {"type": "int"},
        },
        "update_payload_keys": [
            "groupname",
            "promptstring",
            "timeout",
            "allowedmanagementinterface",
        ],
    },
    "systemgroup_nspartition_binding": {
        "add_payload_keys": ["groupname", "partitionname"],
        "bindprimary_key": "partitionname",
        "delete_arg_keys": ["partitionname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["partitionname"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "partitionname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "systemgroup_systemcmdpolicy_binding": {
        "add_payload_keys": ["groupname", "policyname", "priority"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "systemgroup_systemuser_binding": {
        "add_payload_keys": ["groupname", "username"],
        "bindprimary_key": "username",
        "delete_arg_keys": ["username"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["username"],
        "immutable_keys": [],
        "primary_key": "groupname",
        "readwrite_arguments": {
            "groupname": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "systemparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "basicauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "cliloglevel": {
                "choices": [
                    "EMERGENCY",
                    "ALERT",
                    "CRITICAL",
                    "ERROR",
                    "WARNING",
                    "NOTICE",
                    "INFORMATIONAL",
                    "DEBUG",
                ],
                "type": "str",
            },
            "doppler": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "fipsusermode": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "forcepasswordchange": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "googleanalytics": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "localauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "minpasswordlen": {"type": "int"},
            "natpcbforceflushlimit": {"type": "int"},
            "natpcbrstontimeout": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "promptstring": {"type": "str"},
            "rbaonresponse": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "reauthonauthparamchange": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "removesensitivefiles": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "restrictedtimeout": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "strongpassword": {
                "choices": ["enableall", "enablelocal", "disabled"],
                "type": "str",
            },
            "timeout": {"type": "int"},
            "totalauthtimeout": {"type": "int"},
        },
        "update_payload_keys": [
            "rbaonresponse",
            "promptstring",
            "natpcbforceflushlimit",
            "natpcbrstontimeout",
            "timeout",
            "localauth",
            "minpasswordlen",
            "strongpassword",
            "restrictedtimeout",
            "fipsusermode",
            "doppler",
            "googleanalytics",
            "totalauthtimeout",
            "cliloglevel",
            "forcepasswordchange",
            "basicauth",
            "reauthonauthparamchange",
            "removesensitivefiles",
            "maxsessionperuser",
        ],
    },
    "systemuser": {
        "add_payload_keys": [
            "username",
            "password",
            "externalauth",
            "promptstring",
            "timeout",
            "logging",
            "maxsession",
            "allowedmanagementinterface",
        ],
        "bindings": [
            "systemuser_systemcmdpolicy_binding",
            "systemuser_nspartition_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "allowedmanagementinterface": {"choices": ["CLI", "API"], "type": "list"},
            "externalauth": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "logging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "maxsession": {"type": "int"},
            "password": {"type": "str"},
            "promptstring": {"type": "str"},
            "systemuser_nspartition_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "systemuser_systemcmdpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "timeout": {"type": "int"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [
            "username",
            "password",
            "externalauth",
            "promptstring",
            "timeout",
            "logging",
            "maxsession",
            "allowedmanagementinterface",
        ],
    },
    "systemuser_nspartition_binding": {
        "add_payload_keys": ["username", "partitionname"],
        "bindprimary_key": "partitionname",
        "delete_arg_keys": ["partitionname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["partitionname"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "partitionname": {"type": "str"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "systemuser_systemcmdpolicy_binding": {
        "add_payload_keys": ["username", "policyname", "priority"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "username",
        "readwrite_arguments": {
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "username": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "tmformssoaction": {
        "add_payload_keys": [
            "name",
            "actionurl",
            "userfield",
            "passwdfield",
            "ssosuccessrule",
            "namevaluepair",
            "responsesize",
            "nvtype",
            "submitmethod",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "actionurl": {"type": "str"},
            "name": {"type": "str"},
            "namevaluepair": {"type": "str"},
            "nvtype": {"choices": ["STATIC", "DYNAMIC"], "type": "str"},
            "passwdfield": {"type": "str"},
            "responsesize": {"type": "int"},
            "ssosuccessrule": {"type": "str"},
            "submitmethod": {"choices": ["GET", "POST"], "type": "str"},
            "userfield": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "actionurl",
            "userfield",
            "passwdfield",
            "ssosuccessrule",
            "responsesize",
            "namevaluepair",
            "nvtype",
            "submitmethod",
        ],
    },
    "tmglobal_auditnslogpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "gotopriorityexpression"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "tmglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "gotopriorityexpression"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "tmglobal_tmsessionpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "gotopriorityexpression"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "tmglobal_tmtrafficpolicy_binding": {
        "add_payload_keys": ["policyname", "priority", "gotopriorityexpression"],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "tmsamlssoprofile": {
        "add_payload_keys": [
            "name",
            "samlsigningcertname",
            "assertionconsumerserviceurl",
            "relaystaterule",
            "sendpassword",
            "samlissuername",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "samlspcertname",
            "encryptionalgorithm",
            "skewtime",
            "signassertion",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "assertionconsumerserviceurl": {"type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute10expr": {"type": "str"},
            "attribute10format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute10friendlyname": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute11expr": {"type": "str"},
            "attribute11format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute11friendlyname": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute12expr": {"type": "str"},
            "attribute12format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute12friendlyname": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute13expr": {"type": "str"},
            "attribute13format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute13friendlyname": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute14expr": {"type": "str"},
            "attribute14format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute14friendlyname": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute15expr": {"type": "str"},
            "attribute15format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute15friendlyname": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute16expr": {"type": "str"},
            "attribute16format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute16friendlyname": {"type": "str"},
            "attribute1expr": {"type": "str"},
            "attribute1format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute1friendlyname": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute2expr": {"type": "str"},
            "attribute2format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute2friendlyname": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute3expr": {"type": "str"},
            "attribute3format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute3friendlyname": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute4expr": {"type": "str"},
            "attribute4format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute4friendlyname": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute5expr": {"type": "str"},
            "attribute5format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute5friendlyname": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute6expr": {"type": "str"},
            "attribute6format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute6friendlyname": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute7expr": {"type": "str"},
            "attribute7format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute7friendlyname": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute8expr": {"type": "str"},
            "attribute8format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute8friendlyname": {"type": "str"},
            "attribute9": {"type": "str"},
            "attribute9expr": {"type": "str"},
            "attribute9format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute9friendlyname": {"type": "str"},
            "audience": {"type": "str"},
            "digestmethod": {"choices": ["SHA1", "SHA256"], "type": "str"},
            "encryptassertion": {"choices": [True, False], "type": "str"},
            "encryptionalgorithm": {
                "choices": ["DES3", "AES128", "AES192", "AES256"],
                "type": "str",
            },
            "name": {"type": "str"},
            "nameidexpr": {"type": "str"},
            "nameidformat": {
                "choices": [
                    "Unspecified",
                    "emailAddress",
                    "X509SubjectName",
                    "WindowsDomainQualifiedName",
                    "kerberos",
                    "entity",
                    "persistent",
                    "transient",
                ],
                "type": "str",
            },
            "relaystaterule": {"type": "str"},
            "samlissuername": {"type": "str"},
            "samlsigningcertname": {"type": "str"},
            "samlspcertname": {"type": "str"},
            "sendpassword": {"choices": [True, False], "type": "str"},
            "signassertion": {
                "choices": ["NONE", "ASSERTION", "RESPONSE", "BOTH"],
                "type": "str",
            },
            "signaturealg": {"choices": ["RSA-SHA1", "RSA-SHA256"], "type": "str"},
            "skewtime": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "samlsigningcertname",
            "assertionconsumerserviceurl",
            "sendpassword",
            "samlissuername",
            "relaystaterule",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "samlspcertname",
            "encryptionalgorithm",
            "skewtime",
            "signassertion",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
    },
    "tmsessionaction": {
        "add_payload_keys": [
            "name",
            "sesstimeout",
            "defaultauthorizationaction",
            "sso",
            "ssocredential",
            "ssodomain",
            "httponlycookie",
            "kcdaccount",
            "persistentcookie",
            "persistentcookievalidity",
            "homepage",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "defaultauthorizationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "homepage": {"type": "str"},
            "httponlycookie": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "name": {"type": "str"},
            "persistentcookie": {"choices": [True, False], "type": "str"},
            "persistentcookievalidity": {"type": "int"},
            "sesstimeout": {"type": "int"},
            "sso": {"choices": [True, False], "type": "str"},
            "ssocredential": {"choices": ["PRIMARY", "SECONDARY"], "type": "str"},
            "ssodomain": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "sesstimeout",
            "defaultauthorizationaction",
            "sso",
            "ssocredential",
            "ssodomain",
            "kcdaccount",
            "httponlycookie",
            "persistentcookie",
            "persistentcookievalidity",
            "homepage",
        ],
    },
    "tmsessionparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "defaultauthorizationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "homepage": {"type": "str"},
            "httponlycookie": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "persistentcookie": {"choices": [True, False], "type": "str"},
            "persistentcookievalidity": {"type": "int"},
            "sesstimeout": {"type": "int"},
            "sso": {"choices": [True, False], "type": "str"},
            "ssocredential": {"choices": ["PRIMARY", "SECONDARY"], "type": "str"},
            "ssodomain": {"type": "str"},
        },
        "update_payload_keys": [
            "sesstimeout",
            "defaultauthorizationaction",
            "sso",
            "ssocredential",
            "ssodomain",
            "kcdaccount",
            "httponlycookie",
            "persistentcookie",
            "persistentcookievalidity",
            "homepage",
        ],
    },
    "tmsessionpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "tmtrafficaction": {
        "add_payload_keys": [
            "name",
            "apptimeout",
            "sso",
            "formssoaction",
            "persistentcookie",
            "initiatelogout",
            "kcdaccount",
            "samlssoprofile",
            "forcedtimeout",
            "userexpression",
            "passwdexpression",
            "forcedtimeoutval",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "apptimeout": {"type": "int"},
            "forcedtimeout": {"choices": ["START", "STOP", "RESET"], "type": "str"},
            "forcedtimeoutval": {"type": "int"},
            "formssoaction": {"type": "str"},
            "initiatelogout": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "name": {"type": "str"},
            "passwdexpression": {"type": "str"},
            "persistentcookie": {"choices": [True, False], "type": "str"},
            "samlssoprofile": {"type": "str"},
            "sso": {"choices": [True, False], "type": "str"},
            "userexpression": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "apptimeout",
            "sso",
            "formssoaction",
            "persistentcookie",
            "initiatelogout",
            "kcdaccount",
            "samlssoprofile",
            "forcedtimeout",
            "forcedtimeoutval",
            "userexpression",
            "passwdexpression",
        ],
    },
    "tmtrafficpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "transformaction": {
        "add_payload_keys": ["name", "profilename", "priority"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["profilename"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "cookiedomainfrom": {"type": "str"},
            "cookiedomaininto": {"type": "str"},
            "name": {"type": "str"},
            "priority": {"type": "int"},
            "profilename": {"type": "str"},
            "requrlfrom": {"type": "str"},
            "requrlinto": {"type": "str"},
            "resurlfrom": {"type": "str"},
            "resurlinto": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "priority",
            "requrlfrom",
            "requrlinto",
            "resurlfrom",
            "resurlinto",
            "cookiedomainfrom",
            "cookiedomaininto",
            "comment",
        ],
    },
    "transformglobal_transformpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {
                "choices": ["reqvserver", "resvserver", "policylabel"],
                "type": "str",
            },
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "HTTPQUIC_REQ_OVERRIDE",
                    "HTTPQUIC_REQ_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "transformpolicy": {
        "add_payload_keys": ["name", "rule", "profilename", "comment", "logaction"],
        "bindings": ["transformpolicylabel_transformpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "profilename": {"type": "str"},
            "rule": {"type": "str"},
            "transformpolicylabel_transformpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": ["name", "rule", "profilename", "comment", "logaction"],
    },
    "transformpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype"],
        "bindings": ["transformpolicylabel_transformpolicy_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {"choices": ["http_req", "httpquic_req"], "type": "str"},
            "transformpolicylabel_transformpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "transformpolicylabel_transformpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["reqvserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "transformprofile": {
        "add_payload_keys": ["name", "type"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "onlytransformabsurlinbody": {"choices": [True, False], "type": "str"},
            "type": {"choices": ["URL"], "type": "str"},
        },
        "update_payload_keys": ["name", "type", "onlytransformabsurlinbody", "comment"],
    },
    "tunnelglobal_tunneltrafficpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "tunneltrafficpolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment", "logaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment", "logaction"],
    },
    "ulfdserver": {
        "add_payload_keys": ["loggerip"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["loggerip"],
        "primary_key": "loggerip",
        "readwrite_arguments": {"loggerip": {"type": "str"}},
        "update_payload_keys": [],
    },
    "urlfilteringparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "cloudhost": {"type": "str"},
            "hoursbetweendbupdates": {"type": "int"},
            "localdatabasethreads": {"type": "int"},
            "seeddbpath": {"type": "str"},
            "timeofdaytoupdatedb": {"type": "str"},
        },
        "update_payload_keys": [
            "hoursbetweendbupdates",
            "timeofdaytoupdatedb",
            "localdatabasethreads",
            "cloudhost",
            "seeddbpath",
        ],
    },
    "userprotocol": {
        "add_payload_keys": ["name", "transport", "extension", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["extension", "transport"],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "extension": {"type": "str"},
            "name": {"type": "str"},
            "transport": {"choices": ["TCP", "SSL"], "type": "str"},
        },
        "update_payload_keys": ["name", "comment"],
    },
    "uservserver": {
        "add_payload_keys": [
            "name",
            "userprotocol",
            "ipaddress",
            "port",
            "defaultlb",
            "params",
            "comment",
            "nodefaultbindings",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": ["port", "userprotocol", "nodefaultbindings"],
        "primary_key": "name",
        "readwrite_arguments": {
            "Params": {"type": "str"},
            "comment": {"type": "str"},
            "defaultlb": {"type": "str"},
            "ipaddress": {"type": "str"},
            "name": {"type": "str"},
            "port": {"type": "int"},
            "userprotocol": {"type": "str"},
        },
        "update_payload_keys": ["name", "ipaddress", "defaultlb", "params", "comment"],
    },
    "videooptimizationdetectionaction": {
        "add_payload_keys": ["name", "type", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "type": {
                "choices": [
                    "clear_text_pd",
                    "clear_text_abr",
                    "encrypted_abr",
                    "trigger_enc_abr",
                    "trigger_body_detection",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": ["name", "type", "comment"],
    },
    "videooptimizationdetectionpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": [
            "videooptimizationdetectionpolicylabel_videooptimizationdetectionpolicy_binding"
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
            "videooptimizationdetectionpolicylabel_videooptimizationdetectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "videooptimizationdetectionpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype", "comment"],
        "bindings": [
            "videooptimizationdetectionpolicylabel_videooptimizationdetectionpolicy_binding"
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {
                "choices": ["videoopt_req", "videoopt_res"],
                "type": "str",
            },
            "videooptimizationdetectionpolicylabel_videooptimizationdetectionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "videooptimizationdetectionpolicylabel_videooptimizationdetectionpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "videooptimizationglobaldetection_videooptimizationdetectionpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "videooptimizationglobalpacing_videooptimizationpacingpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "priority",
            "gotopriorityexpression",
            "type",
            "invoke",
            "labeltype",
            "labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority", "type"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority", "type"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "videooptimizationpacingaction": {
        "add_payload_keys": ["name", "rate", "comment"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rate": {"type": "int"},
        },
        "update_payload_keys": ["name", "rate", "comment"],
    },
    "videooptimizationpacingpolicy": {
        "add_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
        "bindings": [
            "videooptimizationpacingpolicylabel_videooptimizationpacingpolicy_binding"
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
            "undefaction": {"type": "str"},
            "videooptimizationpacingpolicylabel_videooptimizationpacingpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "name",
            "rule",
            "action",
            "undefaction",
            "comment",
            "logaction",
        ],
    },
    "videooptimizationpacingpolicylabel": {
        "add_payload_keys": ["labelname", "policylabeltype", "comment"],
        "bindings": [
            "videooptimizationpacingpolicylabel_videooptimizationpacingpolicy_binding"
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["labelname", "comment", "policylabeltype"],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "comment": {"type": "str"},
            "labelname": {"type": "str"},
            "newname": {"type": "str"},
            "policylabeltype": {
                "choices": ["videoopt_req", "videoopt_res"],
                "type": "str",
            },
            "videooptimizationpacingpolicylabel_videooptimizationpacingpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "videooptimizationpacingpolicylabel_videooptimizationpacingpolicy_binding": {
        "add_payload_keys": [
            "labelname",
            "policyname",
            "priority",
            "gotopriorityexpression",
            "invoke",
            "labeltype",
            "invoke_labelname",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "priority"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "priority"],
        "immutable_keys": [],
        "primary_key": "labelname",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "invoke": {"type": "bool"},
            "invoke_labelname": {"type": "str"},
            "labelname": {"type": "str"},
            "labeltype": {"choices": ["vserver", "policylabel"], "type": "str"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "videooptimizationparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "quicpacingrate": {"type": "int"},
            "randomsamplingpercentage": {"type": "int"},
        },
        "update_payload_keys": ["randomsamplingpercentage", "quicpacingrate"],
    },
    "vlan": {
        "add_payload_keys": [
            "id",
            "aliasname",
            "dynamicrouting",
            "ipv6dynamicrouting",
            "mtu",
            "sharing",
        ],
        "bindings": [
            "vlan_interface_binding",
            "vlan_channel_binding",
            "vlan_nsip_binding",
            "vlan_linkset_binding",
            "vlan_nsip6_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "aliasname": {"type": "str"},
            "dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "id": {"type": "int"},
            "ipv6dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "mtu": {"type": "int"},
            "sharing": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "vlan_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vlan_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vlan_linkset_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vlan_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vlan_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "id",
            "aliasname",
            "dynamicrouting",
            "ipv6dynamicrouting",
            "mtu",
            "sharing",
        ],
    },
    "vlan_channel_binding": {
        "add_payload_keys": ["id", "ifnum", "ownergroup", "tagged"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ifnum": {"type": "str"},
            "ownergroup": {"type": "str"},
            "tagged": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vlan_interface_binding": {
        "add_payload_keys": ["id", "ifnum", "ownergroup", "tagged"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ifnum": {"type": "str"},
            "ownergroup": {"type": "str"},
            "tagged": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vlan_linkset_binding": {
        "add_payload_keys": ["id", "ifnum", "ownergroup", "tagged"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum", "ownergroup", "tagged"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ifnum": {"type": "str"},
            "ownergroup": {"type": "str"},
            "tagged": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vlan_nsip6_binding": {
        "add_payload_keys": ["id", "ipaddress", "ownergroup", "netmask", "td"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "ownergroup", "netmask", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "ownergroup", "netmask", "td"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
            "ownergroup": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "vlan_nsip_binding": {
        "add_payload_keys": ["id", "ipaddress", "ownergroup", "netmask", "td"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "ownergroup", "netmask", "td"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "ownergroup", "netmask", "td"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
            "ownergroup": {"type": "str"},
            "td": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "vpnalwaysonprofile": {
        "add_payload_keys": [
            "name",
            "networkaccessonvpnfailure",
            "clientcontrol",
            "locationbasedvpn",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "clientcontrol": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "locationbasedvpn": {"choices": ["Remote", "Everywhere"], "type": "str"},
            "name": {"type": "str"},
            "networkaccessonvpnfailure": {
                "choices": ["onlyToGateway", "fullAccess"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "networkaccessonvpnfailure",
            "clientcontrol",
            "locationbasedvpn",
        ],
    },
    "vpnclientlessaccesspolicy": {
        "add_payload_keys": ["name", "rule", "profilename"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "profilename": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "profilename"],
    },
    "vpnclientlessaccessprofile": {
        "add_payload_keys": ["profilename"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "profilename",
        "readwrite_arguments": {
            "clientconsumedcookies": {"type": "str"},
            "javascriptrewritepolicylabel": {"type": "str"},
            "profilename": {"type": "str"},
            "regexforfindingcustomurls": {"type": "str"},
            "regexforfindingurlincss": {"type": "str"},
            "regexforfindingurlinjavascript": {"type": "str"},
            "regexforfindingurlinxcomponent": {"type": "str"},
            "regexforfindingurlinxml": {"type": "str"},
            "reqhdrrewritepolicylabel": {"type": "str"},
            "requirepersistentcookie": {"choices": [True, False], "type": "str"},
            "reshdrrewritepolicylabel": {"type": "str"},
            "urlrewritepolicylabel": {"type": "str"},
        },
        "update_payload_keys": [
            "profilename",
            "urlrewritepolicylabel",
            "javascriptrewritepolicylabel",
            "reqhdrrewritepolicylabel",
            "reshdrrewritepolicylabel",
            "regexforfindingurlinjavascript",
            "regexforfindingurlincss",
            "regexforfindingurlinxcomponent",
            "regexforfindingurlinxml",
            "regexforfindingcustomurls",
            "clientconsumedcookies",
            "requirepersistentcookie",
        ],
    },
    "vpnepaprofile": {
        "add_payload_keys": ["name", "filename", "data"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["filename", "name", "data"],
        "primary_key": "name",
        "readwrite_arguments": {
            "data": {"type": "str"},
            "filename": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpneula": {
        "add_payload_keys": ["name"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name"],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vpnformssoaction": {
        "add_payload_keys": [
            "name",
            "actionurl",
            "userfield",
            "passwdfield",
            "ssosuccessrule",
            "namevaluepair",
            "responsesize",
            "nvtype",
            "submitmethod",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "actionurl": {"type": "str"},
            "name": {"type": "str"},
            "namevaluepair": {"type": "str"},
            "nvtype": {"choices": ["STATIC", "DYNAMIC"], "type": "str"},
            "passwdfield": {"type": "str"},
            "responsesize": {"type": "int"},
            "ssosuccessrule": {"type": "str"},
            "submitmethod": {"choices": ["GET", "POST"], "type": "str"},
            "userfield": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "actionurl",
            "userfield",
            "passwdfield",
            "ssosuccessrule",
            "responsesize",
            "namevaluepair",
            "nvtype",
            "submitmethod",
        ],
    },
    "vpnglobal_appcontroller_binding": {
        "add_payload_keys": ["appcontroller", "gotopriorityexpression"],
        "bindprimary_key": "appcontroller",
        "delete_arg_keys": ["appcontroller"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["appcontroller"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "appcontroller": {"type": "str"},
            "gotopriorityexpression": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationcertpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationldappolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationlocalpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationnegotiatepolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationradiuspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationsamlpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_authenticationtacacspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_domain_binding": {
        "add_payload_keys": ["intranetdomain", "gotopriorityexpression"],
        "bindprimary_key": "intranetdomain",
        "delete_arg_keys": ["intranetdomain"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetdomain"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetdomain": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_intranetip6_binding": {
        "add_payload_keys": ["intranetip6", "gotopriorityexpression", "numaddr"],
        "bindprimary_key": "intranetip6",
        "delete_arg_keys": ["intranetip6", "numaddr"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip6", "numaddr"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetip6": {"type": "str"},
            "numaddr": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_intranetip_binding": {
        "add_payload_keys": ["intranetip", "gotopriorityexpression", "netmask"],
        "bindprimary_key": "intranetip",
        "delete_arg_keys": ["intranetip", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip", "netmask"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetip": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_sharefileserver_binding": {
        "add_payload_keys": ["sharefile", "gotopriorityexpression"],
        "bindprimary_key": "sharefile",
        "delete_arg_keys": ["sharefile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["sharefile"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "sharefile": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_sslcertkey_binding": {
        "add_payload_keys": [
            "gotopriorityexpression",
            "certkeyname",
            "userdataencryptionkey",
            "cacert",
            "crlcheck",
            "ocspcheck",
        ],
        "bindprimary_key": "certkeyname",
        "delete_arg_keys": ["certkeyname", "userdataencryptionkey", "cacert"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["certkeyname", "userdataencryptionkey", "cacert"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "cacert": {"type": "str"},
            "certkeyname": {"type": "str"},
            "crlcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "gotopriorityexpression": {"type": "str"},
            "ocspcheck": {"choices": ["Mandatory", "Optional"], "type": "str"},
            "userdataencryptionkey": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_staserver_binding": {
        "add_payload_keys": ["staserver", "gotopriorityexpression", "staaddresstype"],
        "bindprimary_key": "staserver",
        "delete_arg_keys": ["staserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["staserver"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "staaddresstype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "staserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnclientlessaccesspolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "globalbindtype": {
                "choices": [
                    "SYSTEM_GLOBAL",
                    "VPN_GLOBAL",
                    "RNAT_GLOBAL",
                    "APPFW_GLOBAL",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
            "type": {
                "choices": [
                    "REQ_OVERRIDE",
                    "REQ_DEFAULT",
                    "RES_OVERRIDE",
                    "RES_DEFAULT",
                ],
                "type": "str",
            },
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpneula_binding": {
        "add_payload_keys": ["gotopriorityexpression", "eula"],
        "bindprimary_key": "eula",
        "delete_arg_keys": ["eula"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["eula"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "eula": {"type": "str"},
            "gotopriorityexpression": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnintranetapplication_binding": {
        "add_payload_keys": ["intranetapplication", "gotopriorityexpression"],
        "bindprimary_key": "intranetapplication",
        "delete_arg_keys": ["intranetapplication"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetapplication"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "intranetapplication": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnnexthopserver_binding": {
        "add_payload_keys": ["nexthopserver", "gotopriorityexpression"],
        "bindprimary_key": "nexthopserver",
        "delete_arg_keys": ["nexthopserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["nexthopserver"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "nexthopserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnportaltheme_binding": {
        "add_payload_keys": ["gotopriorityexpression", "portaltheme"],
        "bindprimary_key": "portaltheme",
        "delete_arg_keys": ["portaltheme"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["portaltheme"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "portaltheme": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnsessionpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "feature": {
                "choices": [
                    "WL",
                    "WebLogging",
                    "SP",
                    "SurgeProtection",
                    "LB",
                    "LoadBalancing",
                    "CS",
                    "ContentSwitching",
                    "CR",
                    "CacheRedirection",
                    "SC",
                    "SureConnect",
                    "CMP",
                    "CMPcntl",
                    "CompressionControl",
                    "PQ",
                    "PriorityQueuing",
                    "HDOSP",
                    "HttpDoSProtection",
                    "SSLVPN",
                    "AAA",
                    "GSLB",
                    "GlobalServerLoadBalancing",
                    "SSL",
                    "SSLOffload",
                    "SSLOffloading",
                    "CF",
                    "ContentFiltering",
                    "IC",
                    "IntegratedCaching",
                    "OSPF",
                    "OSPFRouting",
                    "RIP",
                    "RIPRouting",
                    "BGP",
                    "BGPRouting",
                    "REWRITE",
                    "IPv6PT",
                    "IPv6protocoltranslation",
                    "AppFw",
                    "ApplicationFirewall",
                    "RESPONDER",
                    "push",
                    "NSPush",
                    "NetScalerPush",
                    "AppFlow",
                    "CloudBridge",
                    "ISIS",
                    "ISISRouting",
                    "CH",
                    "CallHome",
                    "AppQoE",
                    "ContentAccelerator",
                    "SYSTEM",
                    "RISE",
                    "FEO",
                    "LSN",
                    "LargeScaleNAT",
                    "RDPProxy",
                    "Rep",
                    "Reputation",
                    "URLFiltering",
                    "VideoOptimization",
                    "ForwardProxy",
                    "SSLInterception",
                    "AdaptiveTCP",
                    "CQA",
                    "CI",
                    "ContentInspection",
                    "Bot",
                    "APIGateway",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpntrafficpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnurl_binding": {
        "add_payload_keys": ["urlname", "gotopriorityexpression"],
        "bindprimary_key": "urlname",
        "delete_arg_keys": ["urlname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["urlname"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "gotopriorityexpression": {"type": "str"},
            "urlname": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnglobal_vpnurlpolicy_binding": {
        "add_payload_keys": [
            "policyname",
            "gotopriorityexpression",
            "priority",
            "secondary",
            "groupextraction",
        ],
        "bindprimary_key": "policyname",
        "delete_arg_keys": ["policyname", "secondary", "groupextraction"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policyname", "secondary", "groupextraction"],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "builtin": {
                "choices": ["MODIFIABLE", "DELETABLE", "IMMUTABLE", "PARTITION_ALL"],
                "type": "list",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "policyname": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnintranetapplication": {
        "add_payload_keys": [
            "intranetapplication",
            "protocol",
            "destip",
            "clientapplication",
            "destport",
            "interception",
            "srcip",
            "srcport",
            "netmask",
            "iprange",
            "hostname",
            "spoofiip",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "iprange",
            "protocol",
            "srcport",
            "clientapplication",
            "interception",
            "srcip",
            "netmask",
            "spoofiip",
            "intranetapplication",
            "destip",
            "destport",
            "hostname",
        ],
        "primary_key": "intranetapplication",
        "readwrite_arguments": {
            "clientapplication": {"type": "list"},
            "destip": {"type": "str"},
            "destport": {"type": "str"},
            "hostname": {"type": "str"},
            "interception": {"choices": ["PROXY", "TRANSPARENT"], "type": "str"},
            "intranetapplication": {"type": "str"},
            "iprange": {"type": "str"},
            "netmask": {"type": "str"},
            "protocol": {"choices": ["TCP", "UDP", "ANY"], "type": "str"},
            "spoofiip": {"choices": [True, False], "type": "str"},
            "srcip": {"type": "str"},
            "srcport": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "vpnnexthopserver": {
        "add_payload_keys": [
            "name",
            "nexthopip",
            "nexthopfqdn",
            "nexthopport",
            "secure",
            "resaddresstype",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [
            "name",
            "secure",
            "nexthopip",
            "nexthopport",
            "nexthopfqdn",
            "resaddresstype",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "nexthopfqdn": {"type": "str"},
            "nexthopip": {"type": "str"},
            "nexthopport": {"type": "int"},
            "resaddresstype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "secure": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnparameter": {
        "add_payload_keys": [],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "",
        "readwrite_arguments": {
            "advancedclientlessvpnmode": {
                "choices": ["ENABLED", "DISABLED", "STRICT"],
                "type": "str",
            },
            "allowedlogingroups": {"type": "str"},
            "allprotocolproxy": {"type": "str"},
            "alwaysonprofilename": {"type": "str"},
            "apptokentimeout": {"type": "int"},
            "authorizationgroup": {"type": "str"},
            "autoproxyurl": {"type": "str"},
            "backendcertvalidation": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "backendserversni": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "citrixreceiverhome": {"type": "str"},
            "clientchoices": {"choices": [True, False], "type": "str"},
            "clientcleanupprompt": {"choices": [True, False], "type": "str"},
            "clientconfiguration": {"choices": ["none", "trace"], "type": "list"},
            "clientdebug": {
                "choices": ["debug", "stats", "events", False],
                "type": "str",
            },
            "clientidletimeout": {"type": "int"},
            "clientlessmodeurlencoding": {
                "choices": ["TRANSPARENT", "OPAQUE", "ENCRYPT"],
                "type": "str",
            },
            "clientlesspersistentcookie": {
                "choices": ["ALLOW", "DENY", "PROMPT"],
                "type": "str",
            },
            "clientlessvpnmode": {"choices": [True, False, "DISABLED"], "type": "str"},
            "clientoptions": {
                "choices": ["none", "all", "services", "filetransfer", "configuration"],
                "type": "list",
            },
            "clientsecurity": {"type": "str"},
            "clientsecuritygroup": {"type": "str"},
            "clientsecuritylog": {"choices": [True, False], "type": "str"},
            "clientsecuritymessage": {"type": "str"},
            "clientversions": {"type": "str"},
            "defaultauthorizationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "dnsvservername": {"type": "str"},
            "emailhome": {"type": "str"},
            "encryptcsecexp": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "epaclienttype": {"choices": ["AGENT", "PLUGIN"], "type": "str"},
            "forcecleanup": {
                "choices": [
                    "none",
                    "all",
                    "cookie",
                    "addressbar",
                    "plugin",
                    "filesystemapplication",
                    "application",
                    "applicationdata",
                    "clientcertificate",
                    "autocomplete",
                    "cache",
                ],
                "type": "list",
            },
            "forcedtimeout": {"type": "int"},
            "forcedtimeoutwarning": {"type": "int"},
            "fqdnspoofedip": {"type": "str"},
            "ftpproxy": {"type": "str"},
            "gopherproxy": {"type": "str"},
            "homepage": {"type": "str"},
            "httpport": {"type": "list"},
            "httpproxy": {"type": "str"},
            "icaproxy": {"choices": [True, False], "type": "str"},
            "icasessiontimeout": {"choices": [True, False], "type": "str"},
            "icauseraccounting": {"type": "str"},
            "iconwithreceiver": {"choices": [True, False], "type": "str"},
            "iipdnssuffix": {"type": "str"},
            "kcdaccount": {"type": "str"},
            "killconnections": {"choices": [True, False], "type": "str"},
            "linuxpluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "locallanaccess": {"choices": [True, False, "FORCED"], "type": "str"},
            "loginscript": {"type": "str"},
            "logoutscript": {"type": "str"},
            "macpluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "mdxtokentimeout": {"type": "int"},
            "netmask": {"type": "str"},
            "ntdomain": {"type": "str"},
            "pcoipprofilename": {"type": "str"},
            "proxy": {"choices": ["BROWSER", "NS", False], "type": "str"},
            "proxyexception": {"type": "str"},
            "proxylocalbypass": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rdpclientprofilename": {"type": "str"},
            "rfc1918": {"choices": [True, False], "type": "str"},
            "samesite": {"choices": ["None", "LAX", "STRICT"], "type": "str"},
            "securebrowse": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sesstimeout": {"type": "int"},
            "smartgroup": {"type": "str"},
            "socksproxy": {"type": "str"},
            "splitdns": {"choices": ["LOCAL", "REMOTE", "BOTH"], "type": "str"},
            "splittunnel": {"choices": [True, False, "REVERSE"], "type": "str"},
            "spoofiip": {"choices": [True, False], "type": "str"},
            "sslproxy": {"type": "str"},
            "sso": {"choices": [True, False], "type": "str"},
            "ssocredential": {"choices": ["PRIMARY", "SECONDARY"], "type": "str"},
            "storefronturl": {"type": "str"},
            "transparentinterception": {"choices": [True, False], "type": "str"},
            "uitheme": {"choices": ["DEFAULT", "GREENBUBBLE", "CUSTOM"], "type": "str"},
            "useiip": {"choices": ["NOSPILLOVER", "SPILLOVER", False], "type": "str"},
            "usemip": {"choices": ["NS", False], "type": "str"},
            "userdomains": {"type": "str"},
            "wihome": {"type": "str"},
            "wihomeaddresstype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "windowsautologon": {"choices": [True, False], "type": "str"},
            "windowsclienttype": {"choices": ["AGENT", "PLUGIN"], "type": "str"},
            "windowspluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "winsip": {"type": "str"},
            "wiportalmode": {"choices": ["NORMAL", "COMPACT"], "type": "str"},
        },
        "update_payload_keys": [
            "httpport",
            "winsip",
            "dnsvservername",
            "splitdns",
            "icauseraccounting",
            "sesstimeout",
            "clientsecurity",
            "clientsecuritylog",
            "smartgroup",
            "splittunnel",
            "locallanaccess",
            "rfc1918",
            "spoofiip",
            "killconnections",
            "transparentinterception",
            "defaultauthorizationaction",
            "authorizationgroup",
            "clientidletimeout",
            "proxy",
            "allprotocolproxy",
            "httpproxy",
            "ftpproxy",
            "socksproxy",
            "gopherproxy",
            "sslproxy",
            "proxyexception",
            "proxylocalbypass",
            "clientcleanupprompt",
            "forcecleanup",
            "clientoptions",
            "clientconfiguration",
            "sso",
            "ssocredential",
            "windowsautologon",
            "usemip",
            "useiip",
            "clientdebug",
            "loginscript",
            "logoutscript",
            "homepage",
            "icaproxy",
            "wihome",
            "citrixreceiverhome",
            "wiportalmode",
            "clientchoices",
            "iipdnssuffix",
            "forcedtimeout",
            "forcedtimeoutwarning",
            "ntdomain",
            "clientlessvpnmode",
            "clientlessmodeurlencoding",
            "clientlesspersistentcookie",
            "emailhome",
            "allowedlogingroups",
            "encryptcsecexp",
            "apptokentimeout",
            "mdxtokentimeout",
            "uitheme",
            "securebrowse",
            "storefronturl",
            "kcdaccount",
            "clientversions",
            "rdpclientprofilename",
            "windowspluginupgrade",
            "macpluginupgrade",
            "linuxpluginupgrade",
            "iconwithreceiver",
            "userdomains",
            "icasessiontimeout",
            "alwaysonprofilename",
            "autoproxyurl",
            "advancedclientlessvpnmode",
            "pcoipprofilename",
            "backendserversni",
            "backendcertvalidation",
            "fqdnspoofedip",
            "samesite",
            "clientsecuritygroup",
            "clientsecuritymessage",
            "wihomeaddresstype",
            "netmask",
        ],
    },
    "vpnpcoipprofile": {
        "add_payload_keys": [
            "name",
            "conserverurl",
            "icvverification",
            "sessionidletimeout",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "conserverurl": {"type": "str"},
            "icvverification": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "name": {"type": "str"},
            "sessionidletimeout": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "conserverurl",
            "icvverification",
            "sessionidletimeout",
        ],
    },
    "vpnpcoipvserverprofile": {
        "add_payload_keys": ["name", "logindomain", "udpport"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "logindomain": {"type": "str"},
            "name": {"type": "str"},
            "udpport": {"type": "int"},
        },
        "update_payload_keys": ["name", "udpport", "logindomain"],
    },
    "vpnportaltheme": {
        "add_payload_keys": ["name", "basetheme"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["basetheme", "name"],
        "primary_key": "name",
        "readwrite_arguments": {
            "basetheme": {
                "choices": ["Default", "Greenbubble", "X1", "RfWebUI"],
                "type": "str",
            },
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnsamlssoprofile": {
        "add_payload_keys": [
            "name",
            "samlsigningcertname",
            "assertionconsumerserviceurl",
            "relaystaterule",
            "sendpassword",
            "samlissuername",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "samlspcertname",
            "encryptionalgorithm",
            "skewtime",
            "signassertion",
            "signatureservice",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "assertionconsumerserviceurl": {"type": "str"},
            "attribute1": {"type": "str"},
            "attribute10": {"type": "str"},
            "attribute10expr": {"type": "str"},
            "attribute10format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute10friendlyname": {"type": "str"},
            "attribute11": {"type": "str"},
            "attribute11expr": {"type": "str"},
            "attribute11format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute11friendlyname": {"type": "str"},
            "attribute12": {"type": "str"},
            "attribute12expr": {"type": "str"},
            "attribute12format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute12friendlyname": {"type": "str"},
            "attribute13": {"type": "str"},
            "attribute13expr": {"type": "str"},
            "attribute13format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute13friendlyname": {"type": "str"},
            "attribute14": {"type": "str"},
            "attribute14expr": {"type": "str"},
            "attribute14format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute14friendlyname": {"type": "str"},
            "attribute15": {"type": "str"},
            "attribute15expr": {"type": "str"},
            "attribute15format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute15friendlyname": {"type": "str"},
            "attribute16": {"type": "str"},
            "attribute16expr": {"type": "str"},
            "attribute16format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute16friendlyname": {"type": "str"},
            "attribute1expr": {"type": "str"},
            "attribute1format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute1friendlyname": {"type": "str"},
            "attribute2": {"type": "str"},
            "attribute2expr": {"type": "str"},
            "attribute2format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute2friendlyname": {"type": "str"},
            "attribute3": {"type": "str"},
            "attribute3expr": {"type": "str"},
            "attribute3format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute3friendlyname": {"type": "str"},
            "attribute4": {"type": "str"},
            "attribute4expr": {"type": "str"},
            "attribute4format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute4friendlyname": {"type": "str"},
            "attribute5": {"type": "str"},
            "attribute5expr": {"type": "str"},
            "attribute5format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute5friendlyname": {"type": "str"},
            "attribute6": {"type": "str"},
            "attribute6expr": {"type": "str"},
            "attribute6format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute6friendlyname": {"type": "str"},
            "attribute7": {"type": "str"},
            "attribute7expr": {"type": "str"},
            "attribute7format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute7friendlyname": {"type": "str"},
            "attribute8": {"type": "str"},
            "attribute8expr": {"type": "str"},
            "attribute8format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute8friendlyname": {"type": "str"},
            "attribute9": {"type": "str"},
            "attribute9expr": {"type": "str"},
            "attribute9format": {"choices": ["URI", "Basic"], "type": "str"},
            "attribute9friendlyname": {"type": "str"},
            "audience": {"type": "str"},
            "digestmethod": {"choices": ["SHA1", "SHA256"], "type": "str"},
            "encryptassertion": {"choices": [True, False], "type": "str"},
            "encryptionalgorithm": {
                "choices": ["DES3", "AES128", "AES192", "AES256"],
                "type": "str",
            },
            "name": {"type": "str"},
            "nameidexpr": {"type": "str"},
            "nameidformat": {
                "choices": [
                    "Unspecified",
                    "emailAddress",
                    "X509SubjectName",
                    "WindowsDomainQualifiedName",
                    "kerberos",
                    "entity",
                    "persistent",
                    "transient",
                ],
                "type": "str",
            },
            "relaystaterule": {"type": "str"},
            "samlissuername": {"type": "str"},
            "samlsigningcertname": {"type": "str"},
            "samlspcertname": {"type": "str"},
            "sendpassword": {"choices": [True, False], "type": "str"},
            "signassertion": {
                "choices": ["NONE", "ASSERTION", "RESPONSE", "BOTH"],
                "type": "str",
            },
            "signaturealg": {"choices": ["RSA-SHA1", "RSA-SHA256"], "type": "str"},
            "signatureservice": {"type": "str"},
            "skewtime": {"type": "int"},
        },
        "update_payload_keys": [
            "name",
            "samlsigningcertname",
            "assertionconsumerserviceurl",
            "sendpassword",
            "samlissuername",
            "relaystaterule",
            "signaturealg",
            "digestmethod",
            "audience",
            "nameidformat",
            "nameidexpr",
            "attribute1",
            "attribute2",
            "attribute3",
            "attribute4",
            "attribute5",
            "attribute6",
            "attribute7",
            "attribute8",
            "attribute9",
            "attribute10",
            "attribute11",
            "attribute12",
            "attribute13",
            "attribute14",
            "attribute15",
            "attribute16",
            "encryptassertion",
            "samlspcertname",
            "encryptionalgorithm",
            "skewtime",
            "signassertion",
            "signatureservice",
            "attribute1expr",
            "attribute1friendlyname",
            "attribute1format",
            "attribute2expr",
            "attribute2friendlyname",
            "attribute2format",
            "attribute3expr",
            "attribute3friendlyname",
            "attribute3format",
            "attribute4expr",
            "attribute4friendlyname",
            "attribute4format",
            "attribute5expr",
            "attribute5friendlyname",
            "attribute5format",
            "attribute6expr",
            "attribute6friendlyname",
            "attribute6format",
            "attribute7expr",
            "attribute7friendlyname",
            "attribute7format",
            "attribute8expr",
            "attribute8friendlyname",
            "attribute8format",
            "attribute9expr",
            "attribute9friendlyname",
            "attribute9format",
            "attribute10expr",
            "attribute10friendlyname",
            "attribute10format",
            "attribute11expr",
            "attribute11friendlyname",
            "attribute11format",
            "attribute12expr",
            "attribute12friendlyname",
            "attribute12format",
            "attribute13expr",
            "attribute13friendlyname",
            "attribute13format",
            "attribute14expr",
            "attribute14friendlyname",
            "attribute14format",
            "attribute15expr",
            "attribute15friendlyname",
            "attribute15format",
            "attribute16expr",
            "attribute16friendlyname",
            "attribute16format",
        ],
    },
    "vpnsessionaction": {
        "add_payload_keys": [
            "name",
            "useraccounting",
            "httpport",
            "winsip",
            "dnsvservername",
            "splitdns",
            "sesstimeout",
            "clientsecurity",
            "clientsecuritylog",
            "splittunnel",
            "locallanaccess",
            "rfc1918",
            "spoofiip",
            "killconnections",
            "transparentinterception",
            "defaultauthorizationaction",
            "authorizationgroup",
            "smartgroup",
            "clientidletimeout",
            "proxy",
            "allprotocolproxy",
            "httpproxy",
            "ftpproxy",
            "socksproxy",
            "gopherproxy",
            "sslproxy",
            "proxyexception",
            "proxylocalbypass",
            "clientcleanupprompt",
            "forcecleanup",
            "clientoptions",
            "clientconfiguration",
            "sso",
            "ssocredential",
            "windowsautologon",
            "usemip",
            "useiip",
            "clientdebug",
            "loginscript",
            "logoutscript",
            "homepage",
            "icaproxy",
            "wihome",
            "citrixreceiverhome",
            "wiportalmode",
            "clientchoices",
            "iipdnssuffix",
            "forcedtimeout",
            "forcedtimeoutwarning",
            "ntdomain",
            "clientlessvpnmode",
            "emailhome",
            "clientlessmodeurlencoding",
            "clientlesspersistentcookie",
            "allowedlogingroups",
            "securebrowse",
            "storefronturl",
            "sfgatewayauthtype",
            "kcdaccount",
            "rdpclientprofilename",
            "windowspluginupgrade",
            "macpluginupgrade",
            "linuxpluginupgrade",
            "iconwithreceiver",
            "alwaysonprofilename",
            "autoproxyurl",
            "advancedclientlessvpnmode",
            "pcoipprofilename",
            "fqdnspoofedip",
            "clientsecuritygroup",
            "clientsecuritymessage",
            "wihomeaddresstype",
            "netmask",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "advancedclientlessvpnmode": {
                "choices": ["ENABLED", "DISABLED", "STRICT"],
                "type": "str",
            },
            "allowedlogingroups": {"type": "str"},
            "allprotocolproxy": {"type": "str"},
            "alwaysonprofilename": {"type": "str"},
            "authorizationgroup": {"type": "str"},
            "autoproxyurl": {"type": "str"},
            "citrixreceiverhome": {"type": "str"},
            "clientchoices": {"choices": [True, False], "type": "str"},
            "clientcleanupprompt": {"choices": [True, False], "type": "str"},
            "clientconfiguration": {"choices": ["none", "trace"], "type": "list"},
            "clientdebug": {
                "choices": ["debug", "stats", "events", False],
                "type": "str",
            },
            "clientidletimeout": {"type": "int"},
            "clientlessmodeurlencoding": {
                "choices": ["TRANSPARENT", "OPAQUE", "ENCRYPT"],
                "type": "str",
            },
            "clientlesspersistentcookie": {
                "choices": ["ALLOW", "DENY", "PROMPT"],
                "type": "str",
            },
            "clientlessvpnmode": {"choices": [True, False, "DISABLED"], "type": "str"},
            "clientoptions": {
                "choices": ["none", "all", "services", "filetransfer", "configuration"],
                "type": "str",
            },
            "clientsecurity": {"type": "str"},
            "clientsecuritygroup": {"type": "str"},
            "clientsecuritylog": {"choices": [True, False], "type": "str"},
            "clientsecuritymessage": {"type": "str"},
            "defaultauthorizationaction": {"choices": ["ALLOW", "DENY"], "type": "str"},
            "dnsvservername": {"type": "str"},
            "emailhome": {"type": "str"},
            "epaclienttype": {"choices": ["AGENT", "PLUGIN"], "type": "str"},
            "forcecleanup": {
                "choices": [
                    "none",
                    "all",
                    "cookie",
                    "addressbar",
                    "plugin",
                    "filesystemapplication",
                    "application",
                    "applicationdata",
                    "clientcertificate",
                    "autocomplete",
                    "cache",
                ],
                "type": "list",
            },
            "forcedtimeout": {"type": "int"},
            "forcedtimeoutwarning": {"type": "int"},
            "fqdnspoofedip": {"type": "str"},
            "ftpproxy": {"type": "str"},
            "gopherproxy": {"type": "str"},
            "homepage": {"type": "str"},
            "httpport": {"type": "list"},
            "httpproxy": {"type": "str"},
            "icaproxy": {"choices": [True, False], "type": "str"},
            "iconwithreceiver": {"choices": [True, False], "type": "str"},
            "iipdnssuffix": {"type": "str"},
            "kcdaccount": {"type": "str"},
            "killconnections": {"choices": [True, False], "type": "str"},
            "linuxpluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "locallanaccess": {"choices": [True, False, "FORCED"], "type": "str"},
            "loginscript": {"type": "str"},
            "logoutscript": {"type": "str"},
            "macpluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "name": {"type": "str"},
            "netmask": {"type": "str"},
            "ntdomain": {"type": "str"},
            "pcoipprofilename": {"type": "str"},
            "proxy": {"choices": ["BROWSER", "NS", False], "type": "str"},
            "proxyexception": {"type": "str"},
            "proxylocalbypass": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "rdpclientprofilename": {"type": "str"},
            "rfc1918": {"choices": [True, False], "type": "str"},
            "securebrowse": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "sesstimeout": {"type": "int"},
            "sfgatewayauthtype": {
                "choices": [
                    "domain",
                    "RSA",
                    "domainAndRSA",
                    "SMS",
                    "smartCard",
                    "sfAuth",
                    "sfAuthAndRSA",
                ],
                "type": "str",
            },
            "smartgroup": {"type": "str"},
            "socksproxy": {"type": "str"},
            "splitdns": {"choices": ["LOCAL", "REMOTE", "BOTH"], "type": "str"},
            "splittunnel": {"choices": [True, False, "REVERSE"], "type": "str"},
            "spoofiip": {"choices": [True, False], "type": "str"},
            "sslproxy": {"type": "str"},
            "sso": {"choices": [True, False], "type": "str"},
            "ssocredential": {"choices": ["PRIMARY", "SECONDARY"], "type": "str"},
            "storefronturl": {"type": "str"},
            "transparentinterception": {"choices": [True, False], "type": "str"},
            "useiip": {"choices": ["NOSPILLOVER", "SPILLOVER", False], "type": "str"},
            "usemip": {"choices": ["NS", False], "type": "str"},
            "useraccounting": {"type": "str"},
            "wihome": {"type": "str"},
            "wihomeaddresstype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "windowsautologon": {"choices": [True, False], "type": "str"},
            "windowsclienttype": {"choices": ["AGENT", "PLUGIN"], "type": "str"},
            "windowspluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "winsip": {"type": "str"},
            "wiportalmode": {"choices": ["NORMAL", "COMPACT"], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "useraccounting",
            "httpport",
            "winsip",
            "dnsvservername",
            "splitdns",
            "sesstimeout",
            "clientsecurity",
            "clientsecuritylog",
            "splittunnel",
            "locallanaccess",
            "rfc1918",
            "spoofiip",
            "killconnections",
            "transparentinterception",
            "defaultauthorizationaction",
            "authorizationgroup",
            "smartgroup",
            "clientidletimeout",
            "proxy",
            "allprotocolproxy",
            "httpproxy",
            "ftpproxy",
            "socksproxy",
            "gopherproxy",
            "sslproxy",
            "proxyexception",
            "proxylocalbypass",
            "clientcleanupprompt",
            "forcecleanup",
            "clientoptions",
            "clientconfiguration",
            "sso",
            "ssocredential",
            "windowsautologon",
            "usemip",
            "useiip",
            "clientdebug",
            "loginscript",
            "logoutscript",
            "homepage",
            "icaproxy",
            "wihome",
            "citrixreceiverhome",
            "wiportalmode",
            "clientchoices",
            "iipdnssuffix",
            "forcedtimeout",
            "forcedtimeoutwarning",
            "ntdomain",
            "clientlessvpnmode",
            "emailhome",
            "clientlessmodeurlencoding",
            "clientlesspersistentcookie",
            "allowedlogingroups",
            "securebrowse",
            "storefronturl",
            "sfgatewayauthtype",
            "kcdaccount",
            "rdpclientprofilename",
            "windowspluginupgrade",
            "macpluginupgrade",
            "linuxpluginupgrade",
            "iconwithreceiver",
            "alwaysonprofilename",
            "autoproxyurl",
            "advancedclientlessvpnmode",
            "pcoipprofilename",
            "fqdnspoofedip",
            "clientsecuritygroup",
            "clientsecuritymessage",
            "wihomeaddresstype",
            "netmask",
        ],
    },
    "vpnsessionpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "vpntrafficaction": {
        "add_payload_keys": [
            "name",
            "qual",
            "apptimeout",
            "sso",
            "hdx",
            "formssoaction",
            "fta",
            "wanscaler",
            "kcdaccount",
            "samlssoprofile",
            "proxy",
            "userexpression",
            "passwdexpression",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["qual"],
        "primary_key": "name",
        "readwrite_arguments": {
            "apptimeout": {"type": "int"},
            "formssoaction": {"type": "str"},
            "fta": {"choices": [True, False], "type": "str"},
            "hdx": {"choices": [True, False], "type": "str"},
            "kcdaccount": {"type": "str"},
            "name": {"type": "str"},
            "passwdexpression": {"type": "str"},
            "proxy": {"type": "str"},
            "qual": {"choices": ["http", "tcp"], "type": "str"},
            "samlssoprofile": {"type": "str"},
            "sso": {"choices": [True, False], "type": "str"},
            "userexpression": {"type": "str"},
            "wanscaler": {"choices": [True, False], "type": "str"},
        },
        "update_payload_keys": [
            "name",
            "apptimeout",
            "sso",
            "hdx",
            "formssoaction",
            "fta",
            "wanscaler",
            "kcdaccount",
            "samlssoprofile",
            "proxy",
            "userexpression",
            "passwdexpression",
        ],
    },
    "vpntrafficpolicy": {
        "add_payload_keys": ["name", "rule", "action"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "name": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action"],
    },
    "vpnurl": {
        "add_payload_keys": [
            "urlname",
            "linkname",
            "actualurl",
            "vservername",
            "clientlessaccess",
            "comment",
            "iconurl",
            "ssotype",
            "applicationtype",
            "samlssoprofile",
            "appjson",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "urlname",
        "readwrite_arguments": {
            "actualurl": {"type": "str"},
            "appjson": {"type": "str"},
            "applicationtype": {"choices": ["CVPN", "VPN", "SaaS"], "type": "str"},
            "clientlessaccess": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "iconurl": {"type": "str"},
            "linkname": {"type": "str"},
            "samlssoprofile": {"type": "str"},
            "ssotype": {
                "choices": ["unifiedgateway", "selfauth", "samlauth"],
                "type": "str",
            },
            "urlname": {"type": "str"},
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [
            "urlname",
            "linkname",
            "actualurl",
            "vservername",
            "clientlessaccess",
            "comment",
            "iconurl",
            "ssotype",
            "applicationtype",
            "samlssoprofile",
            "appjson",
        ],
    },
    "vpnurlaction": {
        "add_payload_keys": [
            "name",
            "linkname",
            "actualurl",
            "vservername",
            "clientlessaccess",
            "comment",
            "iconurl",
            "ssotype",
            "applicationtype",
            "samlssoprofile",
        ],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "actualurl": {"type": "str"},
            "applicationtype": {"choices": ["CVPN", "VPN", "SaaS"], "type": "str"},
            "clientlessaccess": {"choices": [True, False], "type": "str"},
            "comment": {"type": "str"},
            "iconurl": {"type": "str"},
            "linkname": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "samlssoprofile": {"type": "str"},
            "ssotype": {
                "choices": ["unifiedgateway", "selfauth", "samlauth"],
                "type": "str",
            },
            "vservername": {"type": "str"},
        },
        "update_payload_keys": [
            "name",
            "linkname",
            "actualurl",
            "vservername",
            "clientlessaccess",
            "comment",
            "iconurl",
            "ssotype",
            "applicationtype",
            "samlssoprofile",
        ],
    },
    "vpnurlpolicy": {
        "add_payload_keys": ["name", "rule", "action", "comment", "logaction"],
        "bindings": [],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "action": {"type": "str"},
            "comment": {"type": "str"},
            "logaction": {"type": "str"},
            "name": {"type": "str"},
            "newname": {"type": "str"},
            "rule": {"type": "str"},
        },
        "update_payload_keys": ["name", "rule", "action", "comment", "logaction"],
    },
    "vpnvserver": {
        "add_payload_keys": [
            "name",
            "servicetype",
            "ipv46",
            "port",
            "ipset",
            "authentication",
            "doublehop",
            "maxaaausers",
            "icaonly",
            "icaproxysessionmigration",
            "dtls",
            "loginonce",
            "advancedepa",
            "devicecert",
            "certkeynames",
            "downstateflush",
            "listenpolicy",
            "listenpriority",
            "tcpprofilename",
            "httpprofilename",
            "comment",
            "appflowlog",
            "icmpvsrresponse",
            "rhistate",
            "netprofile",
            "cginfrahomepageredirect",
            "maxloginattempts",
            "l2conn",
            "deploymenttype",
            "rdpserverprofilename",
            "windowsepapluginupgrade",
            "linuxepapluginupgrade",
            "macepapluginupgrade",
            "logoutonsmartcardremoval",
            "userdomains",
            "authnprofile",
            "vserverfqdn",
            "pcoipvserverprofilename",
            "nodefaultbindings",
            "samesite",
            "range",
            "failedlogintimeout",
        ],
        "bindings": [
            "vpnvserver_vpnepaprofile_binding",
            "vpnvserver_staserver_binding",
            "vpnvserver_intranetip6_binding",
            "vpnvserver_appflowpolicy_binding",
            "vpnvserver_vpneula_binding",
            "vpnvserver_authenticationtacacspolicy_binding",
            "vpnvserver_authenticationdfapolicy_binding",
            "vpnvserver_authenticationldappolicy_binding",
            "vpnvserver_vpnurl_binding",
            "vpnvserver_authenticationoauthidppolicy_binding",
            "vpnvserver_authenticationnegotiatepolicy_binding",
            "vpnvserver_vpnsessionpolicy_binding",
            "vpnvserver_feopolicy_binding",
            "vpnvserver_aaapreauthenticationpolicy_binding",
            "vpnvserver_authenticationlocalpolicy_binding",
            "vpnvserver_vpnportaltheme_binding",
            "vpnvserver_analyticsprofile_binding",
            "vpnvserver_authenticationloginschemapolicy_binding",
            "vpnvserver_responderpolicy_binding",
            "vpnvserver_authenticationsamlidppolicy_binding",
            "vpnvserver_authenticationcertpolicy_binding",
            "vpnvserver_vpnnexthopserver_binding",
            "vpnvserver_rewritepolicy_binding",
            "vpnvserver_auditnslogpolicy_binding",
            "vpnvserver_cspolicy_binding",
            "vpnvserver_authenticationwebauthpolicy_binding",
            "vpnvserver_sharefileserver_binding",
            "vpnvserver_authenticationradiuspolicy_binding",
            "vpnvserver_vpntrafficpolicy_binding",
            "vpnvserver_authenticationsamlpolicy_binding",
            "vpnvserver_vpnurlpolicy_binding",
            "vpnvserver_intranetip_binding",
            "vpnvserver_cachepolicy_binding",
            "vpnvserver_authenticationpolicy_binding",
            "vpnvserver_vpnintranetapplication_binding",
            "vpnvserver_vpnclientlessaccesspolicy_binding",
            "vpnvserver_icapolicy_binding",
            "vpnvserver_appcontroller_binding",
            "vpnvserver_auditsyslogpolicy_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": ["name"],
        "enable_payload_keys": ["name"],
        "get_arg_keys": [],
        "immutable_keys": [
            "servicetype",
            "deploymenttype",
            "range",
            "nodefaultbindings",
            "port",
        ],
        "primary_key": "name",
        "readwrite_arguments": {
            "advancedepa": {"choices": [True, False], "type": "str"},
            "appflowlog": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "authentication": {"choices": [True, False], "type": "str"},
            "authnprofile": {"type": "str"},
            "certkeynames": {"type": "str"},
            "cginfrahomepageredirect": {
                "choices": ["ENABLED", "DISABLED"],
                "type": "str",
            },
            "comment": {"type": "str"},
            "deploymenttype": {
                "choices": ["NONE", "ICA_WEBINTERFACE", "ICA_STOREFRONT", "MOBILITY"],
                "type": "str",
            },
            "devicecert": {"choices": [True, False], "type": "str"},
            "doublehop": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "downstateflush": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "dtls": {"choices": [True, False], "type": "str"},
            "failedlogintimeout": {"type": "int"},
            "httpprofilename": {"type": "str"},
            "icaonly": {"choices": [True, False], "type": "str"},
            "icaproxysessionmigration": {"choices": [True, False], "type": "str"},
            "icmpvsrresponse": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "ipset": {"type": "str"},
            "ipv46": {"type": "str"},
            "l2conn": {"choices": [True, False], "type": "str"},
            "linuxepapluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "listenpolicy": {"type": "str"},
            "listenpriority": {"type": "int"},
            "loginonce": {"choices": [True, False], "type": "str"},
            "logoutonsmartcardremoval": {"choices": [True, False], "type": "str"},
            "macepapluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
            "maxaaausers": {"type": "int"},
            "maxloginattempts": {"type": "int"},
            "name": {"type": "str"},
            "netprofile": {"type": "str"},
            "newname": {"type": "str"},
            "pcoipvserverprofilename": {"type": "str"},
            "port": {"type": "int"},
            "range": {"type": "int"},
            "rdpserverprofilename": {"type": "str"},
            "rhistate": {"choices": ["PASSIVE", "ACTIVE"], "type": "str"},
            "samesite": {"choices": ["None", "LAX", "STRICT"], "type": "str"},
            "servicetype": {"choices": ["SSL", "DTLS"], "type": "str"},
            "tcpprofilename": {"type": "str"},
            "userdomains": {"type": "str"},
            "vpnvserver_aaapreauthenticationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_analyticsprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_appcontroller_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_appflowpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_auditnslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_auditsyslogpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationcertpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationdfapolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationldappolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationlocalpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationloginschemapolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationnegotiatepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationoauthidppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationradiuspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationsamlidppolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationsamlpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationtacacspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_authenticationwebauthpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_cachepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_cspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_feopolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_icapolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_intranetip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_intranetip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_responderpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_rewritepolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_sharefileserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_staserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnclientlessaccesspolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnepaprofile_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpneula_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnintranetapplication_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnnexthopserver_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnportaltheme_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnsessionpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpntrafficpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnurl_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vpnvserver_vpnurlpolicy_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vserverfqdn": {"type": "str"},
            "windowsepapluginupgrade": {
                "choices": ["Always", "Essential", "Never"],
                "type": "str",
            },
        },
        "update_payload_keys": [
            "name",
            "ipv46",
            "ipset",
            "authentication",
            "doublehop",
            "icaonly",
            "icaproxysessionmigration",
            "dtls",
            "loginonce",
            "advancedepa",
            "devicecert",
            "certkeynames",
            "maxaaausers",
            "downstateflush",
            "listenpolicy",
            "listenpriority",
            "tcpprofilename",
            "httpprofilename",
            "comment",
            "appflowlog",
            "icmpvsrresponse",
            "rhistate",
            "netprofile",
            "cginfrahomepageredirect",
            "maxloginattempts",
            "rdpserverprofilename",
            "failedlogintimeout",
            "l2conn",
            "windowsepapluginupgrade",
            "macepapluginupgrade",
            "linuxepapluginupgrade",
            "logoutonsmartcardremoval",
            "userdomains",
            "authnprofile",
            "vserverfqdn",
            "pcoipvserverprofilename",
            "samesite",
        ],
    },
    "vpnvserver_aaapreauthenticationpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_analyticsprofile_binding": {
        "add_payload_keys": ["name", "analyticsprofile"],
        "bindprimary_key": "analyticsprofile",
        "delete_arg_keys": ["analyticsprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["analyticsprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "analyticsprofile": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_appcontroller_binding": {
        "add_payload_keys": ["name", "appcontroller"],
        "bindprimary_key": "appcontroller",
        "delete_arg_keys": ["appcontroller"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["appcontroller"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "appcontroller": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_appflowpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_auditnslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_auditsyslogpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationcertpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationdfapolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationldappolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationlocalpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationloginschemapolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationnegotiatepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationoauthidppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationradiuspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationsamlidppolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationsamlpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationtacacspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_authenticationwebauthpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_cachepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_cspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_feopolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_icapolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_intranetip6_binding": {
        "add_payload_keys": ["name", "intranetip6", "numaddr"],
        "bindprimary_key": "intranetip6",
        "delete_arg_keys": ["intranetip6", "numaddr"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip6", "numaddr"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "intranetip6": {"type": "str"},
            "name": {"type": "str"},
            "numaddr": {"type": "int"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_intranetip_binding": {
        "add_payload_keys": ["name", "intranetip", "netmask"],
        "bindprimary_key": "intranetip",
        "delete_arg_keys": ["intranetip", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetip", "netmask"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "intranetip": {"type": "str"},
            "name": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_responderpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_rewritepolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_sharefileserver_binding": {
        "add_payload_keys": ["name", "sharefile"],
        "bindprimary_key": "sharefile",
        "delete_arg_keys": ["sharefile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["sharefile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "sharefile": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vpnvserver_staserver_binding": {
        "add_payload_keys": ["name", "staserver", "staaddresstype"],
        "bindprimary_key": "staserver",
        "delete_arg_keys": ["staserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["staserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "staaddresstype": {"choices": ["IPV4", "IPV6"], "type": "str"},
            "staserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnclientlessaccesspolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnepaprofile_binding": {
        "add_payload_keys": ["name", "epaprofile", "epaprofileoptional"],
        "bindprimary_key": "epaprofile",
        "delete_arg_keys": ["epaprofile"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["epaprofile"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "epaprofile": {"type": "str"},
            "epaprofileoptional": {"type": "bool"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpneula_binding": {
        "add_payload_keys": ["name", "eula"],
        "bindprimary_key": "eula",
        "delete_arg_keys": ["eula"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["eula"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"eula": {"type": "str"}, "name": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vpnvserver_vpnintranetapplication_binding": {
        "add_payload_keys": ["name", "intranetapplication"],
        "bindprimary_key": "intranetapplication",
        "delete_arg_keys": ["intranetapplication"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["intranetapplication"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "intranetapplication": {"type": "str"},
            "name": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnnexthopserver_binding": {
        "add_payload_keys": ["name", "nexthopserver"],
        "bindprimary_key": "nexthopserver",
        "delete_arg_keys": ["nexthopserver"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["nexthopserver"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "nexthopserver": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnportaltheme_binding": {
        "add_payload_keys": ["name", "portaltheme"],
        "bindprimary_key": "portaltheme",
        "delete_arg_keys": ["portaltheme"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["portaltheme"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "portaltheme": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnsessionpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpntrafficpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vpnvserver_vpnurl_binding": {
        "add_payload_keys": ["name", "urlname"],
        "bindprimary_key": "urlname",
        "delete_arg_keys": ["urlname"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["urlname"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {"name": {"type": "str"}, "urlname": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vpnvserver_vpnurlpolicy_binding": {
        "add_payload_keys": [
            "name",
            "policy",
            "priority",
            "secondary",
            "groupextraction",
            "gotopriorityexpression",
            "bindpoint",
        ],
        "bindprimary_key": "policy",
        "delete_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["policy", "secondary", "groupextraction", "bindpoint"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "bindpoint": {
                "choices": [
                    "REQUEST",
                    "RESPONSE",
                    "ICA_REQUEST",
                    "OTHERTCP_REQUEST",
                    "AAA_REQUEST",
                    "AAA_RESPONSE",
                ],
                "type": "str",
            },
            "gotopriorityexpression": {"type": "str"},
            "groupextraction": {"type": "bool"},
            "name": {"type": "str"},
            "policy": {"type": "str"},
            "priority": {"type": "int"},
            "secondary": {"type": "bool"},
        },
        "update_payload_keys": [],
    },
    "vrid": {
        "add_payload_keys": [
            "id",
            "priority",
            "preemption",
            "sharing",
            "tracking",
            "ownernode",
            "trackifnumpriority",
            "preemptiondelaytimer",
        ],
        "bindings": [
            "vrid_channel_binding",
            "vrid_interface_binding",
            "vrid_trackinterface_binding",
            "vrid6_channel_binding",
            "vrid6_interface_binding",
            "vrid6_trackinterface_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": ["all"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "all": {"type": "bool"},
            "id": {"type": "int"},
            "ownernode": {"type": "int"},
            "preemption": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "preemptiondelaytimer": {"type": "int"},
            "priority": {"type": "int"},
            "sharing": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "trackifnumpriority": {"type": "int"},
            "tracking": {
                "choices": ["NONE", "ONE", "ALL", "PROGRESSIVE"],
                "type": "str",
            },
            "vrid6_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid6_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid6_trackinterface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid_trackinterface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "id",
            "priority",
            "preemption",
            "sharing",
            "tracking",
            "ownernode",
            "trackifnumpriority",
            "preemptiondelaytimer",
        ],
    },
    "vrid6": {
        "add_payload_keys": [
            "id",
            "priority",
            "preemption",
            "sharing",
            "tracking",
            "preemptiondelaytimer",
            "trackifnumpriority",
            "ownernode",
        ],
        "bindings": [
            "vrid6_channel_binding",
            "vrid6_interface_binding",
            "vrid6_trackinterface_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": ["all"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "all": {"type": "bool"},
            "id": {"type": "int"},
            "ownernode": {"type": "int"},
            "preemption": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "preemptiondelaytimer": {"type": "int"},
            "priority": {"type": "int"},
            "sharing": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "trackifnumpriority": {"type": "int"},
            "tracking": {
                "choices": ["NONE", "ONE", "ALL", "PROGRESSIVE"],
                "type": "str",
            },
            "vrid6_channel_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid6_interface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vrid6_trackinterface_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "id",
            "priority",
            "preemption",
            "sharing",
            "tracking",
            "preemptiondelaytimer",
            "trackifnumpriority",
            "ownernode",
        ],
    },
    "vrid6_channel_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vrid6_interface_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vrid6_trackinterface_binding": {
        "add_payload_keys": ["id", "trackifnum"],
        "bindprimary_key": "trackifnum",
        "delete_arg_keys": ["trackifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trackifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "trackifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vrid_channel_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vrid_interface_binding": {
        "add_payload_keys": ["id", "ifnum"],
        "bindprimary_key": "ifnum",
        "delete_arg_keys": ["ifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "ifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vrid_trackinterface_binding": {
        "add_payload_keys": ["id", "trackifnum"],
        "bindprimary_key": "trackifnum",
        "delete_arg_keys": ["trackifnum"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["trackifnum"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "trackifnum": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vxlan": {
        "add_payload_keys": [
            "id",
            "vlan",
            "port",
            "dynamicrouting",
            "ipv6dynamicrouting",
            "type",
            "innervlantagging",
            "protocol",
        ],
        "bindings": [
            "vxlan_nsip_binding",
            "vxlan_nsip6_binding",
            "vxlan_srcip_binding",
            "vxlanvlanmap_vxlan_binding",
        ],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["type", "protocol"],
        "primary_key": "id",
        "readwrite_arguments": {
            "dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "id": {"type": "int"},
            "innervlantagging": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "ipv6dynamicrouting": {"choices": ["ENABLED", "DISABLED"], "type": "str"},
            "port": {"type": "int"},
            "protocol": {"choices": ["IPv4", "IPv6", "ETHERNET", "NSH"], "type": "str"},
            "type": {"choices": ["VXLAN", "VXLANGPE"], "type": "str"},
            "vlan": {"type": "int"},
            "vxlan_nsip6_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vxlan_nsip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vxlan_srcip_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
            "vxlanvlanmap_vxlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [
            "id",
            "vlan",
            "port",
            "dynamicrouting",
            "ipv6dynamicrouting",
            "innervlantagging",
        ],
    },
    "vxlan_nsip6_binding": {
        "add_payload_keys": ["id", "ipaddress", "netmask"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vxlan_nsip_binding": {
        "add_payload_keys": ["id", "ipaddress", "netmask"],
        "bindprimary_key": "ipaddress",
        "delete_arg_keys": ["ipaddress", "netmask"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["ipaddress", "netmask"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {
            "id": {"type": "int"},
            "ipaddress": {"type": "str"},
            "netmask": {"type": "str"},
        },
        "update_payload_keys": [],
    },
    "vxlan_srcip_binding": {
        "add_payload_keys": ["id", "srcip"],
        "bindprimary_key": "srcip",
        "delete_arg_keys": ["srcip"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["srcip"],
        "immutable_keys": [],
        "primary_key": "id",
        "readwrite_arguments": {"id": {"type": "int"}, "srcip": {"type": "str"}},
        "update_payload_keys": [],
    },
    "vxlanvlanmap": {
        "add_payload_keys": ["name"],
        "bindings": ["vxlanvlanmap_vxlan_binding"],
        "bindprimary_key": "",
        "delete_arg_keys": [],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": [],
        "immutable_keys": ["name"],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "vxlanvlanmap_vxlan_binding": {
                "options": {
                    "binding_members": {"default": [], "type": "list"},
                    "mode": {
                        "choices": ["desired", "bind", "unbind"],
                        "default": "desired",
                        "type": "str",
                    },
                },
                "type": "dict",
            },
        },
        "update_payload_keys": [],
    },
    "vxlanvlanmap_vxlan_binding": {
        "add_payload_keys": ["name", "vxlan", "vlan"],
        "bindprimary_key": "vxlan",
        "delete_arg_keys": ["vxlan"],
        "disable_payload_keys": [],
        "enable_payload_keys": [],
        "get_arg_keys": ["vxlan"],
        "immutable_keys": [],
        "primary_key": "name",
        "readwrite_arguments": {
            "name": {"type": "str"},
            "vlan": {"type": "list"},
            "vxlan": {"type": "int"},
        },
        "update_payload_keys": [],
    },
}
